$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
102
0
Gpt3D_Clone102_0.java 1 12
Gpt3D_Clone102_0.java 13 30
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

private void type(char character)
{
    handleSpecialCharacter(character);
    switch (Character.getType(character))
    {
        case Character.LOWERCASE_LETTER:
            typeCharacter(Character.toUpperCase(character));
            break;
        case Character.UPPERCASE_LETTER:
            typeShiftCharacter(character);
            break;
        case Character.DECIMAL_DIGIT_NUMBER:
            typeCharacter(character);
            break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
110
0
Gpt3D_Clone110_0.java 1 7
Gpt3D_Clone110_0.java 8 16
----------------------------------------

public ListNode reverse (ListNode toBeNextNode, ListNode currentNode) {
    ListNode currentHead = currentNode;
    if ((currentNode == null || currentNode.next == null) && toBeNextNode == null) return currentHead;
    if (currentNode.next != null) currentHead = reverse (currentNode, currentNode.next);
    currentNode.next = toBeNextNode;
    return currentHead;
}
----------------------------------------

public ListNode reverse (ListNode toBeNextNode, ListNode currentNode) {
    ListNode currentHead = currentNode;
    if ((currentNode == null || currentNode.getNext() == null) && toBeNextNode == null) return currentHead;
    if (currentNode.getNext() != null) currentHead = reverse (currentNode, currentNode.getNext());
    currentNode.setNext(toBeNextNode);
    return currentHead;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
114
1
Gpt3D_Clone114_1.java 1 13
Gpt3D_Clone114_1.java 14 33
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

public Node reverse (Node previous, Node current) {
   if (previous == null) {
        return null;
    } else if (previous.equals (head)) {
        previous.setNext (null); 
    }
   
    // Conditionals inverted
    if (current != null) {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    } else {
        head = previous;
        return head;
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
115
0
Gpt3D_Clone115_0.java 1 13
Gpt3D_Clone115_0.java 14 31
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

public void reverse(Node previous, Node current) { 
    if (previous == null) {
        return;
    }
    if (previous.equals(head)) { 
        previous.setNext(null);
    }
    if (current == null) {
        head = previous;
        return;
    } else {
        Node temp = current.getNext(); 
        current.setNext(previous); 
        reverse(current, temp); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
115
1
Gpt3D_Clone115_1.java 1 13
Gpt3D_Clone115_1.java 14 29
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

public Node reverse(Node previous, Node current){ 
    if (previous == null) return null; 
    if (previous.equals(head)) {
        previous.setNext (null);
    }
    while(current != null) {
        Node temp = current.getNext(); 
        current.setNext (previous); 
        previous = current;
        current = temp;
    }
    head = previous; 
    return head;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
125
1
Gpt3D_Clone125_1.java 1 13
Gpt3D_Clone125_1.java 14 38
----------------------------------------

public static String center (String s, int size, char pad) {
    if (s == null || size <= s.length ()) return s;
    StringBuilder sb = new StringBuilder (size);
    for (int i = 0;
    i < (size - s.length ()) / 2; i ++) {
        sb.append (pad);
    }
    sb.append (s);
    while (sb.length () < size) {
        sb.append (pad);
    }
    return sb.toString ();
}
----------------------------------------

public static String center (String s, int size, char pad) {
    StringBuilder sb = new StringBuilder(size);
    if(s == null || s.length() >= size)  {
        for (int i = 0; i < size; i++)
            sb.append(pad);
        return sb.toString();  
    }
    int left = (size - s.length ()) / 2;
    int right = size - s.length () - left;
    for (int i = 0; i < left; i++)
        sb.append(pad);
    
    sb.append(s);
    for (int i = 0; i < right; i++)
        sb.append(pad);
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
125
3
Gpt3D_Clone125_3.java 1 13
Gpt3D_Clone125_3.java 14 34
----------------------------------------

public static String center (String s, int size, char pad) {
    if (s == null || size <= s.length ()) return s;
    StringBuilder sb = new StringBuilder (size);
    for (int i = 0;
    i < (size - s.length ()) / 2; i ++) {
        sb.append (pad);
    }
    sb.append (s);
    while (sb.length () < size) {
        sb.append (pad);
    }
    return sb.toString ();
}
----------------------------------------

public static String center (String s, int size, char pad) {
    if (s == null || s.length() >= size)
        return s;
    int left = (size - s.length ()) / 2;
    int right = size - s.length () - left;
    StringBuilder sb = new StringBuilder(size);
    for (int i = 0; i < left; i++)
        sb.append(pad);
    
    sb.append(s);
    for (int i = 0; i < right; i++)
        sb.append(pad);
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
127
0
Gpt3D_Clone127_0.java 1 6
Gpt3D_Clone127_0.java 7 20
----------------------------------------

long pow (long a, int b) {
    if (b == 0) return 1;
    if (b == 1) return a;
    if (isEven (b)) return pow (a * a, b / 2);
    else return a * pow (a * a, b / 2);
}
----------------------------------------

long pow (long a, int b) {
    if (b <= 1) {
        if (b == 0) return 1;
        else return a;
    }
    else if ((b & 1) == 0) {
        return pow (a * a, b / 2);
    }
    else {
        return a * pow (a * a, b / 2);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
128
0
Gpt3D_Clone128_0.java 1 17
Gpt3D_Clone128_0.java 18 33
----------------------------------------

private static int pow (int x, int n) {
    if (n == 0) return 1;
    if (n == 1) return x;
    if (n < 0) {
        if (x == 1 || (x == 2 && n == - 1)) return 1;
        else return 0;
    }
    if ((n & 1) == 0) {
        long num = pow (x * x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    } else {
        long num = x * pow (x * x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    }
}
----------------------------------------

private static int power (int x, int n) {
    if (n == 0) return 1;
    if (n == 1) return x;
    if (n < 0) {
        if (x == 1 || (x == 2 && n == - 1)) return 1;
        else return 0;
    }
    int result = x;
    while (n > 1) {
        result *= x;
        n--;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
128
1
Gpt3D_Clone128_1.java 1 17
Gpt3D_Clone128_1.java 18 32
----------------------------------------

private static int pow (int x, int n) {
    if (n == 0) return 1;
    if (n == 1) return x;
    if (n < 0) {
        if (x == 1 || (x == 2 && n == - 1)) return 1;
        else return 0;
    }
    if ((n & 1) == 0) {
        long num = pow (x * x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    } else {
        long num = x * pow (x * x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    }
}
----------------------------------------

private static int power (int x, int n) {
    if (n == 0) return 1;
    if (n == 1) return x;
    if (n < 0) {
        if (x == 1 || (x == 2 && n == - 1)) return 1;
        else return 0;
    }
    int result = 1;
    for (int i = 0; i < n; i++) {
        result *= x;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
12
0
Gpt3D_Clone12_0.java 1 19
Gpt3D_Clone12_0.java 20 31
----------------------------------------

static long countLines (InputStream is) throws IOException {
    try (LineNumberReader lnr = new LineNumberReader (new InputStreamReader (is))) {
        char [] buf = new char [8192];
        int n, previousN = - 1;
        while ((n = lnr.read (buf)) != - 1) {
            previousN = n;
        }
        int ln = lnr.getLineNumber ();
        if (previousN == - 1) {
            return 0;
        } else {
            char lastChar = buf [previousN - 1];
            if (lastChar == '\n' || lastChar == '\r') {
                return ln;
            }
        }
        return ln + 1;
    }
}
----------------------------------------

static long countLines (InputStream is) throws IOException {
    char [] buf = new char [8192];
    int numberOfLines = 0;
    try (LineNumberReader lnr = new LineNumberReader (new InputStreamReader (is))) {
        while (lnr.read (buf) != -1) {
            numberOfLines = lnr.getLineNumber ();
        }
    }
    return numberOfLines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
12
1
Gpt3D_Clone12_1.java 1 19
Gpt3D_Clone12_1.java 20 30
----------------------------------------

static long countLines (InputStream is) throws IOException {
    try (LineNumberReader lnr = new LineNumberReader (new InputStreamReader (is))) {
        char [] buf = new char [8192];
        int n, previousN = - 1;
        while ((n = lnr.read (buf)) != - 1) {
            previousN = n;
        }
        int ln = lnr.getLineNumber ();
        if (previousN == - 1) {
            return 0;
        } else {
            char lastChar = buf [previousN - 1];
            if (lastChar == '\n' || lastChar == '\r') {
                return ln;
            }
        }
        return ln + 1;
    }
}
----------------------------------------

static long countLines (InputStream is) throws IOException {
    try (BufferedReader br = new BufferedReader (new InputStreamReader (is))) {
        int ln = 0;
        while (br.readLine () != null) {
            ln++;
        }
        return ln;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
132
0
Gpt3D_Clone132_0.java 1 10
Gpt3D_Clone132_0.java 11 38
----------------------------------------

public static void main (String [] args) {
    String str1 = "";
    String str2 = null;
    String str3 = "Starts with upper case";
    String str4 = "starts with lower case";
    System.out.println (startWithUpperCase (str1));
    System.out.println (startWithUpperCase (str2));
    System.out.println (startWithUpperCase (str3));
    System.out.println (startWithUpperCase (str4));
}
----------------------------------------

public static void main (String [] args) {
    String str1 = "";
    String str2 = null;
    String str3 = "Starts with upper case";
    String str4 = " starts with lower case"; 
    if (startWithUpperCase (str1)) {
        System.out.println (true);
    } else {
        System.out.println (false); 
    }
    if (startWithUpperCase (str2)) {
        System.out.println (true);
    } else {
        System.out.println (false); 
    }
    if (startWithUpperCase (str3)) {
        System.out.println (true); 
    } else { 
        System.out.println (false);
    }
    if (startWithUpperCase (str4)) {
        System.out.println (true);
    } else {
        System.out.println (false); 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
132
1
Gpt3D_Clone132_1.java 1 10
Gpt3D_Clone132_1.java 11 26
----------------------------------------

public static void main (String [] args) {
    String str1 = "";
    String str2 = null;
    String str3 = "Starts with upper case";
    String str4 = "starts with lower case";
    System.out.println (startWithUpperCase (str1));
    System.out.println (startWithUpperCase (str2));
    System.out.println (startWithUpperCase (str3));
    System.out.println (startWithUpperCase (str4));
}
----------------------------------------

public static void main (String [] args) {
    String str1 = "";
    String str2 = null;
    String str3 = "Starts with upper case";
    String str4 = "starts with lower case";
    boolean isUpperCase1 = startWithUpperCase (str1);
    boolean isUpperCase2 = startWithUpperCase (str2); 
    boolean isUpperCase3 = startWithUpperCase (str3);
    boolean isUpperCase4 = startWithUpperCase (str4);
    System.out.println (isUpperCase1);
    System.out.println (isUpperCase2);
    System.out.println (isUpperCase3);
    System.out.println (isUpperCase4);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
0
Gpt3D_Clone136_0.java 1 10
Gpt3D_Clone136_0.java 11 29
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        SQLiteDatabase sql = null;
        try {
            DBHelper dbHelper = new DBHelper (this);
            sql = dbHelper.getWritableDatabase ();
            sql.execSQL ("insert statement for inserting path to database");
        } catch (Exception ex) {
            Log.e(TAG, ex.getMessage());
        } finally {
            if (sql != null)
                sql.close ();
            dbHelper.close ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
0
Gpt3D_Clone137_0.java 1 5
Gpt3D_Clone137_0.java 6 16
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    return this;
}
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Row " + row + " Column " + column + "\nThis cell is ");
    if (isSelected) 
        setToolTipText(getToolTipText() + " selected. \nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    else 
        setToolTipText(getToolTipText() + " not selected. \nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
13
0
Gpt3D_Clone13_0.java 1 8
Gpt3D_Clone13_0.java 9 25
----------------------------------------

public static int countLines (File input) throws IOException {
    try (InputStream is = new FileInputStream (input)) {
        int count = 1;
        for (int aChar = 0;
        aChar != - 1; aChar = is.read ()) count += aChar == '\n' ? 1 : 0;
        return count;
    }
}
----------------------------------------

public static int countLines (File input) throws IOException {
    InputStream is = new FileInputStream (input);
    int count = 1;
    boolean done = false;
    while(!done) {
        int aChar = is.read();
        if (aChar == - 1) {
            done = true;
        } else {
            count += aChar == '\n' ? 1 : 0;
        }
    }
    is.close();
    return count;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
13
1
Gpt3D_Clone13_1.java 1 8
Gpt3D_Clone13_1.java 9 21
----------------------------------------

public static int countLines (File input) throws IOException {
    try (InputStream is = new FileInputStream (input)) {
        int count = 1;
        for (int aChar = 0;
        aChar != - 1; aChar = is.read ()) count += aChar == '\n' ? 1 : 0;
        return count;
    }
}
----------------------------------------

public static int countLines (File input) throws IOException {
    InputStream is = new FileInputStream (input);
    int count = 1;
    while (true) {
        int aChar = is.read();
        if (aChar == -1) break;
        count += aChar == '\n' ? 1 : 0;
    }
    is.close();
    return count;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
13
2
Gpt3D_Clone13_2.java 1 8
Gpt3D_Clone13_2.java 9 21
----------------------------------------

public static int countLines (File input) throws IOException {
    try (InputStream is = new FileInputStream (input)) {
        int count = 1;
        for (int aChar = 0;
        aChar != - 1; aChar = is.read ()) count += aChar == '\n' ? 1 : 0;
        return count;
    }
}
----------------------------------------

public static int countLines (File input) throws IOException {
    InputStream is = new FileInputStream (input);
    int count = 1;
    try { 
        for (int aChar = 0;
        aChar != - 1; aChar = is.read ()) count += aChar == '\n' ? 1 : 0;
    } finally { 
        is.close();
    }
    return count;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
13
3
Gpt3D_Clone13_3.java 1 8
Gpt3D_Clone13_3.java 9 19
----------------------------------------

public static int countLines (File input) throws IOException {
    try (InputStream is = new FileInputStream (input)) {
        int count = 1;
        for (int aChar = 0;
        aChar != - 1; aChar = is.read ()) count += aChar == '\n' ? 1 : 0;
        return count;
    }
}
----------------------------------------

public static int countLines (File input) throws IOException {
    InputStream is = new FileInputStream (input);
    int count = 0;
    while (is.read() != -1) {
        if (is.read() == '\n') count++;
    }
    is.close();
    return count + 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
0
Gpt3D_Clone145_0.java 1 34
Gpt3D_Clone145_0.java 35 70
----------------------------------------

static void merge (int [] a, int [] l, int [] r) 
{
    int totElem = l.length + r.length;
    int i, li, ri;
    i = li = ri = 0;
    while (i < totElem) {
        if ((li < l.length) && (ri < r.length)) {
            if (l [li] < r [ri]) {
                a [i] = l [li];
                i ++;
                li ++;
            } else {
                a [i] = r [ri];
                i ++;
                ri ++;
            }
        } else {
            if (li >= l.length) {
                while (ri < r.length) {
                    a [i] = r [ri];
                    i ++;
                    ri ++;
                }
            }
            if (ri >= r.length) {
                while (li < l.length) {
                    a [i] = l [li];
                    li ++;
                    i ++;
                }
            }
        }
    }
}
----------------------------------------

static void merge (int [] a, int [] l, int [] r) 
{
    int szLL = l.length;
    int szRL = r.length;
    int totElem = szLL + szRL;
    int i, li, ri;
    li = ri = 0;
    for (i = 0; i < totElem; ++i) {
        if (li < szLL && ri < szRL) {
            if (l [li] < r [ri]) {
                a [i] = l [li];
                ++li;
            } else {
                a [i] = r [ri];
                ++ri;
            }
        } else {
            if (li < szLL) {
                while (li < szLL) {
                    a [i] = l [li];
                    ++li;
                    ++i;
                }
            }
            if (ri < szRL) {
                while (ri < szRL) {
                    a [i] = r [ri];
                    ++ri;
                    ++i;
                }
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
2
Gpt3D_Clone145_2.java 1 33
Gpt3D_Clone145_2.java 34 66
----------------------------------------

static void merge (int [] a, int [] l, int [] r) {
    int totElem = l.length + r.length;
    int i, li, ri;
    i = li = ri = 0;
    while (i < totElem) {
        if ((li < l.length) && (ri < r.length)) {
            if (l [li] < r [ri]) {
                a [i] = l [li];
                i ++;
                li ++;
            } else {
                a [i] = r [ri];
                i ++;
                ri ++;
            }
        } else {
            if (li >= l.length) {
                while (ri < r.length) {
                    a [i] = r [ri];
                    i ++;
                    ri ++;
                }
            }
            if (ri >= r.length) {
                while (li < l.length) {
                    a [i] = l [li];
                    li ++;
                    i ++;
                }
            }
        }
    }
}
----------------------------------------

static void merge (int [] a, int [] l, int [] r) {
    int totElem = l.length + r.length;
    int i, li, ri;
    li = ri = 0;
    for (i = 0; i < totElem; ++i) {
        if (li < l.length && ri < r.length) {
            if (l [li] < r [ri]) {
                a [i] = l [li];
                ++li;
            } else {
                a [i] = r [ri];
                ++ri;
            }
        } else {
            if (li < l.length) {
                while (li < l.length) {
                    a [i] = l [li];
                    ++li;
                    ++i;
                }
            }
            if (ri < r.length) {
                while (ri < r.length) {
                    a [i] = r [ri];
                    ++ri;
                    ++i;
                }
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
146
0
Gpt3D_Clone146_0.java 1 8
Gpt3D_Clone146_0.java 9 21
----------------------------------------

static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0;
    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));
}
----------------------------------------

public static void permute(int level, String prefix) {
    if (level == 0) {
        System.out.println(prefix);
        return;
    }
    int length = s.length();
    for (int i = 0; i < length; i++) {
        permute(level - 1, prefix + s.charAt(i));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
146
1
Gpt3D_Clone146_1.java 1 8
Gpt3D_Clone146_1.java 9 19
----------------------------------------

static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0;
    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));
}
----------------------------------------

public static void permute(int level, String prefix) {
    if (level == 0) {
        System.out.println(prefix);
    } else {
        for (int i = 0; i < s.length(); i++) {
            permute(level - 1, prefix + s.charAt(i));
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
14
0
Gpt3D_Clone14_0.java 1 8
Gpt3D_Clone14_0.java 9 24
----------------------------------------

public static int countLines (File input) throws IOException {
    try (InputStream is = new FileInputStream (input)) {
        int count = 1;
        for (int aChar = 0;
        aChar != - 1; aChar = is.read ()) count += aChar == '\n' ? 1 : 0;
        return count;
    }
}
----------------------------------------

public static int countLines (File input) throws IOException {
    int count = 0;
    try (InputStream is = new FileInputStream (input)) {
        input.open();
        while (true) {
            int aChar = is.read();
            if (aChar == -1) {
                break;
            }
            count += aChar == '\n' ? 1 : 0; 
        }
    }
    return count;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
156
3
Gpt3D_Clone156_3.java 1 19
Gpt3D_Clone156_3.java 20 31
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class<?> exceptionClass = getExceptionClass(className);
    if (CheckedException.class.isAssignableFrom (exceptionClass)) {
        throw getExceptionInstance (CheckedException.class, exceptionClass);
    } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
        throw getExceptionInstance (UncheckedException.class, exceptionClass);
    } else {
        throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
0
Gpt3D_Clone15_0.java 1 9
Gpt3D_Clone15_0.java 10 24
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.add(Calendar.MONTH, offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) {
        cal.add(Calendar.DAY_OF_MONTH, -7 + Calendar.FRIDAY - dayofweek);
    }
    else {
        cal.add(Calendar.DAY_OF_MONTH, Calendar.FRIDAY - dayofweek);
    }
    return cal;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
161
0
Gpt3D_Clone161_0.java 1 8
Gpt3D_Clone161_0.java 9 28
----------------------------------------

public static boolean isPermutation (String str1, String str2) {
    char [] x = str1.toCharArray ();
    char [] y = str2.toCharArray ();
    Arrays.sort (x);
    Arrays.sort (y);
    if (Arrays.equals (x, y)) return true;
    return false;
}
----------------------------------------

public static boolean isPermutation (String str1, String str2) {
    int str1Length = str1.length();
    int str2Length = str2.length();
    if (str1Length != str2Length) return false;
    
    StringBuilder str1Builder = new StringBuilder(str1.toLowerCase());
    StringBuilder str2Builder = new StringBuilder(str2.toLowerCase());
    for (int i = 0; i < str1Length; i++) {
        char ch = str1Builder.charAt(i);
        int index = str2Builder.indexOf(Character.toString(ch));
        if ( index >= 0) {
            str2Builder.deleteCharAt(index);
        } else {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
161
1
Gpt3D_Clone161_1.java 1 8
Gpt3D_Clone161_1.java 9 25
----------------------------------------

public static boolean isPermutation (String str1, String str2) {
    char [] x = str1.toCharArray ();
    char [] y = str2.toCharArray ();
    Arrays.sort (x);
    Arrays.sort (y);
    if (Arrays.equals (x, y)) return true;
    return false;
}
----------------------------------------

public static boolean isPermutation (String str1, String str2) {
    int str1Length = str1.length();
    int str2Length = str2.length();
    if (str1Length != str2Length) return false;
    
    char[] x = str1.toCharArray ();
    char[] y = str2.toCharArray ();
    Arrays.sort (x);
    Arrays.sort (y);
    int l = x.length;
    for (int i=0; i<l; i++) {
        if (x[i] != y[i]) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
161
2
Gpt3D_Clone161_2.java 1 8
Gpt3D_Clone161_2.java 9 31
----------------------------------------

public static boolean isPermutation (String str1, String str2) {
    char [] x = str1.toCharArray ();
    char [] y = str2.toCharArray ();
    Arrays.sort (x);
    Arrays.sort (y);
    if (Arrays.equals (x, y)) return true;
    return false;
}
----------------------------------------

public static boolean isPermutation (String str1, String str2) {
    int size1 = str1.length();
    int size2 = str2.length();
    if(size1 != size2)
        return false;
    else {
        char[] x = str1.toCharArray();
        char[] y = str2.toCharArray();
        Arrays.sort(x);
        Arrays.sort(y);
        for(int i=0; i<size1; i++) {
            if(x[i] != y[i])
                return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
161
3
Gpt3D_Clone161_3.java 1 8
Gpt3D_Clone161_3.java 9 27
----------------------------------------

public static boolean isPermutation (String str1, String str2) {
    char [] x = str1.toCharArray ();
    char [] y = str2.toCharArray ();
    Arrays.sort (x);
    Arrays.sort (y);
    if (Arrays.equals (x, y)) return true;
    return false;
}
----------------------------------------

public static boolean isPermutation (String str1, String str2) {
    int size1 = str1.length ();
    int size2 = str2.length ();
    if (size1 != size2) return false;
    char[] x = str1.toCharArray ();
    char[] y = str2.toCharArray ();
    Arrays.sort (x);
    Arrays.sort (y);
    for (int i=0; i<size1; i++)
        if (x[i] != y[i]) return false;
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
176
0
Gpt3D_Clone176_0.java 1 14
Gpt3D_Clone176_0.java 15 23
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Create Dialog");
    JDialog dialog = new JDialog ();
    dialog.getContentPane ().setLayout (null);
    for (int i = 0;
    i < 200; i ++) {
        dialog.add (new JTextField ("some text"));
    }
    dialog.setTitle ("Dialog " + count ++);
    dialog.setLocation (count * 25, count * 25);
    dialog.setVisible (true);
    System.out.println ("\tCreated " + dialog.getTitle ());
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Create Dialog");
    createDialog();
    System.out.println ("\tCreated " + dialog.getTitle ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
176
1
Gpt3D_Clone176_1.java 1 14
Gpt3D_Clone176_1.java 15 23
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Create Dialog");
    JDialog dialog = new JDialog ();
    dialog.getContentPane ().setLayout (null);
    for (int i = 0;
    i < 200; i ++) {
        dialog.add (new JTextField ("some text"));
    }
    dialog.setTitle ("Dialog " + count ++);
    dialog.setLocation (count * 25, count * 25);
    dialog.setVisible (true);
    System.out.println ("\tCreated " + dialog.getTitle ());
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Create Dialog");
    createDialog(dialog, count);
    System.out.println ("\tCreated " + dialog.getTitle ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
0
Gpt3D_Clone204_0.java 1 14
Gpt3D_Clone204_0.java 15 54
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    s1 = s1.toLowerCase ();
    s2 = s2.toLowerCase ();
    char [] c1 = s1.toCharArray ();
    char [] c2 = s2.toCharArray ();
    Arrays.sort (c1);
    Arrays.sort (c2);
    String sc1 = new String (c1);
    String sc2 = new String (c2);
    return sc1.equals (sc2);
}
----------------------------------------

public static boolean isAnagram (String s1, String s2){
    if(s1.length() != s2.length()){
        return false;
    }
    char letter1[] = s1.toLowerCase().toCharArray();
    char letter2[] = s2.toLowerCase().toCharArray();
    HashMap<Character, Integer> map1 = new HashMap<Character, Integer>();
    HashMap<Character, Integer> map2 = new HashMap<Character, Integer>();
    
    for(Character c : letter1) {
        if(map1.containsKey(c)){
            map1.put(c, map1.get(c)+1);
        } else {
            map1.put(c, 1);
        }
    }
    
    for(Character c : letter2) {
        if(map2.containsKey(c)){
            map2.put(c, map2.get(c)+1);
        } else {
            map2.put(c, 1);
        }
    }
    
    for(Character c : map1.keySet()) {
        if(map2.containsKey(c)) {
            if(map1.get(c) == map2.get(c)){
                continue;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
1
Gpt3D_Clone204_1.java 1 14
Gpt3D_Clone204_1.java 15 34
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    s1 = s1.toLowerCase ();
    s2 = s2.toLowerCase ();
    char [] c1 = s1.toCharArray ();
    char [] c2 = s2.toCharArray ();
    Arrays.sort (c1);
    Arrays.sort (c2);
    String sc1 = new String (c1);
    String sc2 = new String (c2);
    return sc1.equals (sc2);
}
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length() != s2.length()) {
        return false;
    }
    int[] checker = new int[26];
    s1 = s1.toLowerCase();
    s2 = s2.toLowerCase();
    for (int i = 0; i < s1.length(); i++) {
        checker[s1.charAt(i) - 'a']++;
        checker[s2.charAt(i) - 'a']--;
    }
    for (int i = 0; i < 26; i++) {
        if (checker[i] != 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
2
Gpt3D_Clone204_2.java 1 14
Gpt3D_Clone204_2.java 15 24
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    s1 = s1.toLowerCase ();
    s2 = s2.toLowerCase ();
    char [] c1 = s1.toCharArray ();
    char [] c2 = s2.toCharArray ();
    Arrays.sort (c1);
    Arrays.sort (c2);
    String sc1 = new String (c1);
    String sc2 = new String (c2);
    return sc1.equals (sc2);
}
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    s1 = s1.toLowerCase ();
    s2 = s2.toLowerCase ();
    return sortAnagram(s1, s2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
204
3
Gpt3D_Clone204_3.java 1 14
Gpt3D_Clone204_3.java 15 24
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    s1 = s1.toLowerCase ();
    s2 = s2.toLowerCase ();
    char [] c1 = s1.toCharArray ();
    char [] c2 = s2.toCharArray ();
    Arrays.sort (c1);
    Arrays.sort (c2);
    String sc1 = new String (c1);
    String sc2 = new String (c2);
    return sc1.equals (sc2);
}
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    s1 = s1.toLowerCase ();
    s2 = s2.toLowerCase ();
    return sortAndCompare(s1, s2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
0
Gpt3D_Clone206_0.java 1 14
Gpt3D_Clone206_0.java 15 39
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    s1 = s1.toLowerCase ();
    s2 = s2.toLowerCase ();
    char [] c1 = s1.toCharArray ();
    char [] c2 = s2.toCharArray ();
    Arrays.sort (c1);
    Arrays.sort (c2);
    String sc1 = new String (c1);
    String sc2 = new String (c2);
    return sc1.equals (sc2);
}
----------------------------------------

public static boolean isAnagram3 (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    s1 = s1.toLowerCase ();
    s2 = s2.toLowerCase ();
    char [] c1 = s1.toCharArray ();
    char [] c2 = s2.toCharArray ();
    int [] c1count = new int[256];
    int [] c2count = new int[256];
    for (char c: c1) {
        c1count[c]++;
    }
    for (char c: c2) {
        c2count[c]++;
    }
    for (int i = 0; i < 256; i++) {
        if (c1count[i] != c2count[i]) {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
208
0
Gpt3D_Clone208_0.java 1 17
Gpt3D_Clone208_0.java 18 39
----------------------------------------

static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    int n = s1.length ();
    int [] charMap = new int [256];
    for (int i = 0;
    i < n; i ++) {
        char c1 = s1.charAt (i);
        charMap [c1] ++;
        char c2 = s2.charAt (i);
        charMap [c2] --;
    }
    for (int i = 0;
    i < charMap.length; i ++) {
        if (charMap [i] != 0) return false;
    }
    return true;
}
----------------------------------------

//
static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    int n = s1.length ();
    Map<Character, Integer> charMap = new HashMap<>();
    for (int i = 0;
    i < n; i ++) {
        char c1 = s1.charAt (i);
        charMap.putIfAbsent(c1, 0);
        charMap.put(c1, charMap.get(c1) + 1);
        
        char c2 = s2.charAt (i);
        charMap.putIfAbsent(c2, 0);
        charMap.put(c2, charMap.get(c2) - 1);
    }
    for (Integer i: charMap.values()) {
        if (i != 0) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
210
0
Gpt3D_Clone210_0.java 1 16
Gpt3D_Clone210_0.java 17 35
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    HashSet hs = new HashSet();
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (hs.contains(test)) {
            hs.remove(test);
        } else {
            hs.add(test);
        }
    }
    for (int x : hs) {
        answer = x;
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
213
0
Gpt3D_Clone213_0.java 1 32
Gpt3D_Clone213_0.java 33 120
----------------------------------------

static String encrypt (String data) {
    String returned = new String ("");
    for (char h : data.toCharArray ()) {
        if (h == 'a') returned += " a', 'c";
        if (h == 'b') returned += "d";
        if (h == 'c') returned += "e";
        if (h == 'd') returned += "f";
        if (h == 'e') returned += "g";
        if (h == 'f') returned += "h";
        if (h == 'g') returned += "i";
        if (h == 'h') returned += "j";
        if (h == 'i') returned += "k";
        if (h == 'j') returned += "l";
        if (h == 'k') returned += "m";
        if (h == 'l') returned += "n";
        if (h == 'm') returned += "o";
        if (h == 'n') returned += "p";
        if (h == 'o') returned += "q";
        if (h == 'p') returned += "r";
        if (h == 'q') returned += "s";
        if (h == 'r') returned += "t";
        if (h == 's') returned += "u";
        if (h == 't') returned += "v";
        if (h == 'u') returned += "w";
        if (h == 'v') returned += "x";
        if (h == 'w') returned += "y";
        if (h == 'x') returned += "z";
        if (h == 'y') returned += "a";
        if (h == 'z') returned += "b";
    }
    return returned;
}
----------------------------------------

static String encrypt (String data) {
    String returned = new String ("");
    for (char h : data.toCharArray ()) {
        switch (h) {
            case 'a':
                returned += "a', 'c";
                break;
            case 'b':
                returned += "d";
                break;
            case 'c':
                returned += "e";
                break;
            case 'd':
                returned += "f";
                break;
            case 'e':
                returned += "g";
                break;
            case 'f':
                returned += "h";
                break;
            case 'g':
                returned += "i";
                break;
            case 'h':
                returned += "j";
                break;
            case 'i':
                returned += "k";
                break;
            case 'j':
                returned += "l";
                break;
            case 'k':
                returned += "m";
                break;
            case 'l':
                returned += "n";
                break;
            case 'm':
                returned += "o";
                break;
            case 'n':
                returned += "p";
                break;
            case 'o':
                returned += "q";
                break;
            case 'p':
                returned += "r";
                break;
            case 'q':
                returned += "s";
                break;
            case 'r':
                returned += "t";
                break;
            case 's':
                returned += "u";
                break;
            case 't':
                returned += "v";
                break;
            case 'u':
                returned += "w";
                break;
            case 'v':
                returned += "x";
                break;
            case 'w':
                returned += "y";
                break;
            case 'x':
                returned += "z";
                break;
            case 'y':
                returned += "a";
                break;
            case 'z':
                returned += "b";
                break;
        }
    }
    return returned;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
215
1
Gpt3D_Clone215_1.java 1 9
Gpt3D_Clone215_1.java 10 22
----------------------------------------

public static int solution (int X, int [] A) {
    Set < Integer > values = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (values.add (A [i])) X --;
        if (X == 0) return i;
    }
    return - 1;
}
----------------------------------------

public static int solution (int X, int [] A) {
    Set < Integer > values = new HashSet < Integer > ();
    int res = -1;
    for (int i = 0; i < A.length; i ++) {
        if (values.add (A [i]) && X == 0) 
            res = i;
        else 
            X--;
    }
    return res;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
220
0
Gpt3D_Clone220_0.java 1 15
Gpt3D_Clone220_0.java 16 32
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

public int solution (final int X, final int [] A) {
    int emptyPositionIndex = -1;
    for (int i = 0;
    i <= X; i ++) {
        for(int j = 0; j < A.length; j++)
        {
            if(A[j] == i)
            {
                emptyPositionIndex = j;
                break;
            }
        }
    }
    return emptyPositionIndex;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
220
1
Gpt3D_Clone220_1.java 1 15
Gpt3D_Clone220_1.java 16 29
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

public int solution (final int X, final int [] A) {
    int emptyPositionIndex = -1;
    
    for (int i = 0;
    i < A.length; i ++) {
        if (A[i] <= X) {
            emptyPositionIndex = i;
            break;
        }
    }
    return emptyPositionIndex;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
240
0
Gpt3D_Clone240_0.java 1 9
Gpt3D_Clone240_0.java 10 25
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

int solution_4(int X, int [] A) {
    int index = -1;
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
        i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains(X)) {
            if (leaves.size () == X) {
                index = i;
            }
        }
    }
    return index;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
240
1
Gpt3D_Clone240_1.java 1 9
Gpt3D_Clone240_1.java 10 25
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

int solution_3 (int X, int [] A) {
    int index = -1;
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.size () == X) {
            if (leaves.contains(X)) {
                index = i;
            }
        }
    }
    return index;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
0
Gpt3D_Clone242_0.java 1 9
Gpt3D_Clone242_0.java 10 23
----------------------------------------

public int solution (int X, int [] A) {
    HashSet < Integer > hset = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hset.add (A [i]);
        if (hset.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int [] arr = new int[X + 1];
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) arr [A[i]] = 1;
        int sum = 0;
        for (int j = 1; j <= X; j++)
            sum += arr[j];
        if (sum == X) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
1
Gpt3D_Clone242_1.java 1 9
Gpt3D_Clone242_1.java 10 23
----------------------------------------

public int solution (int X, int [] A) {
    HashSet < Integer > hset = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hset.add (A [i]);
        if (hset.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    BitSet bset = new BitSet (X + 1);
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) bset.set (A[i]);
        int sum = 0;
        for (int j = 0; j <= X; j++)
            sum += bset.get(j) ? 1 : 0;
        if (sum == X) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
0
Gpt3D_Clone243_0.java 1 15
Gpt3D_Clone243_0.java 16 32
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

public int solution (final int X, final int [] A) {
    boolean [] emptyPosition = new boolean [X];
    for (int i = 0;
    i < X; i ++) {
        emptyPosition[i] = true;
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition[A[i]-1] = false;
        if (allFalse(emptyPosition)) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
243
1
Gpt3D_Clone243_1.java 1 15
Gpt3D_Clone243_1.java 16 29
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

public int solution (final int X, final int [] A) {
    int emptyPosition = X;
    for (int i = 0; i < A.length; i ++) {
        if (A[i] <= X && A[i] > 0) {
            emptyPosition -= 1;
            if (emptyPosition == 0) {
                return i;
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
253
0
Gpt3D_Clone253_0.java 1 9
Gpt3D_Clone253_0.java 10 24
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) {
    Set<Integer> leaves = new HashSet<Integer>();
    int result = -1;
    for (int i = 0; i < A.length; i++) {
        if (A[i] <= X)
            leaves.add(A[i]);
        if (leaves.contains(X) && leaves.size() == X) {
            result = i;
            break;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
259
0
Gpt3D_Clone259_0.java 1 23
Gpt3D_Clone259_0.java 24 43
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    for (int i = X - 1; i >= 0; i--) {
        if (A [i] <= X) {
            isFilled[A[i] - 1] = 1;
        }
    }
    for (int i = 0; i < len; i++) {
        if (isFilled[i] == 0) {
            return -1;
        }
    }
    return X - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
25
1
Gpt3D_Clone25_1.java 1 13
Gpt3D_Clone25_1.java 14 23
----------------------------------------

protected void cleanup (JComponent c, boolean remove) {
    JTable source = (JTable) c;
    if (remove && rows != null) {
        DefaultTableModel model = (DefaultTableModel) source.getModel ();
        for (int i = rows.length - 1;
        i >= 0; i --) {
            model.removeRow (rows [i]);
        }
    }
    rows = null;
    addCount = 0;
    addIndex = - 1;
}
----------------------------------------

protected void cleanUp(JComponent component, boolean shouldRemove) {
   JTable source = (JTable) component;
   if (shouldRemove && rows != null) {
      DefaultTableModel model = (DefaultTableModel) source.getModel();
      removeRows(model);
   }
   resetRowsParams();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
1
Gpt3D_Clone266_1.java 1 9
Gpt3D_Clone266_1.java 10 21
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) { 
	Set<Integer> leaves = new HashSet<>(); 
	for (int i = 0; i < A.length; ++i) { 
		if (A[i] <= X) leaves.add(A[i]); 
		if (leaves.size() == X && leaves.contains(X)) { 
			return i; 
		}
	} 
	return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
268
0
Gpt3D_Clone268_0.java 1 10
Gpt3D_Clone268_0.java 11 32
----------------------------------------

public void isAvailable () {
    URL url = new URL ("URL HERE");
    HttpURLConnection connection = (HttpURLConnection) url.openConnection ();
    connection.setRequestProperty ("Connection", "close");
    connection.setConnectTimeout (10000);
    connection.connect ();
    if (connection.getResponseCode () == 200) {
        return true;
    } else return false;
}
----------------------------------------

public boolean isAvailable () {
    URL url;
    HttpURLConnection connection;
    try {
        url = new URL ("URL HERE");
        connection = (HttpURLConnection) url.openConnection ();
        connection.setRequestProperty ("Connection", "close");
        connection.setConnectTimeout (10000);
        connection.connect ();
        if (connection.getResponseCode () == 200) {
            return true;
        } else {
            return false;
        }
    } catch (IOException e) {
        e.printStackTrace ();
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
268
1
Gpt3D_Clone268_1.java 1 10
Gpt3D_Clone268_1.java 11 29
----------------------------------------

public void isAvailable () {
    URL url = new URL ("URL HERE");
    HttpURLConnection connection = (HttpURLConnection) url.openConnection ();
    connection.setRequestProperty ("Connection", "close");
    connection.setConnectTimeout (10000);
    connection.connect ();
    if (connection.getResponseCode () == 200) {
        return true;
    } else return false;
}
----------------------------------------

public boolean isAvailable () {
    try {
        URL url = new URL ("URL HERE");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection ();
        connection.setRequestProperty ("Connection", "close");
        connection.setConnectTimeout (10000);
        connection.connect ();
        if (connection.getResponseCode () == 200) {
            return true;
        } else {
            return false;
        }
    } catch (IOException e) {
        e.printStackTrace ();
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
0
Gpt3D_Clone26_0.java 1 10
Gpt3D_Clone26_0.java 11 22
----------------------------------------

public static void main (String [] argv) {
    final int x = 123456789;
    int newX = x;
    final double originalLog = Math.floor (Math.log10 (x));
    final int getRidOf = (int) Math.pow (10, originalLog);
    while (originalLog == Math.floor (Math.log10 (newX))) {
        newX -= getRidOf;
    }
    System.out.println (newX);
}
----------------------------------------

public static void main (String [] argv) {
    double x = 123456789;
    double newX = x;
    double originalLog = Math.floor (Math.log10 (x));
    double getRidOf = Math.pow (10, originalLog);
    while (originalLog == Math.floor (Math.log10 (newX))) {
        newX -= getRidOf;
    }
    System.out.println (newX);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
26
1
Gpt3D_Clone26_1.java 1 10
Gpt3D_Clone26_1.java 11 22
----------------------------------------

public static void main (String [] argv) {
    final int x = 123456789;
    int newX = x;
    final double originalLog = Math.floor (Math.log10 (x));
    final int getRidOf = (int) Math.pow (10, originalLog);
    while (originalLog == Math.floor (Math.log10 (newX))) {
        newX -= getRidOf;
    }
    System.out.println (newX);
}
----------------------------------------

public static void main (String [] argv) {
    long x = 123456789;
    long newX = x;
    int originalLog = (int) Math.floor (Math.log10 (x));
    long getRidOf = (long) Math.pow (10, originalLog);
    while (originalLog == Math.floor (Math.log10 (newX))) {
        newX -= getRidOf;
    }
    System.out.println (newX);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
270
1
Gpt3D_Clone270_1.java 1 18
Gpt3D_Clone270_1.java 19 34
----------------------------------------

static boolean isImmutable (Object obj) {
    Class < ? > objClass = obj.getClass ();
    Class < ? > superClass = objClass.getSuperclass ();
    if (! Immutable.class.equals (superClass)) {
        return false;
    }
    if (! Modifier.isFinal (objClass.getModifiers ())) {
        return false;
    }
    Field [] objFields = objClass.getDeclaredFields ();
    for (int i = 0;
    i < objFields.length; i ++) {
        if (! Modifier.isFinal (objFields [i].getModifiers ()) || ! isValidFieldType (objFields [i].getType ())) {
            return false;
        }
    }
    return true;
}
----------------------------------------

static boolean isImmutable (Object obj) {
    Class < ? > objClass = obj.getClass ();
    Class < ? > superClass = objClass.getSuperclass ();
    if (Immutable.class.equals (superClass)) {
        Field [] objFields = objClass.getDeclaredFields ();
        for (int i = 0;
        i < objFields.length; i ++) {
            if (Modifier.isFinal (objFields [i].getModifiers ()) && isValidFieldType (objFields [i].getType ())) {
                return true;
            }
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
0
Gpt3D_Clone274_0.java 1 8
Gpt3D_Clone274_0.java 9 28
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else {
    }
}
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String [] permissions, int [] grantResults) 
{
    switch(requestCode)
    {
        case REQUEST_CODE_CAMERA:
            if(grantResults[0] == PackageManager.PERMISSION_GRANTED)
            {
                
            } else 
            {
                
            } 
        break;
        default:
            super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
274
1
Gpt3D_Clone274_1.java 1 8
Gpt3D_Clone274_1.java 9 28
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (requestCode == REQUEST_CODE_CAMERA && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else {
    }
}
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String [] permissions, int [] grantResults) 
{
    if(requestCode == REQUEST_CODE_CAMERA)
    {
        if(grantResults[0] == PackageManager.PERMISSION_GRANTED)
        {
            
        } else 
        {
            
        }   
    }
    else
    {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    }
    
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
0
Gpt3D_Clone276_0.java 1 15
Gpt3D_Clone276_0.java 16 30
----------------------------------------

public static void bubbleSort (int [] numArray) {
    int n = numArray.length;
    int temp = 0;
    for (int i = 0;
    i < n; i ++) {
        for (int j = 1;
        j < (n - i); j ++) {
            if (numArray [j - 1] > numArray [j]) {
                temp = numArray [j - 1];
                numArray [j - 1] = numArray [j];
                numArray [j] = temp;
            }
        }
    }
}
----------------------------------------

public static void bubbleSort (int [] numArray) {
    int n = numArray.length; 
    int temp;
    for (int i = 0; i < n; i++) {
        for (int j = 1; j < n - i; j ++) {
            if (numArray [j - 1] > numArray [j]) {
                temp = numArray [j];
                numArray [j] = numArray [j - 1];
                numArray [j - 1] = temp;
            }
        } 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
276
1
Gpt3D_Clone276_1.java 1 15
Gpt3D_Clone276_1.java 16 30
----------------------------------------

public static void bubbleSort (int [] numArray) {
    int n = numArray.length;
    int temp = 0;
    for (int i = 0;
    i < n; i ++) {
        for (int j = 1;
        j < (n - i); j ++) {
            if (numArray [j - 1] > numArray [j]) {
                temp = numArray [j - 1];
                numArray [j - 1] = numArray [j];
                numArray [j] = temp;
            }
        }
    }
}
----------------------------------------

public static void bubbleSort (int [] numArray) {
    int n = numArray.length; 
    int temp;
    for (int i = 0; i < n; i++) {
        for (int j = 1; j < n - i ; j ++) {
            if (numArray [j - 1] < numArray [j]) {
                temp = numArray [j];
                numArray [j] = numArray [j - 1];
                numArray [j - 1] = temp;
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
277
1
Gpt3D_Clone277_1.java 1 10
Gpt3D_Clone277_1.java 11 20
----------------------------------------

boolean isBinaryFile (File f) throws IOException {
    String type = Files.probeContentType (f.toPath ());
    if (type == null) {
        return true;
    } else if (type.startsWith ("text")) {
        return false;
    } else {
        return true;
    }
}
----------------------------------------

boolean isBinaryFile (File f) throws IOException {
    String type = Files.probeContentType (f.toPath ());
    if (type != null && !type.startsWith ("text")) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
27
2
Gpt3D_Clone27_2.java 1 9
Gpt3D_Clone27_2.java 10 24
----------------------------------------

static String transpose (String s, int rows, int columns) {
    int n = s.length ();
    if (rows * columns != n) throw new IllegalArgumentException ();
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n - 1; i ++) sb.append (s.charAt (i * columns % (n - 1)));
    sb.append (s.charAt (n - 1));
    return sb.toString ();
}
----------------------------------------

static String transpose(String s, int rows, int columns) {
    int n = s.length();
    if (rows * columns != n) {
        throw new IllegalArgumentException();
    }
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n - 1; i++) {
        int index = i * columns % (n - 1);
        sb.append(s.charAt(index));
    }
    sb.append(s.charAt(n - 1));
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
294
0
Gpt3D_Clone294_0.java 1 10
Gpt3D_Clone294_0.java 11 25
----------------------------------------

public static int solution (Integer number) {
    String binary = Integer.toBinaryString (number);
    String [] gaps = binary.split ("1");
    String biggestGap = "";
    for (int i = 0;
    i < (binary.endsWith ("1") ? gaps.length : gaps.length - 1); i ++) {
        if (gaps [i].contains ("0") && gaps [i].length () > biggestGap.length ()) biggestGap = gaps [i];
    }
    return biggestGap.length ();
}
----------------------------------------

public static int solution (Integer number) {
    String binary = Integer.toBinaryString(number);
    String [] gaps = binary.split ("1");
    int gapSize = 0;
    int maxGap = 0;
    for (int i = 0; i < gaps.length; i++) {
        gapSize = gaps[i].length();
        if (gaps[i].contains("0") && gapSize > maxGap) {
            maxGap = gapSize;
        }
    }
    return maxGap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
294
1
Gpt3D_Clone294_1.java 1 10
Gpt3D_Clone294_1.java 11 24
----------------------------------------

public static int solution (Integer number) {
    String binary = Integer.toBinaryString (number);
    String [] gaps = binary.split ("1");
    String biggestGap = "";
    for (int i = 0;
    i < (binary.endsWith ("1") ? gaps.length : gaps.length - 1); i ++) {
        if (gaps [i].contains ("0") && gaps [i].length () > biggestGap.length ()) biggestGap = gaps [i];
    }
    return biggestGap.length ();
}
----------------------------------------

public static int solution (Integer number) {
    String binary = Integer.toOctalString(number);
    String [] gaps = binary.split ("1");
    int maxGap = 0;
    for (int i = 0; i < gaps.length; i++) {
        int gapSize = gaps[i].length();
        if (gaps[i].contains("0") && gapSize > maxGap) {
            maxGap = gapSize;
        }
    }
    return maxGap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
295
0
Gpt3D_Clone295_0.java 1 10
Gpt3D_Clone295_0.java 11 32
----------------------------------------

private static int solution (int N) {
    int gap = 0;
    String binaryStr = Integer.toBinaryString (N);
    String [] zeroArrays = binaryStr.split ("1");
    System.out.println (Arrays.toString (zeroArrays));
    for (String zeroArray : zeroArrays) {
        gap = zeroArray.length () > gap ? zeroArray.length () : gap;
    }
    return gap;
}
----------------------------------------

private static int solution (int N) {
    int gap = 0;
    String binaryStr = Integer.toBinaryString (N);
    char[] binaryStrChars = binaryStr.toCharArray();
    int length = binaryStrChars.length;
    int[] oneIndices = new int[length]; 
    int zeroLength;
    int j = 0;
    for(int i = 0; i < length; i++) {
        if (binaryStrChars[i] == '1') { 
            oneIndices[j] = i; 
            j++;
        }
    }
    for(int i = 0; i < j-1; i++){
        zeroLength = oneIndices[i+1] - oneIndices[i] - 1;
        gap = zeroLength > gap ? zeroLength : gap;
    }
    return gap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
303
0
Gpt3D_Clone303_0.java 1 10
Gpt3D_Clone303_0.java 11 29
----------------------------------------

public int loneSum (int a, int b, int c) {
    int sum = 0;
    boolean ab = a != b;
    boolean ac = a != c;
    boolean bc = b != c;
    if (ab && ac) sum += a;
    if (ab && bc) sum += b;
    if (bc && ac) sum += c;
    return sum;
}
----------------------------------------

public int loneSum (int a, int b, int c) {
    int sum = 0;
    boolean ab = a != b;
    boolean ac = a != c;
    boolean bc = b != c;
    if (ab) {
        if (ac) {
            sum += a;
        } else {
            sum += b;
        }
    }
    else if (bc && ac) {
        sum += c;
    }
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
303
1
Gpt3D_Clone303_1.java 1 10
Gpt3D_Clone303_1.java 11 28
----------------------------------------

public int loneSum (int a, int b, int c) {
    int sum = 0;
    boolean ab = a != b;
    boolean ac = a != c;
    boolean bc = b != c;
    if (ab && ac) sum += a;
    if (ab && bc) sum += b;
    if (bc && ac) sum += c;
    return sum;
}
----------------------------------------

public int loneSum (int a, int b, int c) {
    int sum = 0;
    boolean ab = a != b;
    boolean ac = a != c;
    boolean bc = b != c;
    if (ab && ac) {
        sum += a;
    }
    if (ab && bc) {
        sum += b;
    }
    if (bc && ac) {
        sum += c;
    }
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
303
2
Gpt3D_Clone303_2.java 1 10
Gpt3D_Clone303_2.java 11 22
----------------------------------------

public int loneSum (int a, int b, int c) {
    int sum = 0;
    boolean ab = a != b;
    boolean ac = a != c;
    boolean bc = b != c;
    if (ab && ac) sum += a;
    if (ab && bc) sum += b;
    if (bc && ac) sum += c;
    return sum;
}
----------------------------------------

public int loneSum (int a, int b, int c) {
    int sum = 0;
    boolean ab = a == b;
    boolean ac = a == c;
    boolean bc = b == c;
    if (ab || ac) sum += a;
    if (ab || bc) sum += b;
    if (bc || ac) sum += c;
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
305
0
Gpt3D_Clone305_0.java 1 10
Gpt3D_Clone305_0.java 11 29
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    try (ByteArrayOutputStream result = new ByteArrayOutputStream ()) {
        byte [] buffer = new byte [1024];
        int length;
        while ((length = inputStream.read (buffer)) != - 1) {
            result.write (buffer, 0, length);
        }
        return result.toString (UTF_8);
    }
}
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    ByteArrayOutputStream result = null;
    result = new ByteArrayOutputStream ();
    try {
        byte [] buffer = new byte [1024];
        int length;
        while ((length = inputStream.read (buffer)) != - 1) {
            result.write (buffer, 0, length);
        }
    }
    finally {
        if (result != null) {
            result.close ();
        }
    }
    return result.toString (UTF_8);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
311
0
Gpt3D_Clone311_0.java 1 13
Gpt3D_Clone311_0.java 14 43
----------------------------------------

public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == int [].class) {
            System.out.println (Arrays.toString ((int []) item));
        } else if (item.getClass () == double [].class) {
            System.out.println (Arrays.toString ((double []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass() == int [].class) {
            int[] x = (int[]) item;
            String y = "";
            for (int z : x) {
                y = y + z + " ";
            }
            System.out.println(y);
        } else if (item.getClass() == double [].class) {
            double[] x = (double[]) item;
            String y = "";
            for (double z : x) {
                y = y + z + " ";
            }
            System.out.println(y);
        } else if (item instanceof Object []) {
            Object[] x = (Object[]) item;
            String y = "";
            for (Object z : x) {
                y = y + z + " ";
            }
            System.out.println(y);
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
321
0
Gpt3D_Clone321_0.java 1 21
Gpt3D_Clone321_0.java 22 39
----------------------------------------

public V get (K...keys) {
    if (keys == null) {
        return value;
    }
    if (expectedNumberOfKeys == - 1) {
        return null;
    }
    if (expectedNumberOfKeys == 0) {
        return value;
    }
    if (expectedNumberOfKeys != keys.length) {
        throw new IllegalArgumentException ("Expecting " + expectedNumberOfKeys + " keys.  Was " + keys.length);
    }
    Map < K, Map > currentMap = topMap;
    for (int i = 0;
    i < keys.length - 1; i ++) {
        currentMap = (Map) getDefault (currentMap, keys [i]);
    }
    V result = (V) getDefault (currentMap, keys [keys.length - 1]);
    return result;
}
----------------------------------------

public V get (K...keys) {
    if (keys == null)
       return value;
    if (expectedNumberOfKeys == -1)
       return null;
    if (expectedNumberOfKeys == 0)
       return value;
    if (expectedNumberOfKeys != keys.length)
       throw new IllegalArgumentException ("Expecting " + expectedNumberOfKeys + " keys.  Was " + keys.length);
    Map< K, Map > currentMap = topMap;
    for (int i = 0; i < keys.length-1; i++){
        currentMap = (Map) getDefault (currentMap, keys[i]);
    }
    V result = (V) getDefault(currentMap, keys[keys.length - 1]);
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
325
1
Gpt3D_Clone325_1.java 1 19
Gpt3D_Clone325_1.java 20 35
----------------------------------------

public int read (char [] cbuf, int off, int len) throws IOException {
    int read = super.read (cbuf, off, len);
    if (read == - 1) {
        return - 1;
    }
    int pos = off - 1;
    for (int readPos = off;
    readPos < off + read; readPos ++) {
        if (read == '@') {
            continue;
        } else {
            pos ++;
        }
        if (pos < readPos) {
            cbuf [pos] = cbuf [readPos];
        }
    }
    return pos - off + 1;
}
----------------------------------------

public int read (char [] cbuf, int off, int len) throws IOException {
    int read = super.read (cbuf, off, len);
    if (read == - 1) {
        return - 1;
    }
    int pos = off;
    for (int readPos = off; readPos < off + read; readPos ++) {
        if (cbuf[readPos] != '@') {
            cbuf[pos] = cbuf[readPos];
            pos++;
        }
    }
    return pos - off;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
327
1
Gpt3D_Clone327_1.java 1 10
Gpt3D_Clone327_1.java 11 23
----------------------------------------

public void mouseMoved (MouseEvent e) {
    xpos = getX ();
    if (xpos < 0) {
        polyrot --;
    } else if (xpos > 0) {
        polyrot ++;
    }
    repaint ();
    break;
}
----------------------------------------

public void mouseMoved (MouseEvent e) {
    int xpos = getX ();
    if (xpos < 0) {
        if (polyrot > 0)
            polyrot--;
    } else {
        if (polyrot < 0)
            polyrot++;
    }
    repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
327
3
Gpt3D_Clone327_3.java 1 10
Gpt3D_Clone327_3.java 11 21
----------------------------------------

public void mouseMoved (MouseEvent e) {
    xpos = getX ();
    if (xpos < 0) {
        polyrot --;
    } else if (xpos > 0) {
        polyrot ++;
    }
    repaint ();
    break;
}
----------------------------------------

public void mouseMoved(MouseEvent e) {
    int xpos = getX();
    if (xpos < 0)
        polyrot--;
    else if (xpos > 0)
        polyrot++;
    repaint();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
0
Gpt3D_Clone328_0.java 1 8
Gpt3D_Clone328_0.java 9 26
----------------------------------------

public static void close (Statement...statements) {
    for (Statement stmt : statements) {
        try {
            if (stmt != null) stmt.close ();
        } catch (SQLException se) {
        }
    }
}
----------------------------------------

public static void close (Statement...statements) {
    for (Statement stmt : statements) {
        try {
            if (stmt != null) {
                if (stmt.isClosed()) {
                    System.out.println("Statement is already closed.");
                    return;
                } else {
                    stmt.close ();
                }
            }
        } catch (SQLException se) {
            System.err.println(se);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
1
Gpt3D_Clone328_1.java 1 8
Gpt3D_Clone328_1.java 9 24
----------------------------------------

public static void close (Statement...statements) {
    for (Statement stmt : statements) {
        try {
            if (stmt != null) stmt.close ();
        } catch (SQLException se) {
        }
    }
}
----------------------------------------

public static void close (Statement...statements) {
    for (Statement stmt : statements) {
        try {
            if (stmt != null) {
                if (stmt.isClosed()) {
                    return;
                } else {
                    stmt.close ();
                }
            }
        } catch (SQLException se) {
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
329
0
Gpt3D_Clone329_0.java 1 20
Gpt3D_Clone329_0.java 21 43
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    int[][] ar = new int[26][2];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j][0] == 0) {
            ar [j][0] = 1;
            ar [j][1] = j;
        } else {
            ar [j][0] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i][0] != 0 && ar [i][0] > 1) {
            char c = (char) (97 + ar[i][1]);
            System.out.println ("'" + c + "' comes " + ar [i][0] + " times.");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
332
0
Gpt3D_Clone332_0.java 1 24
Gpt3D_Clone332_0.java 25 46
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main(String[] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0;
    int countO = 0;
    int countSpace = 0;
    int countDot = 0;
    for (int i = 0; i < test.length(); i++) {
        char c = test.charAt(i);
        if (Character.toLowerCase(c) == 'a') {
            countA++;
        } else if (Character.toLowerCase(c) == 'o') {
            countO++;
        } else if (c == ' ') {
            countSpace++;
        } else if (c == '.') {
            countDot++;
        }
    }
    System.out.printf("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
332
1
Gpt3D_Clone332_1.java 1 24
Gpt3D_Clone332_1.java 25 47
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        char current = test.charAt(i);
        if (current == 'a' || current == 'A') {
            countA ++;
        }
        else if (current == 'o' || current == 'O') {
            countO ++;
        }
        else if (current == ' ') {
            countSpace ++;
        }
        else if (current == '.') {
            countDot ++;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
332
2
Gpt3D_Clone332_2.java 1 24
Gpt3D_Clone332_2.java 25 44
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        char c = test.charAt(i);
        if (c == 'a' || c == 'A') {
            countA++;
        } else if(c == 'o' || c == 'O') {
            countO++;
        } else if(c == ' ') {
            countSpace++;
        } else if(c == '.') {
            countDot++;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
337
1
Gpt3D_Clone337_1.java 1 24
Gpt3D_Clone337_1.java 25 47
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0; 
    int countO = 0; 
    int countSpace = 0; 
    int countDot = 0; 
    for (int i = 0;
    i < test.length (); i ++) {
        char c = test.charAt(i); 
        if(c == 'a' || c == 'A'){
            countA++; 
        } else if(c == 'o' || c == 'O'){
            countO++; 
        } else if(c == ' '){
            countSpace++; 
        } else if(c == '.'){
            countDot++; 
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
337
2
Gpt3D_Clone337_2.java 1 24
Gpt3D_Clone337_2.java 25 43
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        if (test.charAt (i) >= 'a' && test.charAt (i) <= 'z') {
            countA ++;
        } else if (test.charAt (i) >= 'A' && test.charAt (i) <= 'Z') {
            countO ++;
        } else if (test.charAt (i) == ' ') {
            countSpace ++;
        } else if (test.charAt (i) == '.') {
            countDot ++;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
337
3
Gpt3D_Clone337_3.java 1 24
Gpt3D_Clone337_3.java 25 43
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        if (test.charAt (i) == 'a' || test.charAt (i) == 'A') {
            countA ++;
        } else if (test.charAt (i) == 'o' || test.charAt (i) == 'O') {
            countO ++;
        } else if (test.charAt (i) == ' ') {
            countSpace ++;
        } else if (test.charAt (i) == '.') {
            countDot ++;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
338
0
Gpt3D_Clone338_0.java 1 21
Gpt3D_Clone338_0.java 22 40
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

public static void main (String...a) {
    System.out.print("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine();
    Map<Character, Integer> occurMap = new HashMap<>();
    for (int i = 0; i < st.length(); i++) {
        char c = st.charAt(i);
        occurMap.put(c, occurMap.containsKey(c) ? occurMap.get(c) + 1 : 1);
    }
    for (char c : occurMap.keySet()) {
        if (occurMap.get(c) == 1) {
            System.out.print(c);
        } else {
            System.out.print(c + "" + occurMap.get(c));
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
33
0
Gpt3D_Clone33_0.java 1 16
Gpt3D_Clone33_0.java 17 48
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isRight, String indent) throws IOException {
    if (right != null) {
        right.printTree (out, true, indent + (isRight ? "        " : " |      "));
    }
    out.write (indent);
    if (isRight) {
        out.write (" /");
    } else {
        out.write (" \\");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (left != null) {
        left.printTree (out, false, indent + (isRight ? " |      " : "        "));
    }
}
----------------------------------------

private void printTree (OutputStreamWriter out, boolean isLeftTree, String indent) throws IOException {
    if (isLeftTree) {
        if (left != null) {
            left.printTree (out, true, indent + "        ");
        }
    }
    else {
        if (right != null) {
            right.printTree (out, false, indent + " |      ");
        }
    }
    out.write (indent);
    if (isLeftTree) {
        out.write (" \\");
    } else {
        out.write (" /");
    }
    out.write ("----- ");
    printNodeValue (out);
    if (isLeftTree) {
        if (right != null) {
            right.printTree (out, false, indent + " |      ");
        }
    }
    else {
        if (left != null) {
            left.printTree (out, true, indent + "        ");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
341
0
Gpt3D_Clone341_0.java 1 24
Gpt3D_Clone341_0.java 25 44
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        char c = test.charAt(i);
        if (c == 'a' || c == 'A') {
            countA ++;
        } else if (c == 'o' || c == 'O') {
            countO ++;
        } else if (c == ' ') {
            countSpace ++;
        } else if (c == '.') {
            countDot ++;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
341
1
Gpt3D_Clone341_1.java 1 24
Gpt3D_Clone341_1.java 25 44
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        char c = test.charAt(i);
        if (Character.toLowerCase(c) == 'a') {
            countA++;
        } else if (Character.toLowerCase(c) == 'o') {
            countO++;
        } else if (c == ' ') {
            countSpace++;
        } else if (c == '.') {
            countDot++;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
341
2
Gpt3D_Clone341_2.java 1 24
Gpt3D_Clone341_2.java 25 45
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main(String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0; i < test.length(); i++) {
        if (test.charAt(i) == 'a' || test.charAt(i) == 'A') {
            countA++;
        }
        else if (test.charAt(i) == 'o' || test.charAt(i) == 'O') {
            countO++;
        }
        else if (test.charAt(i) == ' ') {
            countSpace++;
        } 
        else if (test.charAt(i) == '.') {
            countDot++;
        }
    }
    System.out.printf("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
341
3
Gpt3D_Clone341_3.java 1 24
Gpt3D_Clone341_3.java 25 41
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main(String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0; i < test.length(); i++) {
        if (test.charAt(i) == 'a' || test.charAt(i) == 'A')
            countA++;
        if (test.charAt(i) == 'o' || test.charAt(i) == 'O')
            countO++;
        if (test.charAt(i) == ' ')
            countSpace++;
        if (test.charAt(i) == '.')
            countDot++;
    }
    System.out.printf("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
343
0
Gpt3D_Clone343_0.java 1 24
Gpt3D_Clone343_0.java 25 53
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    Map<String, Integer> countMap = new HashMap<String, Integer>();
    countMap.put("A", 0);
    countMap.put("O", 0);
    countMap.put("Space", 0);
    countMap.put("Dot", 0);
    for (int i = 0;
    i < test.length (); i ++) {
        if (test.charAt(i) == 'a' || test.charAt(i) == 'A') {
            countMap.put("A", countMap.get("A") + 1);
        } 
        else if (test.charAt(i) == 'o' || test.charAt(i) == 'O') {
            countMap.put("O", countMap.get("O") + 1);
        }
        else if (test.charAt(i) == ' ') {
            countMap.put("Space", countMap.get("Space") + 1);
        } 
        else if (test.charAt(i) == '.') {
            countMap.put("Dot", countMap.get("Dot") + 1);
        }
    }
    System.out.print("A: " + countMap.get("A") + "\n");
    System.out.print("O: " + countMap.get("O") + "\n");
    System.out.print("Space: " + countMap.get("Space") + "\n");
    System.out.print("Dot: " + countMap.get("Dot"));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
343
3
Gpt3D_Clone343_3.java 1 24
Gpt3D_Clone343_3.java 25 46
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        if (test.charAt (i) == 'a' || test.charAt (i) == 'A') {
            countA ++;
        } 
        else if (test.charAt (i) == 'o' || test.charAt (i) == 'O') {
            countO ++;
        }
        else if (test.charAt (i) == ' ') {
            countSpace ++;
        } 
        else if (test.charAt (i) == '.') {
            countDot ++;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
345
0
Gpt3D_Clone345_0.java 1 24
Gpt3D_Clone345_0.java 25 48
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        char ch = test.charAt (i);
        if ( ch == 'a' ) {
            countA ++;
        } else if ( ch == 'A' ) {
            countA ++;   
        } else if ( ch == 'o' ) {
            countO ++;
        } else if ( ch == 'O' ) {
            countO ++;   
        } else if ( ch == ' ' ) {
            countSpace ++;
        } else if ( ch == '.' ) {
            countDot ++;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
345
1
Gpt3D_Clone345_1.java 1 24
Gpt3D_Clone345_1.java 25 49
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for(int i = 0; i < test.length(); i++) {
        char ch = test.charAt (i);
        if (ch == 'a' || ch == 'A') {
            countA ++;
        }
        else if (ch == 'o' || ch == 'O') {
            countO ++;
        }
        else if (ch == ' ') {
            countSpace ++;
        }
        else if (ch == '.') {
            countDot ++;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
345
2
Gpt3D_Clone345_2.java 1 24
Gpt3D_Clone345_2.java 25 47
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for(int i = 0; i < test.length(); i++) {
        if (test.charAt (i) == 'a' || test.charAt (i) == 'A') {
            countA ++;
        }
        else if (test.charAt (i) == 'o' || test.charAt (i) == 'O') {
            countO ++;
        }
        else if (test.charAt (i) == ' ') {
            countSpace ++;
        }
        else if (test.charAt (i) == '.') {
            countDot ++;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
349
0
Gpt3D_Clone349_0.java 1 10
Gpt3D_Clone349_0.java 11 37
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        InputStream is = new BufferedInputStream (new FileInputStream (file));
        XMLDecoder xd = new XMLDecoder (is);
        model = (DefaultTableModel) xd.readObject ();
        table.setModel (model);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e){
    FileInputStream fis = null;
    BufferedInputStream bis = null;
    XMLDecoder xd = null;
    try {
        fis = new FileInputStream(file);
        bis = new BufferedInputStream(fis);
        xd = new XMLDecoder(bis);
        model = (DefaultTableModel) xd.readObject();
        table.setModel (model);
    } catch (IOException ex){
        ex.printStackTrace ();
    } finally {
        try {
            if(fis != null) 
                fis.close();
            if(bis != null) 
                bis.close();
            if(xd != null) 
                xd.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
351
0
Gpt3D_Clone351_0.java 1 20
Gpt3D_Clone351_0.java 21 30
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    int index = (requestCode>> 16) & 0xffff;
    if (index != 0) {
        index --;
        String who = mPendingFragmentActivityResults.get (index);
        mPendingFragmentActivityResults.remove (index);
        if (who == null) {
            Log.w (TAG, "Activity result delivered for unknown Fragment.");
            return;
        }
        Fragment frag = mFragments.findFragmentByWho (who);
        if (frag == null) {
            Log.w (TAG, "Activity result no fragment exists for who: " + who);
        } else {
            frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);
        }
    }
}
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    int index = getIndex(requestCode);
    if (index != 0) {
        performChecks (index);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
352
0
Gpt3D_Clone352_0.java 1 23
Gpt3D_Clone352_0.java 24 40
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90.0);
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = new Label (series.getName ());
            label.setRotate (90.0);
            if (!bar.getChildren ().contains (label)) {
                bar.getChildren ().add (label);
            } else {
                ((Label) bar.getChildren ().get (0)).setText (series.getName ());
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
352
1
Gpt3D_Clone352_1.java 1 23
Gpt3D_Clone352_1.java 24 38
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90.0);
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = new Label (series.getName ());
            label.setRotate (90.0);
            if (!bar.getChildrenUnmodifiable ().contains (label)) {
                bar.getChildren ().add (label);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
354
1
Gpt3D_Clone354_1.java 1 22
Gpt3D_Clone354_1.java 23 46
----------------------------------------

public static void main (String [] args) {
    double [] [] data = {{97, 36, 79}, {94, 74, 60}, {68, 76, 58}, {64, 87, 56}, {68, 27, 73}, {74, 99, 42}, {7, 93, 87}, {51, 69, 40}, {38, 23, 33}, {57, 86, 31}};
    double data1 [] = new double [data.length];
    double data2 [] = new double [data.length];
    double data3 [] = new double [data.length];
    for (int x = 0;
    x < data.length; x ++) {
        for (int y = 0;
        y < data [x].length; y ++) {
            if (y == 0) data1 [x] = data [x] [y];
            else if (y == 1) data2 [x] = data [x] [y];
            else if (y == 2) data3 [x] = data [x] [y];
        }
    }
    for (int i = 0;
    i < data1.length; i ++) {
        System.out.print (data1 [i] + " ");
        System.out.print (data2 [i] + " ");
        System.out.print (data3 [i] + " ");
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    double [] [] data = {{97, 36, 79}, {94, 74, 60}, {68, 76, 58}, {64, 87, 56}, {68, 27, 73}, {74, 99, 42}, {7, 93, 87}, {51, 69, 40}, {38, 23, 33}, {57, 86, 31}};
    int columns = data[0].length;
    double dataArray [] = new double [data.length * columns];
    int dataCounter = 0;
    for (int x = 0; 
    x < data.length; x ++) {
        int dataRow = x * columns;
        for (int y = 0; 
        y < data[x].length; y ++) {
            dataCounter = dataRow + y;
            dataArray[dataCounter] = data[x][y];
        }
    }
    for (int i = 0; 
    i < dataArray.length; i ++) {
        System.out.print (dataArray [i] + " ");
        if ((i + 1) % 3 == 0) {
            System.out.println ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
354
3
Gpt3D_Clone354_3.java 1 22
Gpt3D_Clone354_3.java 23 43
----------------------------------------

public static void main (String [] args) {
    double [] [] data = {{97, 36, 79}, {94, 74, 60}, {68, 76, 58}, {64, 87, 56}, {68, 27, 73}, {74, 99, 42}, {7, 93, 87}, {51, 69, 40}, {38, 23, 33}, {57, 86, 31}};
    double data1 [] = new double [data.length];
    double data2 [] = new double [data.length];
    double data3 [] = new double [data.length];
    for (int x = 0;
    x < data.length; x ++) {
        for (int y = 0;
        y < data [x].length; y ++) {
            if (y == 0) data1 [x] = data [x] [y];
            else if (y == 1) data2 [x] = data [x] [y];
            else if (y == 2) data3 [x] = data [x] [y];
        }
    }
    for (int i = 0;
    i < data1.length; i ++) {
        System.out.print (data1 [i] + " ");
        System.out.print (data2 [i] + " ");
        System.out.print (data3 [i] + " ");
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    double [] [] data = {{97, 36, 79}, {94, 74, 60}, {68, 76, 58}, {64, 87, 56}, {68, 27, 73}, {74, 99, 42}, {7, 93, 87}, {51, 69, 40}, {38, 23, 33}, {57, 86, 31}};
    int columns = data[0].length;
    double dataArray [] = new double [data.length * columns];
    for (int x = 0; 
    x < data.length; x ++) {
        for (int y = 0; 
        y < data[x].length; y ++) {
            dataArray[x * columns + y] = data[x][y];
        }
    }
    for (int i = 0; 
    i < dataArray.length; i ++) {
        System.out.print (dataArray [i] + " ");
        if ((i + 1) % 3 == 0) {
            System.out.println ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
36
0
Gpt3D_Clone36_0.java 1 11
Gpt3D_Clone36_0.java 12 23
----------------------------------------

public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    Collections.shuffle (list);
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

public static void  shuffleArray2(int [] array) {
    Integer[] newArray = new Integer[array.length];
    for (int i = 0; i < array.length; i++) {
        newArray[i] = array[i];
    }
    Collections.shuffle(Arrays.asList(newArray));
    for (int i = 0; i < newArray.length; i++) {
        array[i] = newArray[i];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
36
1
Gpt3D_Clone36_1.java 1 11
Gpt3D_Clone36_1.java 12 22
----------------------------------------

public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    Collections.shuffle (list);
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

public static void shuffleArray(int[] array) {
    int temp;
    for(int i=0; i<array.length-1; i++){
        int randomIndex = (int) Math.floor(Math.random() * array.length);
        temp = array[randomIndex];
        array[randomIndex] = array[i];
        array[i] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
36
2
Gpt3D_Clone36_2.java 1 11
Gpt3D_Clone36_2.java 12 22
----------------------------------------

public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    Collections.shuffle (list);
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

public static void shuffleArray(int[] array) {
    int temp;
    for(int i=array.length-1; i>0; i--){
        int randomIndex = (int) Math.floor(Math.random() * i);
        temp = array[randomIndex];
        array[randomIndex] = array[i];
        array[i] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
36
3
Gpt3D_Clone36_3.java 1 11
Gpt3D_Clone36_3.java 12 23
----------------------------------------

public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    Collections.shuffle (list);
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

public static void  shuffleArray3(int [] array) {
    ArrayList<Integer> list = new ArrayList<Integer>();
    for(int i : array)
        list.add(i);
        
    Collections.shuffle(list);
    int i = 0;
    for(Integer num : list)
        array[i++] = num;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
374
1
Gpt3D_Clone374_1.java 1 9
Gpt3D_Clone374_1.java 10 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        subComboBox.setModel (new DefaultComboBoxModel ((String []) o));
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    DefaultComboBoxModel subCbModel = new DefaultComboBoxModel ();
    if (o == null) {
        subCbModel.addElement("");
    } else {
        for (String oObj : o){
            subCbModel.addElement(oObj);
        }
    }
    subComboBox.setModel (subCbModel);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
382
1
Gpt3D_Clone382_1.java 1 17
Gpt3D_Clone382_1.java 18 35
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int nxtVal = input[i+1];
        int j = i;
        while (j >= 0 && input[j] > nxtVal) {
            input[j+1] = input[j];
            j--;
        }
        input[j+1] = nxtVal;
    }
    System.out.println("Medium sorting is done and the result is :");
    for (int num : input) {
        System.out.print(num + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
384
0
Gpt3D_Clone384_0.java 1 17
Gpt3D_Clone384_0.java 18 36
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i;
        int nxtVal = input [k + 1];
        while (input [k] > nxtVal) {
            input [k + 1] = input [k];
            k --;
            if (k == -1) break;
        }
        input [k + 1] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
384
1
Gpt3D_Clone384_1.java 1 17
Gpt3D_Clone384_1.java 18 36
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

public void sort (int [] input) {
    int n;
    for (int i = 0;
    i < input.length - 1; i ++) {
        n = i;
        int nxtVal = input [i + 1];
        while (input [n] > nxtVal && n >= 0) {
            input [n + 1] = input [n];
            n --;
        }
        input [n + 1] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
38
0
Gpt3D_Clone38_0.java 1 11
Gpt3D_Clone38_0.java 12 30
----------------------------------------

public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    Collections.shuffle (list);
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    java.util.Random rnd = new java.util.Random();
    for (int i = list.size() - 1; i > 0; i--) {
        int index = rnd.nextInt(i + 1);
        int temp = list.get(index);
        list.set(index, list.get(i));
        list.set(i, temp);
    }
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
38
1
Gpt3D_Clone38_1.java 1 11
Gpt3D_Clone38_1.java 12 30
----------------------------------------

public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    Collections.shuffle (list);
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    int j, temp;
    for (int i = list.size() - 1; i > 0; i--) {
        j = (int)(Math.random()*(i+1));  //random index from 0 to i
        temp = list.get(i);
        list.set(i, list.get(j));
        list.set(j, temp);
    }
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
391
1
Gpt3D_Clone391_1.java 1 9
Gpt3D_Clone391_1.java 10 20
----------------------------------------

public static final void printArray (int [] arr) {
    System.out.print ("[");
    for (int i = 0;
    i < arr.length; i ++) {
        if (i == arr.length - 1) System.out.print (arr [i]);
        else System.out.print (arr [i] + ", ");
    }
    System.out.println ("]");
}
----------------------------------------

public static final void printArray (int [] arr) {
    String output = "[";
    for (int i = 0; i < arr.length; i ++) {
        if (i == arr.length - 1) output += arr [i];
        else output += arr [i] + ", ";
    }
    output += "]";
    System.out.println(output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
392
0
Gpt3D_Clone392_0.java 1 15
Gpt3D_Clone392_0.java 16 34
----------------------------------------

public static int mode (int [] [] arr) {
    List < Integer > list = new ArrayList < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        for (int j = 0;
        j < arr [i].length; j ++) {
            list.add (arr [i] [j]);
        }
    }
    int [] vector = new int [list.size ()];
    for (int i = 0;
    i < vector.length; i ++) {
        vector [i] = list.get (i);
    }
}
----------------------------------------

public static int mode(int[][] arr) {
    List<Integer> list = new ArrayList<Integer>();
    int i = 0;
    while (i < arr.length) {
        int j = 0;
        while (j < arr[i].length) {
            list.add(arr[i][j]);
            j++;
        }
        i++;
    }
    int[] vector = new int[list.size()];
    for (int k = 0;
    k < vector.length; k++) {
        vector[k] = list.get(k);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
39
0
Gpt3D_Clone39_0.java 1 8
Gpt3D_Clone39_0.java 9 21
----------------------------------------

public static void shuffle (int [] array) {
    if (random == null) random = new Random ();
    int count = array.length;
    for (int i = count;
    i > 1; i --) {
        swap (array, i - 1, random.nextInt (i));
    }
}
----------------------------------------

public static void shuffle (int [] array) {
    if (random == null) random = new Random ();
    int count = array.length;
    for (int i = count;
    i > 1; i --) {
        int j = random.nextInt (i);
        int temp = array[i-1];
        array[i-1] = array[j];
        array[j] = temp;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
0
Gpt3D_Clone435_0.java 1 17
Gpt3D_Clone435_0.java 18 43
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    Scanner s = new Scanner (System.in);
    System.out.print ("Enter an integer number: ");
    n = s.nextInt ();
    if (n <= 0) System.out.print ("Enter numbers greater than 0");
    else {
        NumberToWord a = new NumberToWord ();
        System.out.print ("After conversion number in words is :");
        a.pw ((n / 1000000000), " Hundred");
        a.pw ((n / 10000000) % 100, " crore");
        a.pw (((n / 100000) % 100), " lakh");
        a.pw (((n / 1000) % 100), " thousand");
        a.pw (((n / 100) % 10), " hundred");
        a.pw ((n % 100), " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    Scanner s = new Scanner (System.in);
    System.out.print ("Enter an integer number: ");
    n = s.nextInt ();
    if (n <= 0) 
        System.out.print ("Enter numbers greater than 0");
    else {
        NumberToWord a = new NumberToWord ();
        System.out.print ("After conversion number in words is :");
        int billion = n / 1000000000;
        a.display(billion, " Hundred");
        int crore = (n / 10000000) % 100;
        a.display(crore, " crore");
        int lakh = ((n / 100000) % 100);
        a.display(lakh, " lakh");
        int thousand = ((n / 1000) % 100);
        a.display(thousand, " thousand");
        int hundred = ((n / 100) % 10);
        a.display(hundred, " hundred");
        int remainder = (n % 100);
        a.display(remainder, " ");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
435
1
Gpt3D_Clone435_1.java 1 17
Gpt3D_Clone435_1.java 18 43
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    Scanner s = new Scanner (System.in);
    System.out.print ("Enter an integer number: ");
    n = s.nextInt ();
    if (n <= 0) System.out.print ("Enter numbers greater than 0");
    else {
        NumberToWord a = new NumberToWord ();
        System.out.print ("After conversion number in words is :");
        a.pw ((n / 1000000000), " Hundred");
        a.pw ((n / 10000000) % 100, " crore");
        a.pw (((n / 100000) % 100), " lakh");
        a.pw (((n / 1000) % 100), " thousand");
        a.pw (((n / 100) % 10), " hundred");
        a.pw ((n % 100), " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    Scanner s = new Scanner (System.in);
    System.out.print ("Enter an integer number: ");
    n = s.nextInt ();
    if (n <= 0) 
        System.out.print ("Enter numbers greater than 0");
    else {
        NumberToWord a = new NumberToWord ();
        System.out.print ("After conversion number in words is :");
        int billion = n / 1000000000;
        a.pw (billion, " Hundred");
        int crore = (n / 10000000) % 100;
        a.pw (crore, " crore");
        int lakh = ((n / 100000) % 100);
        a.pw (lakh, " lakh");
        int thousand = ((n / 1000) % 100);
        a.pw (thousand, " thousand");
        int hundred = ((n / 100) % 10);
        a.pw (hundred, " hundred");
        int remainder = (n % 100);
        a.pw (remainder, " ");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
442
0
Gpt3D_Clone442_0.java 1 22
Gpt3D_Clone442_0.java 23 54
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for(int x = 0; x < values.length; x++)
    {
      System.out.println (values[x] + " = " + processor.getName (values[x]));
    }
    for(int x = 0; x < strValues.length; x++)
    {
      System.out.println (strValues[x] + " = " + processor.getName (strValues[x]));
    }
    int[] randomDigits = new int[92];
    for(int i = 0; i < randomDigits.length; i++)
    {
        randomDigits[i] = (int)(Math.random()*10);
    }
    StringBuilder builder = new StringBuilder();
    for(int i = 0; i < 66; i++) //construct number
    {
        builder.append(randomDigits[i]);
    }
    builder.append(".");
    for(int i = 66; i < 92; i++)
    {
        builder.append(randomDigits[i]);
    }
    System.out.println (builder.toString() + " = " + processor.getName(builder.toString()));
    
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
442
1
Gpt3D_Clone442_1.java 1 22
Gpt3D_Clone442_1.java 23 44
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) 
        System.out.println (val + " = " + processor.getName (val));
    for (String strVal : strValues) 
        System.out.println (strVal + " = " + processor.getName (strVal));
    int digits = 92;
    int[] randomNums = new int[digits];
    for(int i = 0; i < digits; i++)
        randomNums[i] = (int)(Math.random()*10);
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0; d < 66; d ++) 
        bigNumber.append (randomNums[d]);
    bigNumber.append (".");
    for (int d = 66; d < 92; d ++) 
        bigNumber.append (randomNums[d]);
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
0
Gpt3D_Clone451_0.java 1 32
Gpt3D_Clone451_0.java 33 89
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String name;
    if (0 <= decimals) {
        String decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = processor.getName (value);
            if ("".equals (name)) {
                name = ZERO_TOKEN;
            } else if (negative) {
                name = MINUS.concat (SEPARATOR).concat (name);
            }
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            String decimalName = processor.getName (decimalValue);
            if (decimalName.length () == 0) {
                name = processor.getName (value);
                if ("".equals (name)) {
                    name = ZERO_TOKEN;
                } else if (negative) {
                    name = MINUS.concat (SEPARATOR).concat (name);
                }
                name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
            } else {
                name = processor.getName (value);
                if ("".equals (name)) {
                    name = ZERO_TOKEN;
                } else if (negative) {
                    name = MINUS.concat (SEPARATOR).concat (name);
                }
                name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (decimalName).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
            }
        }
    } else {
        name = processor.getName (value);
        if ("".equals (name)) {
            name = ZERO_TOKEN;
        } else if (negative) {
            name = MINUS.concat (SEPARATOR).concat (name);
        }
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
456
0
Gpt3D_Clone456_0.java 1 15
Gpt3D_Clone456_0.java 16 37
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main(String[] args) throws InterruptedException {
    BlockingQueue<Object> expensiveObjects = new LinkedBlockingQueue<>();
    expensiveObjects.put(new Object());
    expensiveObjects.put(new Object());
    expensiveObjects.put(new Object());
    expensiveObjects.put(new Object());
    Thread t1 = new Thread(new MyRunnable(expensiveObjects));
    Thread t2 = new Thread(new MyRunnable(expensiveObjects));
    Thread t3 = new Thread(new MyRunnable(expensiveObjects));
    Thread t4 = new Thread(new MyRunnable(expensiveObjects));
    t1.start();
    t2.start();
    t3.start();
    t4.start();
    t1.join();
    t2.join();
    t3.join();
    t4.join();
    System.out.println("Final: " + outputCount.get());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
457
0
Gpt3D_Clone457_0.java 1 10
Gpt3D_Clone457_0.java 11 28
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    AtomicInteger counter = new AtomicInteger ();
    ExecutorService pool = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; ++ i) {
        pool.execute (new MyTask (counter));
    }
    pool.shutdown ();
    pool.awaitTermination (1, TimeUnit.HOURS);
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    AtomicInteger counter = new AtomicInteger ();
    ExecutorService pool = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; ++ i) {
        pool.execute (() -> {
            try {
                new MyTask (counter).run();
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
    pool.shutdown ();
    pool.awaitTermination (1, TimeUnit.HOURS);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
466
0
Gpt3D_Clone466_0.java 1 15
Gpt3D_Clone466_0.java 16 34
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    for (int year = 1901, last_year = 2000;
    year <= last_year; year ++) {
        for (int month = 1, last_month = 12;
        month <= last_month; month ++) {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
        }
    }
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    int year = 1901, last_year = 2000;
    do {
        int month = 1, last_month = 12;
        do {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
            month ++;
        } while (month <= last_month);
        year ++;
    } while (year <= last_year);
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
469
3
Gpt3D_Clone469_3.java 1 9
Gpt3D_Clone469_3.java 10 19
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    byte [] address1 = {127, 0, 0, 1};
    byte [] address2 = {(byte) 173, (byte) 194, 32, 38};
    
    checkHostReachability(address1);
    checkHostReachability(address2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
471
2
Gpt3D_Clone471_2.java 1 11
Gpt3D_Clone471_2.java 12 19
----------------------------------------

private String capitalize (String s) {
    if (s == null || s.length () == 0) {
        return "";
    }
    char first = s.charAt (0);
    if (Character.isUpperCase (first)) {
        return s;
    } else {
        return Character.toUpperCase (first) + s.substring (1);
    }
}
----------------------------------------

private String capitalize (String s) {
    char first = s == null || s.length () == 0 ? 
                Character.UNASSIGNED : s.charAt (0);
    return Character.isUpperCase (first) ? s : 
            Character.toUpperCase (first) + s.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
489
0
Gpt3D_Clone489_0.java 1 24
Gpt3D_Clone489_0.java 25 60
----------------------------------------

int computeHeight () {
    int maxHeight = 0;
    int [] heights = new int [parent.length];
    for (int vertex = 0;
    vertex < n; vertex ++) {
        if (heights [vertex] != 0) continue;
        int height = 0;
        for (int i = vertex;
        i != - 1; i = parent [i]) {
            if (heights [i] != 0) {
                height += heights [i];
                break;
            }
            height ++;
        }
        maxHeight = Math.max (maxHeight, height);
        for (int i = vertex;
        i != - 1; i = parent [i]) {
            if (heights [i] != 0) break;
            heights [i] = height --;
        }
    }
    return maxHeight;
}
----------------------------------------

int computeHeight () {
    int maxHeight = 0;
    int [] heights = new int [parent.length];
    for (int vertex = 0;
    vertex < n; vertex ++) {
        if (heights [vertex] != 0) {
            continue;
        }
        
        int height = 0;
        int i = vertex;
        do {
            if (heights [i] != 0) {
                height += heights [i];
                break;
            }
            
            height ++;
            i = parent [i];
        } while (i != - 1);
        
        maxHeight = Math.max (maxHeight, height);
        i = vertex;
        do {
            if (heights [i] != 0) {
                break;
            }
            
            heights [i] = height --;
            i = parent [i];
        } while (i != - 1);
    }
    return maxHeight;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
494
1
Gpt3D_Clone494_1.java 1 10
Gpt3D_Clone494_1.java 11 22
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX = - 1 * deltaX;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY = - 1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

public void move (Container container) {
    if (x > canvasWidth || x < 0) {
        deltaX = - deltaX;
    }
    if (y > canvasHeight || y < 0) {
        deltaY = - deltaY;
    }
    x = x + deltaX;
    y = y + deltaY;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
494
2
Gpt3D_Clone494_2.java 1 10
Gpt3D_Clone494_2.java 11 22
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX = - 1 * deltaX;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY = - 1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX = deltaX * -1;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY = deltaY * -1;
    }
    x = x + deltaX;
    y = y + deltaY;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
495
0
Gpt3D_Clone495_0.java 1 10
Gpt3D_Clone495_0.java 11 26
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX = - 1 * deltaX;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY = - 1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

public void move(Container container) {
    if (x >= canvasWidth) {
        deltaX = -1 * deltaX;
    } else if (x <= 0) {
        deltaX = -1 * deltaX;
    }
    if (y >= canvasHeight) {
        deltaY = -1 * deltaY;
    } else if (y <= 0) {
        deltaY = -1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
523
0
Gpt3D_Clone523_0.java 1 8
Gpt3D_Clone523_0.java 9 15
----------------------------------------

public void mouseMoved (MouseEvent e) {
    int x = e.getX ();
    int y = e.getY ();
    int imgWidth = 50;
    int imgHeight = 50;
    l5.setBounds (x - (imgWidth / 2), y - (imgHeight / 2), imgWidth, imgHeight);
    l5.repaint ();
}
----------------------------------------

public void mouseMoved (MouseEvent e) {
    int imgSize = 50;
    l5.setBounds (e.getX () - (imgSize / 2), e.getY () - (imgSize / 2), imgSize, imgSize);
    l5.repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
526
0
Gpt3D_Clone526_0.java 1 28
Gpt3D_Clone526_0.java 29 57
----------------------------------------

private static String decrypt (final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0;
    i < groups.length; i ++) {
        final String group = groups [i];
        int j = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            j = group.length ();
        }
        if (group.length () > 2) {
            j = group.length () - 2;
        }
        for (int k = 0;
        k < j; k ++) {
            crypt.add (Integer.valueOf (group.substring (k, k + 1)));
        }
        if (j < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (j, group.length ())));
        }
    }
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------

private static String decrypt(final String s) {
	ArrayList<Integer> crypt = new ArrayList<>();
	String[] groups = s.split("#");
	for (int i = 0; i < groups.length; i++) {
		String group = groups[i];
		int j;
		if (i == groups.length - 1 && !s.endsWith("#")) {
			j = group.length();
		} else if (group.length() > 2) {
			j = group.length() - 2;
		} else {
			j = 0;
		}
		for (int k = 0; k < j; k++) {
			crypt.add(Integer.valueOf(group.substring(k, k + 1)));
		}
		if (j < group.length()) {
			crypt.add(Integer.valueOf(group.substring(j, group.length())));
		}
	}
	StringBuffer n = new StringBuffer(crypt.size());
	for (Integer c : crypt) {
		char d = (char) (('a' + c) - 1);
		n.append(d);
	}
	return n.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
526
1
Gpt3D_Clone526_1.java 1 28
Gpt3D_Clone526_1.java 29 57
----------------------------------------

private static String decrypt (final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0;
    i < groups.length; i ++) {
        final String group = groups [i];
        int j = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            j = group.length ();
        }
        if (group.length () > 2) {
            j = group.length () - 2;
        }
        for (int k = 0;
        k < j; k ++) {
            crypt.add (Integer.valueOf (group.substring (k, k + 1)));
        }
        if (j < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (j, group.length ())));
        }
    }
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------

private static String decrypt(final String s) {
	List<Integer> crypt = new ArrayList<>();
	String[] groups = s.split("#");
	for (int i = 0; i < groups.length; i++) {
		String group = groups[i];
		int j;
		if (i == groups.length - 1 && !s.endsWith("#")) {
			j = group.length();
		} else if (group.length() > 2) {
			j = group.length() - 2;
		} else {
			j = 0;
		}
		for (int k = 0; k < j; k++) {
			crypt.add(Integer.valueOf(group.substring(k, k + 1)));
		}
		if (j < group.length()) {
			crypt.add(Integer.valueOf(group.substring(j, group.length())));
		}
	}
	StringBuilder n = new StringBuilder(crypt.size());
	for (Integer c : crypt) {
		char d = (char) (('a' + c) - 1);
		n.append(d);
	}
	return n.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
527
0
Gpt3D_Clone527_0.java 1 10
Gpt3D_Clone527_0.java 11 29
----------------------------------------

public void refund (int balance) {
    while (balance >= 10) {
        System.out.println ("Balance: £" + balance);
        balance -= 10;
    }
    while (balance >= 0) {
        System.out.println ("Balance: £" + balance);
        balance -= 1;
    }
}
----------------------------------------

public void refund (int balance) {
    if (balance < 10) {
        while (balance > 0) {
            System.out.println ("Balance: £" + balance);
            balance -= 1;
        }
    } else {
        while (balance > 10) {
            System.out.println ("Balance: £" + balance);
            balance -= 10;
        }
        while (balance > 0) {
            System.out.println ("Balance: £" + balance);
            balance -= 1;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
533
1
Gpt3D_Clone533_1.java 1 25
Gpt3D_Clone533_1.java 26 46
----------------------------------------

public boolean equals (Object object) {
    if (this == object) {
        return true;
    }
    if (object == null) {
        return false;
    }
    if (! (object instanceof CircularList < ? >)) {
        return false;
    }
    CircularList < ? > that = (CircularList < ? >) object;
    Element < ? > first0 = first;
    Element < ? > current0 = first0;
    Element < ? > first1 = that.first;
    Element < ? > current1 = first1;
    while (true) {
        if (equalSequence (current0, current0, current1, current1)) {
            return true;
        }
        current1 = current1.next;
        if (current1 == first1) {
            return false;
        }
    }
}
----------------------------------------

public boolean equals (Object obj) {
    if (obj ==null || ! (obj instanceof CircularList < ? >)) {
        return false;
    }
    CircularList < ? > that = (CircularList < ? >) obj;
    Element < ? > first0 = first;
    Element < ? > first1 = that.first;
    Element < ? > current0 = first0, current1 = first1;
    while (true) {
        if (!equalSequence (current0, current0, current1, current1)) {
            return false;
        }
        current1 = current1.next;
        if (current1 == first1) {
            break;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
0
Gpt3D_Clone539_0.java 1 13
Gpt3D_Clone539_0.java 14 32
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    int lenWords = words.length;
    for (int i = 0; i < lenWords; i++) {
        String currWord = words[i];
        int lengthCurrWord = currWord.length();
        if (lengthCurrWord <= 3) {
            nthShortWord ++;
            if (nthShortWord == n) {
                shortWord = currWord;
                break;
            }
        }
    }
    return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
2
Gpt3D_Clone539_2.java 1 13
Gpt3D_Clone539_2.java 14 31
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

public String nthShortWord (String [] words, int n) {
    String shortWord = "notFound";
    int nthShortWord = 0;
    int i = 0;
    while (i < words.length) {
        if (words [i].length () <= 3) {
            nthShortWord ++;
            if (nthShortWord == n) {
                shortWord = nthShortWord [i];
                break;
            }
        }
        i++;
    }
    return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
53
0
Gpt3D_Clone53_0.java 1 14
Gpt3D_Clone53_0.java 15 48
----------------------------------------

public boolean isBalanced (String strExpression) {
    Map < Character, Character > bracketPair = new HashMap < Character, Character > ();
    bracketPair.put ('(', ')');
    bracketPair.put ('[', ']');
    bracketPair.put ('{', '}');
    Stack < Character > stk = new Stack < Character > ();
    for (int i = 0;
    i < strExpression.length (); i ++) {
        if (bracketPair.containsKey (strExpression.charAt (i))) stk.push (strExpression.charAt (i));
        else if (bracketPair.containsValue (strExpression.charAt (i))) if (stk.isEmpty () || bracketPair.get (stk.pop ()) != strExpression.charAt (i)) return false;
    }
    if (stk.isEmpty ()) return true;
    else return false;
}
----------------------------------------

public boolean isBalanced4 (String strExpression) {
    Stack<Character> stk = new Stack<Character>();
    for (int i = 0;
    i < strExpression.length(); i++) {
        if (strExpression.charAt(i) == '(' || strExpression.charAt(i) == '{' || strExpression.charAt(i) == '[') 
            stk.push(strExpression.charAt(i));
        else {
            if (stk.isEmpty()) 
                return false;
            if (strExpression.charAt(i) == ')'){
                char openingBracket = stk.pop();
                if (openingBracket != '(') 
                    return false;
            }
            else if (strExpression.charAt(i) == '}'){
                char openingBracket = stk.pop();
                if (openingBracket != '{') 
                    return false;
            } 
            else if (strExpression.charAt(i) == ']'){
                char openingBracket = stk.pop();
                if (openingBracket != '[') 
                    return false;
            }
        }
    }
    if (stk.isEmpty()) 
        return true;
    else 
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
53
1
Gpt3D_Clone53_1.java 1 14
Gpt3D_Clone53_1.java 15 35
----------------------------------------

public boolean isBalanced (String strExpression) {
    Map < Character, Character > bracketPair = new HashMap < Character, Character > ();
    bracketPair.put ('(', ')');
    bracketPair.put ('[', ']');
    bracketPair.put ('{', '}');
    Stack < Character > stk = new Stack < Character > ();
    for (int i = 0;
    i < strExpression.length (); i ++) {
        if (bracketPair.containsKey (strExpression.charAt (i))) stk.push (strExpression.charAt (i));
        else if (bracketPair.containsValue (strExpression.charAt (i))) if (stk.isEmpty () || bracketPair.get (stk.pop ()) != strExpression.charAt (i)) return false;
    }
    if (stk.isEmpty ()) return true;
    else return false;
}
----------------------------------------

public boolean isBalanced3 (String strExpression) {
    Stack<Character> stk = new Stack<Character>();
    for (int i = 0;
    i < strExpression.length(); i++){
        if (strExpression.charAt(i) == '(')
            stk.push(')');
        else if (strExpression.charAt(i) == '[')
            stk.push(']');
        else if (strExpression.charAt(i) == '{') 
            stk.push('}');
        else if (stk.isEmpty() || stk.pop() != strExpression.charAt(i)) 
            return false;
    }
    if (stk.isEmpty()) 
        return true;
    else 
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
546
1
Gpt3D_Clone546_1.java 1 19
Gpt3D_Clone546_1.java 20 38
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    for (int i = 0; i < arr1.length; i++) {
        sb1.append (arr1[i]);
        sb2.append (arr2[i]);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    return sb1.toString ().equals (sb2.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
546
2
Gpt3D_Clone546_2.java 1 19
Gpt3D_Clone546_2.java 20 32
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    String sortedS1 = String.valueOf (arr1);
    String sortedS2 = String.valueOf (arr2);
    if (sortedS1.equals(sortedS2)) return true;
    else return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
546
3
Gpt3D_Clone546_3.java 1 19
Gpt3D_Clone546_3.java 20 29
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    return Arrays.equals (arr1, arr2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
549
0
Gpt3D_Clone549_0.java 1 19
Gpt3D_Clone549_0.java 20 34
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    String str1 = String.valueOf (arr1);
    String str2 = String.valueOf (arr2);
    System.out.println (str1);
    System.out.println (str2);
    if (str1.equals (str2)) return true;
    else return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
549
1
Gpt3D_Clone549_1.java 1 19
Gpt3D_Clone549_1.java 20 34
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    String str1 = new String(arr1);
    String str2 = new String(arr2);
    System.out.println (str1);
    System.out.println (str2);
    if (str1.equals (str2)) return true;
    else return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
549
2
Gpt3D_Clone549_2.java 1 19
Gpt3D_Clone549_2.java 20 37
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    int[] letterCounts = new int[256]; 
    char [] s1_arr = s1.toCharArray(); 
    for (char c : s1_arr) { 
        letterCounts[c]++; 
    } 
    for (int i = 0; i < s2.length(); i++) { 
        int c = (int) s2.charAt(i); 
        if (--letterCounts[c] < 0) { 
            return false; 
        } 
    } 
     
    return true; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
549
3
Gpt3D_Clone549_3.java 1 19
Gpt3D_Clone549_3.java 20 35
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    
    Map<Character, Integer> charMap1 = new HashMap<>();  
    for (char c : s1.toCharArray()) {  
        charMap1.put(c, charMap1.containsKey(c) ? charMap1.get(c) + 1 : 1);  
    }
    Map<Character, Integer> charMap2 = new HashMap<>();  
    for (char c : s2.toCharArray()) {  
        charMap2.put(c, charMap2.containsKey(c) ? charMap2.get(c) + 1 : 1);  
    }
  
    return charMap1.equals(charMap2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
551
0
Gpt3D_Clone551_0.java 1 19
Gpt3D_Clone551_0.java 20 50
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    Map<Character, Integer> map = new HashMap<>();
    for (char c : arr1) {
        if (map.containsKey (c)) {
            int count = map.get(c);
            map.put (c, count + 1);
        } else {
            map.put (c, 1);
        }    
    }
    for (char c : arr2) {
        if (map.containsKey (c)) {
            int count = map.get (c);
            count--;
            if (count < 0) {
                return false;
            }
            map.put (c, count);
        } else {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
551
1
Gpt3D_Clone551_1.java 1 19
Gpt3D_Clone551_1.java 20 32
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (int i=0; i< arr1.length; i++) {
        if (arr1[i] != arr2[i]) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
552
0
Gpt3D_Clone552_0.java 1 19
Gpt3D_Clone552_0.java 20 34
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    String sorted1 = String.join ("", arr1);
    String sorted2 = String.join ("", arr2);
    System.out.println (sorted1);
    System.out.println (sorted2);
    if (sorted1.equals (sorted2)) return true;
    else return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
552
1
Gpt3D_Clone552_1.java 1 19
Gpt3D_Clone552_1.java 20 34
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    String sorted1 = new String (arr1);
    String sorted2 = new String (arr2);
    System.out.println (sorted1);
    System.out.println (sorted2);
    if (sorted1.equals (sorted2)) return true;
    else return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
552
2
Gpt3D_Clone552_2.java 1 19
Gpt3D_Clone552_2.java 20 32
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (int i = 0; i < arr1.length; i++) {
        if (arr1[i] != arr2[i]) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
552
3
Gpt3D_Clone552_3.java 1 19
Gpt3D_Clone552_3.java 20 29
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    return Arrays.equals (arr1, arr2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
556
1
Gpt3D_Clone556_1.java 1 9
Gpt3D_Clone556_1.java 10 21
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (ae.getSource () == select) {
        activeTool = SELECTION_TOOL;
    } else if (ae.getSource () == draw) {
        activeTool = DRAW_TOOL;
    } else if (ae.getSource () == text) {
        activeTool = TEXT_TOOL;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent ae){
    Object source = ae.getSource();
    if (source == select){
        activeTool = SELECTION_TOOL;
    } else if (source == draw){
        activeTool = DRAW_TOOL;
    } else if (source == text){
        activeTool = TEXT_TOOL;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
55
0
Gpt3D_Clone55_0.java 1 23
Gpt3D_Clone55_0.java 24 68
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

public static boolean isBalanced3 (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        switch (ch) {
            case ')':
                if (! stack.isEmpty () && stack.pop () == '('.charValue ()) {
                    result = true;
                } else {
                    return false;
                }
            break;
            case '}':
                if (! stack.isEmpty () && stack.pop () == '{'.charValue ()) {
                    result = true;
                } else {
                    return false;
                }
            break;
            case ']':
                if (! stack.isEmpty () && stack.pop () == '['.charValue ()) {
                    result = true;
                } else {
                    return false;
                }
            break;
            case '(':
            case '{':
            case '[':
                stack.push (ch);
            break;
        } 
    } 
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
560
3
Gpt3D_Clone560_3.java 1 17
Gpt3D_Clone560_3.java 18 28
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        InputStream stream = new FileInputStream(new File("image.jpg"));
        BufferedImage bi = ImageIO.read (stream);
        setImage (bi);
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
565
0
Gpt3D_Clone565_0.java 1 18
Gpt3D_Clone565_0.java 19 38
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) return true;
    if (obj == null) return false;
    if (getClass () != obj.getClass ()) return false;
    Connection other = (Connection) obj;
    if (dstAddr == null) {
        if (other.dstAddr != null) return false;
    } else if (! dstAddr.equals (other.dstAddr)) return false;
    if (dstPort != other.dstPort) return false;
    if (protocol == null) {
        if (other.protocol != null) return false;
    } else if (! protocol.equals (other.protocol)) return false;
    if (srcAddr == null) {
        if (other.srcAddr != null) return false;
    } else if (! srcAddr.equals (other.srcAddr)) return false;
    if (srcPort != other.srcPort) return false;
    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) return true;
    Connection other;
    if (!(obj instanceof Connection)) return false;
    else {
        other = (Connection) obj;
    }
    
    if (dstAddr.equals(other.dstAddr) 
            && dstPort==other.dstPort
            && protocol.equals(other.protocol)
            && srcAddr.equals(other.srcAddr)
            && srcPort==other.srcPort) {
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
565
1
Gpt3D_Clone565_1.java 1 18
Gpt3D_Clone565_1.java 19 31
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) return true;
    if (obj == null) return false;
    if (getClass () != obj.getClass ()) return false;
    Connection other = (Connection) obj;
    if (dstAddr == null) {
        if (other.dstAddr != null) return false;
    } else if (! dstAddr.equals (other.dstAddr)) return false;
    if (dstPort != other.dstPort) return false;
    if (protocol == null) {
        if (other.protocol != null) return false;
    } else if (! protocol.equals (other.protocol)) return false;
    if (srcAddr == null) {
        if (other.srcAddr != null) return false;
    } else if (! srcAddr.equals (other.srcAddr)) return false;
    if (srcPort != other.srcPort) return false;
    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (obj instanceof Connection && 
           this.dstAddr.equals(((Connection) obj).dstAddr) && 
           this.dstPort == ((Connection) obj).dstPort && 
           this.protocol.equals(((Connection) obj).protocol) &&
           this.srcAddr.equals(((Connection) obj).srcAddr) &&
           this.srcPort == ((Connection) obj).srcPort) {                    
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
567
1
Gpt3D_Clone567_1.java 1 24
Gpt3D_Clone567_1.java 25 42
----------------------------------------

public static void main (String [] args) {
    if (args.length != 2) {
        System.out.println ("usage: ./zipf size skew");
        System.exit (- 1);
    }
    ZipfGenerator zipf = new ZipfGenerator (Integer.valueOf (args [0]), Double.valueOf (args [1]));
    for (int i = 1;
    i <= 10; i ++) {
        System.out.println (i + " " + zipf.getProbability (i));
    }
    int hist [] = new int [12];
    for (int i = 0;
    i < 12; i ++) {
        hist [i] = 0;
    }
    System.out.println ("Testing the probability distribution:");
    int sum = 0;
    for (int i = 1;
    i <= 1000000; i ++) {
        hist [zipf.next ()] ++;
    }
    for (int i = 0;
    i < 12; i ++) System.out.println (i + " " + hist [i] / 1000000.0);
}
----------------------------------------

public static void main (String [] args) {
 if (args.length != 2) {
        System.out.println ("usage: ./zipf size skew");
        System.exit (- 1);
    }
    ZipfGenerator zipf = new ZipfGenerator (Integer.valueOf (args [0]), Double.valueOf (args [1]));
    int sum = 0;
    for (int i = 1;
    i <= 1000000; i ++) {
        sum += zipf.next ();
    }
    for (int i = 0;
    i < 10; i ++) {
        System.out.println (i + " Average prob: " + sum/1000000.0);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
0
Gpt3D_Clone572_0.java 1 10
Gpt3D_Clone572_0.java 11 30
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0; i < array.length; i ++) {
        int max = getMax (0, array);
        int maxIndex = 0;
        for (int j = 0; j < i; j++) {
            if (array[j] > max) {
                max = array[j];
                maxIndex = j;
            }
        }
        array[maxIndex] = -1;
        large [k ++] = max;
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
574
0
Gpt3D_Clone574_0.java 1 9
Gpt3D_Clone574_0.java 10 37
----------------------------------------

public static String replaceHostInUrl (String originalURL, String newAuthority) throws URISyntaxException, MalformedURLException {
    URI uri = new URI (originalURL);
    uri = new URI (uri.getScheme ().toLowerCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());
    int port = uri.getPort ();
    if (port > 0 && port == uri.toURL ().getDefaultPort ()) {
        uri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());
    }
    return uri.toString ();
}
----------------------------------------

public static String replaceHostInUrl (String originalURL, String newAuthority) {
    URI uri;
    try {
        // parse the original URL string
        uri = new URI (originalURL);
        // create a new URI object with the new authority
        uri = new URI (uri.getScheme ().toLowerCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());
        // check for the port
        int port  = uri.getPort ();
        if (port > 0 && port == uri.toURL ().getDefaultPort ()) {
            // create a new URI object with the port set to -1 if it's the same as the default port
            uri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());
        }
        // return the URI string
        return uri.toString ();
    } catch (URISyntaxException ex) {
        System.err.println ("URISyntaxException has occurred");
    } catch (MalformedURLException ex) {
        System.err.println ("MalformedURLException has occurred");
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
574
1
Gpt3D_Clone574_1.java 1 9
Gpt3D_Clone574_1.java 10 40
----------------------------------------

public static String replaceHostInUrl (String originalURL, String newAuthority) throws URISyntaxException, MalformedURLException {
    URI uri = new URI (originalURL);
    uri = new URI (uri.getScheme ().toLowerCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());
    int port = uri.getPort ();
    if (port > 0 && port == uri.toURL ().getDefaultPort ()) {
        uri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());
    }
    return uri.toString ();
}
----------------------------------------

public static String replaceHostInUrl (String originalURL, String newAuthority) {
    URI uri;
    
    try {
        // parse the original URL string
        uri = new URI (originalURL);
        // create a new URI object with the new authority
        uri = new URI (uri.getScheme ().toUpperCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());
        
        // get the port
        int port  = uri.getPort ();
        // check for the port
        if (port > 0 && port == uri.toURL ().getDefaultPort ()) {
            // create a new URI object with the port set to -1 if it's the same as the default port
            uri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());
        }
        
        // return the modified URI string 
        return uri.toString ();
    } catch (URISyntaxException ex) {
        System.err.println ("URISyntaxException has occurred");
    } catch (MalformedURLException ex) {
        System.err.println ("MalformedURLException has occurred");
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
577
0
Gpt3D_Clone577_0.java 1 12
Gpt3D_Clone577_0.java 13 28
----------------------------------------

private static float getRandomNumberBetween (float numberOne, float numberTwo) throws Exception {
    if (numberOne == numberTwo) {
        throw new Exception ("Both the numbers can not be equal");
    }
    float rand = (float) Math.random ();
    float highRange = Math.max (numberOne, numberTwo);
    float lowRange = Math.min (numberOne, numberTwo);
    float lowRand = (float) Math.floor (rand - 1);
    float highRand = (float) Math.ceil (rand + 1);
    float genRand = (highRange - lowRange) * ((rand - lowRand) / (highRand - lowRand)) + lowRange;
    return genRand;
}
----------------------------------------

private static float getRandomNumberBetween (float numberOne, float numberTwo) throws Exception {
    if (numberOne == numberTwo) {
        throw new Exception ("Both the numbers can not be equal");
    }
    float rand = (float) (Math.random() * (numberTwo - numberOne) + numberOne);
    float genRand;
    if (rand - (int) rand > 0.5) {
        genRand = (float) (Math.ceil(rand) + numberOne);
    }
    else {
        genRand = (float) (Math.floor(rand) + numberOne);
    }
    return genRand;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
577
1
Gpt3D_Clone577_1.java 1 12
Gpt3D_Clone577_1.java 13 21
----------------------------------------

private static float getRandomNumberBetween (float numberOne, float numberTwo) throws Exception {
    if (numberOne == numberTwo) {
        throw new Exception ("Both the numbers can not be equal");
    }
    float rand = (float) Math.random ();
    float highRange = Math.max (numberOne, numberTwo);
    float lowRange = Math.min (numberOne, numberTwo);
    float lowRand = (float) Math.floor (rand - 1);
    float highRand = (float) Math.ceil (rand + 1);
    float genRand = (highRange - lowRange) * ((rand - lowRand) / (highRand - lowRand)) + lowRange;
    return genRand;
}
----------------------------------------

private static float getRandomNumberBetween (float numberOne, float numberTwo) throws Exception {
    if (numberOne == numberTwo) {
        throw new Exception ("Both the numbers can not be equal");
    }
    float rand = (float)(Math.random () * (numberTwo - numberOne) + numberOne);
    return rand;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
580
1
Gpt3D_Clone580_1.java 1 12
Gpt3D_Clone580_1.java 13 24
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    int min = sc.nextInt ();
    System.out.println ("Enter max range:");
    int max = sc.nextInt ();
    double d = Math.random ();
    int result = (int) (min + (d* (max-min)));
    System.out.println ("Random Number between given range is " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
593
1
Gpt3D_Clone593_1.java 1 9
Gpt3D_Clone593_1.java 10 18
----------------------------------------

public static void main (String args []) {
    Object sharedObject = new Object ();
    MyClass sampleA = new MyClass ();
    sampleA.myObject = sharedObject;
    MyClass sampleB = new MyClass ();
    sampleB.myObject = sharedObject;
    System.out.println (sampleA.sharedObject == sampleB.sharedObject);
    System.out.println (sampleA == sampleB);
}
----------------------------------------

public static void main (String args []) {
    Object sharedObjectA = new Object ();
    MyClass sampleA = new MyClass (sharedObjectA);
    MyClass sampleB = new MyClass (sharedObjectA);
    System.out.println (sampleA.sharedObject == sampleB.sharedObject);
    System.out.println (sampleA == sampleB);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
594
0
Gpt3D_Clone594_0.java 1 12
Gpt3D_Clone594_0.java 13 36
----------------------------------------

public static int [] front11 (int [] a, int [] b) {
    int alen = (a != null) ? a.length : 0, blen = (b != null) ? b.length : 0;
    if (alen > 0 && blen > 0) {
        return new int [] {a [0], b [0]};
    } else if (alen > 0) {
        return new int [] {a [0]};
    } else if (blen > 0) {
        return new int [] {b [0]};
    } else {
        return new int [0];
    }
}
----------------------------------------

public static int [] front11 (int [] a, int [] b) {
    int alen, blen;
    if (a != null) {
        alen = a.length;
    } else {
        alen = 0;
    }
    if (b != null) {
        blen = b.length;
    } else {
        blen = 0;
    }
    if (alen > 0 && blen > 0) {
        return new int [] {a [0], b [0]};
    } else if (alen > 0) {
        return new int [] {a [0]};
    } else if (blen > 0) {
        return new int [] {b [0]};
    } else {
        return new int [0];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
594
1
Gpt3D_Clone594_1.java 1 12
Gpt3D_Clone594_1.java 13 35
----------------------------------------

public static int [] front11 (int [] a, int [] b) {
    int alen = (a != null) ? a.length : 0, blen = (b != null) ? b.length : 0;
    if (alen > 0 && blen > 0) {
        return new int [] {a [0], b [0]};
    } else if (alen > 0) {
        return new int [] {a [0]};
    } else if (blen > 0) {
        return new int [] {b [0]};
    } else {
        return new int [0];
    }
}
----------------------------------------

public static int[] front11(int[] a, int[] b) {
    int alen = a != null ? a.length : 0;
    int blen = b != null ? b.length : 0;
    if(alen > 0 && blen > 0) {
        int[] retArr = new int[2];
        retArr[0] = a[0];
        retArr[1] = b[0];
        return retArr;
    } else if(alen > 0) {
        int[] retArr = new int[1];
        retArr[0] = a[0];
        return retArr;
    } else if(blen > 0) {
        int[] retArr = new int[1];
        retArr[0] = b[0];
        return retArr;
    } else {
        return new int[0];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
594
3
Gpt3D_Clone594_3.java 1 12
Gpt3D_Clone594_3.java 13 29
----------------------------------------

public static int [] front11 (int [] a, int [] b) {
    int alen = (a != null) ? a.length : 0, blen = (b != null) ? b.length : 0;
    if (alen > 0 && blen > 0) {
        return new int [] {a [0], b [0]};
    } else if (alen > 0) {
        return new int [] {a [0]};
    } else if (blen > 0) {
        return new int [] {b [0]};
    } else {
        return new int [0];
    }
}
----------------------------------------

public static int[] front11(int[] a, int[] b) {
     int alen = a != null ? a.length : 0;
     int blen = b != null ? b.length : 0;
     int[] retArr = new int[(alen > 0 && blen > 0) ? 2 : (alen > 0 || blen > 0 ? 1 : 0)];
    if(alen > 0 && blen > 0) {
        retArr[0] = a[0];
        retArr[1] = b[0];
    } else if(alen > 0) {
        retArr[0] = a[0];
    } else if(blen > 0) {
        retArr[0] = b[0];
    }
    return retArr;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
598
1
Gpt3D_Clone598_1.java 1 18
Gpt3D_Clone598_1.java 19 33
----------------------------------------

public boolean haveThree (int [] nums) {
    int count = 0;
    boolean flag = false;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 3) {
            if (flag) {
                return false;
            } else {
                count ++;
                flag = true;
            }
        } else {
            flag = false;
        }
    }
    return count == 3;
}
----------------------------------------

public boolean haveThree (int [] nums) {
    int count = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 3) {
            count ++;
            if (count > 2) {
                return false;
            }
        }
    }
    return count == 3;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
603
0
Gpt3D_Clone603_0.java 1 10
Gpt3D_Clone603_0.java 11 29
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Map < String, Integer > wordsMap = new HashMap < String, Integer > ();
    String [] words = "AAABBBBCC".split ("");
    for (String word : words) {
        Integer count = wordsMap.get (word);
        if (count == null)
            wordsMap.put (word, 1);
        else
            wordsMap.put (word, count + 1);
    }
    for (Map.Entry < String, Integer > string : wordsMap.entrySet ()) {
        if (! string.getKey ().isEmpty ()) 
            output += string.getValue () + "" + string.getKey ();
    }
    System.out.println (output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
604
0
Gpt3D_Clone604_0.java 1 14
Gpt3D_Clone604_0.java 15 35
----------------------------------------

public static void main (String args []) {
    inp = new Scanner (System.in);
    String str = inp.nextLine ();
    List < Character > arrlist = new ArrayList < Character > ();
    for (int i = 0;
    i < str.length (); i ++) {
        arrlist.add (str.charAt (i));
    }
    for (int i = 0;
    i < str.length (); i ++) {
        int freq = Collections.frequency (arrlist, str.charAt (i));
        System.out.println ("Frequency of " + str.charAt (i) + "  is:   " + freq);
    }
}
----------------------------------------

public static void main (String args []) {
    inp = new Scanner (System.in);
    String str = inp.nextLine ();
    Map<Character, Integer> map = new HashMap<>();
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt(i);
        if (map.containsKey(c)) {
            map.put(c, map.get(c) + 1);
        } else {
            map.put(c, 1);
        }
    }
    for (int i = 0;
    i < str.length (); i ++) {
        int freq = map.get(str.charAt(i));
        System.out.println ("Frequency of " + str.charAt (i) + "  is:   " + freq);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
604
2
Gpt3D_Clone604_2.java 1 14
Gpt3D_Clone604_2.java 15 34
----------------------------------------

public static void main (String args []) {
    inp = new Scanner (System.in);
    String str = inp.nextLine ();
    List < Character > arrlist = new ArrayList < Character > ();
    for (int i = 0;
    i < str.length (); i ++) {
        arrlist.add (str.charAt (i));
    }
    for (int i = 0;
    i < str.length (); i ++) {
        int freq = Collections.frequency (arrlist, str.charAt (i));
        System.out.println ("Frequency of " + str.charAt (i) + "  is:   " + freq);
    }
}
----------------------------------------

public static void main (String args []) {
    inp = new Scanner (System.in);
    String str = inp.nextLine ();
    Map < Character, Integer > map = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt (i);
        if (map.containsKey (c)) {
           map.put (c, map.get (c) + 1);
        }
        else {
            map.put (c, 1);
        }
    }
    for (Entry < Character, Integer > pair : map.entrySet ()) {
        System.out.println ("Frequency of " + pair.getKey () + "  is:   " + pair.getValue ());
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
606
0
Gpt3D_Clone606_0.java 1 10
Gpt3D_Clone606_0.java 11 23
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Map < String, Integer > wordsMap = new HashMap < String, Integer > ();
    wordsMap.put ("A", 3);
    wordsMap.put ("B", 4);
    wordsMap.put ("C", 2);
    for (Entry < String, Integer > string : wordsMap.entrySet ()) {
        if (! string.getKey ().isEmpty ()) output += string.getValue () + "" + string.getKey ();
    }
    System.out.println (output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
608
0
Gpt3D_Clone608_0.java 1 10
Gpt3D_Clone608_0.java 11 27
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    String output = "";
    List < String > wordsList = new ArrayList <> ();
    String [] words = "AAABBBBCC".split ("");
    wordsList.addAll (Arrays.asList (words));
    Map < String , Integer > wordsMap = new HashMap <> ();
    for (String s : wordsList) {
        if (wordsMap.containsKey (s)) wordsMap.put (s , wordsMap.get (s) + 1); 
        else wordsMap.put (s , 1);
    }
    for (Map.Entry < String , Integer > string : wordsMap.entrySet ()) {
        if (! string.getKey ().isEmpty ()) output += string.getValue () + "" + string.getKey ();
    }
    System.out.println (output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
608
1
Gpt3D_Clone608_1.java 1 10
Gpt3D_Clone608_1.java 11 25
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Map < String , Integer > wordsMap = new HashMap <> ();
    String [] words = "AAABBBBCC".split ("");
    for (String s : words) {
        if (wordsMap.containsKey (s)) wordsMap.put (s , wordsMap.get (s) + 1); 
        else wordsMap.put (s , 1);
    }
    for (Map.Entry < String , Integer > string : wordsMap.entrySet ()) {
        if (! string.getKey ().isEmpty ()) output += string.getValue () + "" + string.getKey ();
    }
    System.out.println (output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
609
0
Gpt3D_Clone609_0.java 1 10
Gpt3D_Clone609_0.java 11 35
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    String output = "";
    List < String > wordsList = new ArrayList<> ();
    String [] words = "AAABBBBCC".split ("");
    for (String w: words) {
        wordsList.add (w);
    }
    Collections.sort (wordsList);
    String prev = wordsList.get (0);
    int count = 0;
    for (String w: wordsList) {
        if (prev.equals (w)) {
            count++;
        }
        else {
            output += count + "" + prev;
            count = 1;
            prev = w;
        }
    }
    output += count + "" + prev;
    System.out.println (output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
609
1
Gpt3D_Clone609_1.java 1 10
Gpt3D_Clone609_1.java 11 30
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Map < String, Integer > wordsMap = new HashMap<> ();
    String [] words = "AAABBBBCC".split ("");
    for (String word : words) {
        if (wordsMap.containsKey (word)) {
            Integer count = wordsMap.get(word);
            wordsMap.put (word, count + 1);
        }
        else {
            wordsMap.put (word, 1);
        }
    }
    for (Entry < String, Integer > entry : wordsMap.entrySet ()) {
        output += entry.getValue () + "" + entry.getKey ();
    }
    System.out.println (output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
60
1
Gpt3D_Clone60_1.java 1 12
Gpt3D_Clone60_1.java 13 25
----------------------------------------

static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    while (c < A.length) {
        if (x > A [c]) {
            x = A [c];
            position = c;
        }
        c ++;
    }
    return position;
}
----------------------------------------

int findMIN (int [] A, int c) {
    int position = c;
    int x = A [c];
    for (int i=c; i<A.length; i++) {
        if (A [i] < x) {
            x = A [i];
            position = i;
        }
    }
    return position;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
616
0
Gpt3D_Clone616_0.java 1 20
Gpt3D_Clone616_0.java 21 35
----------------------------------------

public void actionPerformed (ActionEvent e) {
    pressed = ! pressed;
    if (pressed) {
        for (JMenuItem item : items) {
            item.setText (item.getText () + " changed");
            item.setMaximumSize (new Dimension (70, 50));
            item.setPreferredSize (new Dimension (70, 50));
            item.setMinimumSize (new Dimension (70, 50));
            itemPanel.invalidate ();
        }
    } else {
        for (JMenuItem item : items) {
            item.setText (item.getText ().substring (0, item.getText ().length () - 8));
            item.setMaximumSize (new Dimension (130, 50));
            item.setPreferredSize (new Dimension (130, 50));
            item.setMinimumSize (new Dimension (130, 50));
            itemPanel.invalidate ();
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    pressed = ! pressed;
    for (JMenuItem item : items) {
        if (pressed) {
            item.setText (item.getText () + " changed");
            item.setDimension (70,50);
        } else {
            item.setText (item.getText ().substring (0, item.getText ().length () - 8));
            item.setDimension (130,50);
        }
        itemPanel.invalidate ();
    }       
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
616
1
Gpt3D_Clone616_1.java 1 20
Gpt3D_Clone616_1.java 21 27
----------------------------------------

public void actionPerformed (ActionEvent e) {
    pressed = ! pressed;
    if (pressed) {
        for (JMenuItem item : items) {
            item.setText (item.getText () + " changed");
            item.setMaximumSize (new Dimension (70, 50));
            item.setPreferredSize (new Dimension (70, 50));
            item.setMinimumSize (new Dimension (70, 50));
            itemPanel.invalidate ();
        }
    } else {
        for (JMenuItem item : items) {
            item.setText (item.getText ().substring (0, item.getText ().length () - 8));
            item.setMaximumSize (new Dimension (130, 50));
            item.setPreferredSize (new Dimension (130, 50));
            item.setMinimumSize (new Dimension (130, 50));
            itemPanel.invalidate ();
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    pressed = ! pressed;
    setMenuItems(pressed);
    itemPanel.invalidate ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
619
2
Gpt3D_Clone619_2.java 1 27
Gpt3D_Clone619_2.java 28 56
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < String, Integer > mapA = new HashMap < > ();
    Map < String, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        Integer val = mapA.get ("" + i);
        if (val != null) {
            mapA.put ("" + i, val + 1);
        } else {
            mapA.put ("" + i, 1);
        }
    }
    for (char i : b.toCharArray ()) {
        Integer val = mapB.get ("" + i);
        if (val != null) {
            mapB.put ("" + i, val + 1);
        } else {
            mapB.put ("" + i, 1);
        }
    }
    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {
        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

public static boolean containsV4(String a, String b) {
    boolean status = true;
    Map<Character, Integer> mapA = new HashMap<Character, Integer>();
    Map<Character, Integer> mapB = new HashMap<Character, Integer>();
    for (int i = 0; i < a.length(); i++) {
        char c = a.charAt(i);
        int val = 0;
        if (mapA.containsKey(c)) {
            val = mapA.get(c);
        }
        mapA.put(c, ++val);
    }
    for (int i = 0; i < b.length(); i++) {
        char c = b.charAt(i);
        int val = 0;
        if (mapB.containsKey(c)) {
            val = mapB.get(c);
        }
        mapB.put(c, ++val);
    }
    for (Map.Entry<Character, Integer> entry : mapA.entrySet()) {
        if ((!mapB.containsKey(entry.getKey())) || (entry.getValue() > mapB.get(entry.getKey()))) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
625
0
Gpt3D_Clone625_0.java 1 20
Gpt3D_Clone625_0.java 21 42
----------------------------------------

public static int [] removeDuplicates (int [] arr) {
    boolean [] set = new boolean [1001];
    int totalItems = 0;
    for (int i = 0;
    i < arr.length; ++ i) {
        if (! set [arr [i]]) {
            set [arr [i]] = true;
            totalItems ++;
        }
    }
    int [] ret = new int [totalItems];
    int c = 0;
    for (int i = 0;
    i < set.length; ++ i) {
        if (set [i]) {
            ret [c ++] = i;
        }
    }
    return ret;
}
----------------------------------------

public static int [] removeDuplicates (int [] arr) {
    int len = arr.length;
    Set<Integer> seen = new HashSet<>();
    int totalItems = 0;
    for (int i = 0; i < len; i++){
        boolean check = seen.add(arr[i]);
        if (check == true){
            totalItems++;
        }
    }
    int [] ret = new int [totalItems];
    int c = 0;
    for (int i = 0; i < len; i++) {
        if (seen.contains(arr[i])) {
            ret[c] = arr[i];
            c++;
        }
    }
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
625
1
Gpt3D_Clone625_1.java 1 20
Gpt3D_Clone625_1.java 21 36
----------------------------------------

public static int [] removeDuplicates (int [] arr) {
    boolean [] set = new boolean [1001];
    int totalItems = 0;
    for (int i = 0;
    i < arr.length; ++ i) {
        if (! set [arr [i]]) {
            set [arr [i]] = true;
            totalItems ++;
        }
    }
    int [] ret = new int [totalItems];
    int c = 0;
    for (int i = 0;
    i < set.length; ++ i) {
        if (set [i]) {
            ret [c ++] = i;
        }
    }
    return ret;
}
----------------------------------------

public static int[] removeDuplicates (int[] arr) {
    int len = arr.length;
    Set<Integer> seen = new LinkedHashSet<>();
    for (int i = 0; i < len; i++){
        seen.add(arr[i]);
    }
    int c = 0;
    int [] ret = new int [seen.size()];
    for (Integer x : seen){
        ret[c] = x;
        c++;
    }
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
629
0
Gpt3D_Clone629_0.java 1 7
Gpt3D_Clone629_0.java 8 16
----------------------------------------

public void characters (char ch [], int start, int length) throws SAXException {
    tmpElementValue = new String (
        ch, 
        start, 
        length
    );
}
----------------------------------------

public void characters (char ch [], int start, int length) throws SAXException {
     char[] tmpChars = new char[length];
     System.arraycopy(ch, 
     start, tmpChars, 0, 
     length);
     tmpElementValue = new String(tmpChars);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
629
1
Gpt3D_Clone629_1.java 1 7
Gpt3D_Clone629_1.java 8 16
----------------------------------------

public void characters (char ch [], int start, int length) throws SAXException {
    tmpElementValue = new String (
        ch, 
        start, 
        length
    );
}
----------------------------------------

public void characters (char ch [], int start, int length) throws SAXException {
     StringBuilder sb = new StringBuilder();
     sb.append(ch,
     start,
     length);
     tmpElementValue = sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
629
2
Gpt3D_Clone629_2.java 1 7
Gpt3D_Clone629_2.java 8 16
----------------------------------------

public void characters (char ch [], int start, int length) throws SAXException {
    tmpElementValue = new String (
        ch, 
        start, 
        length
    );
}
----------------------------------------

public void characters (char ch [], int start, int length) throws SAXException {
     tmpElementValue = Arrays.copyOfRange(
        ch, 
        start, 
        start+length
    );
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
629
3
Gpt3D_Clone629_3.java 1 7
Gpt3D_Clone629_3.java 8 15
----------------------------------------

public void characters (char ch [], int start, int length) throws SAXException {
    tmpElementValue = new String (
        ch, 
        start, 
        length
    );
}
----------------------------------------

public void characters (char ch [], int start, int length) throws SAXException {
     tmpElementValue = new StringBuffer (
        ch, 
        start, 
        length).toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
2
Gpt3D_Clone631_2.java 1 9
Gpt3D_Clone631_2.java 10 19
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            Thread.sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
639
0
Gpt3D_Clone639_0.java 1 63
Gpt3D_Clone639_0.java 64 187
----------------------------------------

public static boolean isPerfectSquare (long n) {
    if (n < 0) {
        return false;
    } else {
        switch ((byte) n) {
            case - 128 :
            case - 127 :
            case - 124 :
            case - 119 :
            case - 112 :
            case - 111 :
            case - 103 :
            case - 95 :
            case - 92 :
            case - 87 :
            case - 79 :
            case - 71 :
            case - 64 :
            case - 63 :
            case - 60 :
            case - 55 :
            case - 47 :
            case - 39 :
            case - 31 :
            case - 28 :
            case - 23 :
            case - 15 :
            case - 7 :
            case 0 :
            case 1 :
            case 4 :
            case 9 :
            case 16 :
            case 17 :
            case 25 :
            case 33 :
            case 36 :
            case 41 :
            case 49 :
            case 57 :
            case 64 :
            case 65 :
            case 68 :
            case 73 :
            case 81 :
            case 89 :
            case 97 :
            case 100 :
            case 105 :
            case 113 :
            case 121 :
                long i = (n * INV3465)>>> 52;
                if (! good3465 [(int) i]) {
                    return false;
                } else {
                    long r = round (Math.sqrt (n));
                    return r * r == n;
                }
            default :
                return false;
        }
    }
}
----------------------------------------

public static boolean isPerfectSquare (long n) {
    if (n >=0 && n<=1 ) {
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    } 
    else if(n>=4&&n<=9 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    }
    else if(n>=17&&n<=64 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    } 
    else if(n>=73&&n<=121 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    }    
    else if(n>=16&&n<=17 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    } 
         
    else if(n>=25&&n<=36 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    }         
    else if(n>=41&&n<=49 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    } 
         
    else if(n>=57&&n<=65 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    } 
       
    else if(n>= 68&&n<= 73 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    }           
    else if(n>=81&&n<=89 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    } 
         
    else if(n>=97&&n<=100 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    }  
         
    else if(n>=105&&n<=113 ){
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            long r = round (Math.sqrt (n));
            return r * r == n;
        }
    } 
    else if(n<0){
        return false; 
    }                      
    else{
        return false;
    }
      
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
641
0
Gpt3D_Clone641_0.java 1 12
Gpt3D_Clone641_0.java 13 27
----------------------------------------

public static String join (String delimiter, String...inStr) {
    StringBuilder sb = new StringBuilder ();
    if (inStr.length > 0) {
        sb.append (inStr [0]);
        for (int i = 1;
        i < inStr.length; i ++) {
            sb.append (delimiter);
            sb.append (inStr [i]);
        }
    }
    return sb.toString ();
}
----------------------------------------

public static String join (String delimiter, List <String> inStr) {
    StringBuilder sb = new StringBuilder ();
    Iterator <String> it = inStr.iterator ();
    if (it.hasNext ()) {
        sb.append (it.next ());
        while (it.hasNext ()) {
            sb.append (delimiter);
            sb.append (it.next ());
        }
    }
    return sb.toString ();
    
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
641
1
Gpt3D_Clone641_1.java 1 12
Gpt3D_Clone641_1.java 13 25
----------------------------------------

public static String join (String delimiter, String...inStr) {
    StringBuilder sb = new StringBuilder ();
    if (inStr.length > 0) {
        sb.append (inStr [0]);
        for (int i = 1;
        i < inStr.length; i ++) {
            sb.append (delimiter);
            sb.append (inStr [i]);
        }
    }
    return sb.toString ();
}
----------------------------------------

public static String join (String delimiter, String [] inStr) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0; i < inStr.length; i ++) {
        sb.append (inStr [i]);
        if (i != inStr.length -1)
        {
            sb.append (delimiter);
        }
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
642
0
Gpt3D_Clone642_0.java 1 12
Gpt3D_Clone642_0.java 13 25
----------------------------------------

private String join (String [] input, String delimiter) {
    StringBuilder sb = new StringBuilder ();
    for (String value : input) {
        sb.append (value);
        sb.append (delimiter);
    }
    int length = sb.length ();
    if (length > 0) {
        sb.setLength (length - delimiter.length ());
    }
    return sb.toString ();
}
----------------------------------------

private String join(String[] input, String delimiter) { 
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < input.length; i++ ) {
        if (i == input.length - 1) {
            sb.append(input[i]);
        } else {
            sb.append(input[i]).append(delimiter);
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
642
1
Gpt3D_Clone642_1.java 1 12
Gpt3D_Clone642_1.java 13 25
----------------------------------------

private String join (String [] input, String delimiter) {
    StringBuilder sb = new StringBuilder ();
    for (String value : input) {
        sb.append (value);
        sb.append (delimiter);
    }
    int length = sb.length ();
    if (length > 0) {
        sb.setLength (length - delimiter.length ());
    }
    return sb.toString ();
}
----------------------------------------

private String join(String[] input, String delimiter) { 
    String result = "";
    for (String value : input) {
        result = result + value + delimiter;
    }
    int length = result.length();
    if (length > 0) {
        result = result.substring(0, length - delimiter.length());
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
643
1
Gpt3D_Clone643_1.java 1 14
Gpt3D_Clone643_1.java 15 28
----------------------------------------

public static String join (Object [] objects, String delimiter) {
    if (objects.length == 0) {
        return "";
    }
    int capacityGuess = (objects.length * objects [0].toString ().length ()) + ((objects.length - 1) * delimiter.length ());
    StringBuilder ret = new StringBuilder (capacityGuess);
    ret.append (objects [0]);
    for (int i = 1;
    i < objects.length; i ++) {
        ret.append (delimiter);
        ret.append (objects [i]);
    }
    return ret.toString ();
}
----------------------------------------

public static String join (Object [] objects, String delimiter) {
    if (objects.length == 0) 
        return "";
    
    StringBuilder ret = new StringBuilder ();
    for (int i = 0; i < objects.length; i++) {
        ret.append(objects[i]);
        if (i < objects.length - 1)
            ret.append(delimiter);
    }
    return ret.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
643
2
Gpt3D_Clone643_2.java 1 14
Gpt3D_Clone643_2.java 15 25
----------------------------------------

public static String join (Object [] objects, String delimiter) {
    if (objects.length == 0) {
        return "";
    }
    int capacityGuess = (objects.length * objects [0].toString ().length ()) + ((objects.length - 1) * delimiter.length ());
    StringBuilder ret = new StringBuilder (capacityGuess);
    ret.append (objects [0]);
    for (int i = 1;
    i < objects.length; i ++) {
        ret.append (delimiter);
        ret.append (objects [i]);
    }
    return ret.toString ();
}
----------------------------------------

public static String join (Object [] objects, String delimiter) {
    if (objects.length == 0) 
        return "";
    
    String outp = "";
    for (Object o : objects) 
        outp += o + delimiter;
    return outp.substring(0, outp.length() - delimiter.length());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
644
1
Gpt3D_Clone644_1.java 1 11
Gpt3D_Clone644_1.java 12 23
----------------------------------------

public static String join (String r [], String d) {
    if (r.length == 0) return "";
    StringBuilder sb = new StringBuilder ();
    int i;
    for (i = 0; i < r.length - 1; i ++) {
        sb.append (r [i]);
        sb.append (d);
    }
    sb.append (r [i]);
    return sb.toString ();
}
----------------------------------------

public static String join (String[] r, String d) {
    if (r.length == 0) return "";
    String s = "";
    int i;
    for (i = 0; i < r.length - 1; i ++) {
        s += r[i] + d;
    }
    s += r[i];
    return s;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
646
3
Gpt3D_Clone646_3.java 1 9
Gpt3D_Clone646_3.java 10 30
----------------------------------------

public static void main (String [] args) {
    String set = new java.util.BitSet () {
        {
            set (1, 100 + 1);
        }
    }
    .toString ();
    System.out.append (set, 1, set.length () - 1);
}
----------------------------------------

public class Main {
    public static void main(String[] args) {
        initializeSet();
        printToConsole();
    }
    public static void initializeSet() {
        String set = new java.util.BitSet () {
            {
                set (1, 100 + 1);
            }
        }
        .toString ();
    }
    public static void printToConsole(){
        System.out.append (set, 1, set.length () - 1);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
646
4
Gpt3D_Clone646_4.java 1 9
Gpt3D_Clone646_4.java 10 30
----------------------------------------

public static void main (String [] args) {
    String set = new java.util.BitSet () {
        {
            set (1, 100 + 1);
        }
    }
    .toString ();
    System.out.append (set, 1, set.length () - 1);
}
----------------------------------------

public class Main {
    public static void main(String[] args) {
        initializeSet();
        printToConsole();
    }
    public static void initializeSet() {
        String set = new java.util.BitSet () {
            {
                set (1, 100 + 1);
            }
        }
        .toString ();
    }
    public static void printToConsole(){
        System.out.append (set, 1, set.length () - 1);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
1
Gpt3D_Clone64_1.java 1 18
Gpt3D_Clone64_1.java 19 35
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (direction == UP) {
        draw.modifyY (false);
    }
    else if (direction == DOWN) {
        draw.modifyY (true);
    }
    else if (direction == LEFT) {
        draw.modifyX (false);
    }
    else if (direction == RIGHT) {
        draw.modifyX (true);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
2
Gpt3D_Clone64_2.java 1 18
Gpt3D_Clone64_2.java 19 30
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if(direction == UP)
        draw.incrementY(false);
    else if(direction == DOWN)
        draw.incrementY(true);
    else if(direction == LEFT)
        draw.incrementX(false);
    else if(direction == RIGHT)
        draw.incrementX(true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
656
0
Gpt3D_Clone656_0.java 1 14
Gpt3D_Clone656_0.java 15 34
----------------------------------------

public static String myTrim (String input, String list) {
    String r = "";
    for (int i = 0;
    i < input.length (); i ++) {
        int k = 0;
        for (; k < list.length (); k ++) {
            if (input.charAt (i) == list.charAt (k)) {
                break;
            }
        }
        if (k == list.length ()) r += input.charAt (i);
    }
    return r;
}
----------------------------------------

public static String myTrim (String input, String list) {
    String r = "";
    int i = 0;
    while (i < input.length()) {
        int k = 0; 
        while (k < list.length()) {
            if (input.charAt(i) == list.charAt(k)) {
                break;
            }
            k++;
        }
        if (k == list.length()) {
            r += input.charAt(i);
        }
        i++;
    }
    return r;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
658
0
Gpt3D_Clone658_0.java 1 10
Gpt3D_Clone658_0.java 11 26
----------------------------------------

private static char findFirstCharacter (String s) {
    HashSet < Character > unique = new LinkedHashSet < > (), seen = new HashSet < > ();
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        if (seen.add (c)) unique.add (c);
        else unique.remove (c);
    }
    return unique.isEmpty () ? '_' : unique.iterator ().next ();
}
----------------------------------------

private static char findFirstCharacter(String s) {
    Map<Character, Integer> charFreq = new HashMap<>();
    for (int i = 0; i < s.length(); i++) {
        char c = s.charAt(i);
        int count = charFreq.getOrDefault(c, 0);
        charFreq.put(c, count + 1);
    }
    
    for (int i = 0; i < s.length(); i++) {
        char c = s.charAt(i);
        if (charFreq.get(c) == 1) return c;
    }
    return '_';
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
664
0
Gpt3D_Clone664_0.java 1 20
Gpt3D_Clone664_0.java 21 42
----------------------------------------

public synchronized void run () {
    int i = 3;
    while (i < 50) {
        while (s.getState () != 2) {
            synchronized (s) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
        synchronized (s) {
            if (s.getState () == 2) System.out.println ("t3 " + i);
            i = i + 3;
            s.setState (3);
            s.notifyAll ();
        }
    }
}
----------------------------------------

public void run() {
    int i = 3;
    while (i < 50) {
        while (getState(s) != 2) {
            synchronized (s) {
                try {
                    wait(s);
                } catch (InterruptedException e) {
                    printStackTrace(e);
                }
            }
        }
        synchronized (s) {
            if (getState(s) == 2) println("t3 " + i);
            i = i + 3;
            setState(s, 3);
            notifyAll(s);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
665
0
Gpt3D_Clone665_0.java 1 10
Gpt3D_Clone665_0.java 11 18
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < 2; i ++) {
        System.out.println ("tic");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
2
Gpt3D_Clone666_2.java 1 10
Gpt3D_Clone666_2.java 11 17
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    for (int i = 0; i < 2; i++) {
        System.out.println ("tac");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
669
0
Gpt3D_Clone669_0.java 1 20
Gpt3D_Clone669_0.java 21 39
----------------------------------------

public synchronized void run () {
    int i = 2;
    while (i < 50) {
        while (s.getState () != 1) {
            synchronized (s) {
                try {
                    s.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
        synchronized (s) {
            if (s.getState () == 1) System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        }
    }
}
----------------------------------------

public void run () {
    int i = 2;
    while (i < 50) {
        if (s.getState () == 1) {
            System.out.println ("t2 " + i);
            s.setState (2);
            i = i + 3;
            s.notifyAll ();
        } else {
            try {
                s.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
66
1
Gpt3D_Clone66_1.java 1 18
Gpt3D_Clone66_1.java 19 34
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (direction == UP) {
        draw.incrementY(false);
    }
    else if (direction == DOWN) {
        draw.incrementY(true);
    }
    else if (direction == LEFT) {
        draw.incrementX(false);
    }
    else if (direction == RIGHT) {
        draw.incrementX(true);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
66
2
Gpt3D_Clone66_2.java 1 18
Gpt3D_Clone66_2.java 19 31
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (direction == UP) {
        draw.incrementY (false);
    } else if (direction == DOWN) {
        draw.incrementY (true);
    } else if (direction == LEFT) {
        draw.incrementX (false);
    } else if (direction == RIGHT) {
        draw.incrementX (true);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
66
3
Gpt3D_Clone66_3.java 1 18
Gpt3D_Clone66_3.java 19 28
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (direction == UP || direction == DOWN) {
        draw.incrementY(direction == DOWN);
    }
    else if (direction == LEFT || direction == RIGHT) {
        draw.incrementX(direction == RIGHT);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
671
0
Gpt3D_Clone671_0.java 1 10
Gpt3D_Clone671_0.java 11 18
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < 2; i ++) {
        System.out.println ("tic");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
1
Gpt3D_Clone67_1.java 1 10
Gpt3D_Clone67_1.java 11 23
----------------------------------------

public static void main (final String [] args) {
    final Console console = System.console ();
    if (console != null) {
        final SortNames sortNames = new SortNames (console);
        sortNames.run ();
    } else {
        System.err.println ("Sorry, no console.");
        System.exit (1);
    }
}
----------------------------------------

public static void main (final String [] args) {
    final Console console;
    if (System.console () != null) {
        console = System.console ();
    } else {
        System.err.println ("Sorry, no console.");
        System.exit (1);
    }
    final SortNames sortNames = new SortNames (console);
    sortNames.run ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
0
Gpt3D_Clone686_0.java 1 9
Gpt3D_Clone686_0.java 10 20
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

public void mouseDragged (MouseEvent e) {
    Component vport = e.getSource;
    Component label = vport.getView;
    Point cp = e.getPoint;
    Point vp = vport.getViewPosition;
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize));
    pp.setLocation (cp);
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
686
1
Gpt3D_Clone686_1.java 1 9
Gpt3D_Clone686_1.java 10 20
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

public void mouseDragged (MouseEvent event) {
    Component vport = event.getSource;
    Component label = vport.getView;
    Point currentPoint = event.getPoint;
    Point viewPoint = vport.getViewPosition;
    viewPoint.translate (pp.x - currentPoint.x, pp.y - currentPoint.y);
    label.scrollRectToVisible (new Rectangle (viewPoint, vport.getSize));
    pp.setLocation (currentPoint);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
701
0
Gpt3D_Clone701_0.java 1 11
Gpt3D_Clone701_0.java 12 30
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length == 0 || populations.length == 0 || countries.length != populations.length) {
        return;
    }
    int longestCountry = Arrays.stream (countries).map (String :: toString).mapToInt (String :: length).max ().getAsInt ();
    int longestPop = Arrays.stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().getAsInt ();
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.printf ("%-" + longestCountry + "s | %" + longestPop + "d%n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length == 0 || populations.length == 0 || countries.length != populations.length) {
        return;
    }
    int maxCountryLength = 0;
    for (String c : countries) {
        maxCountryLength = maxCountryLength < c.length() ? c.length() : maxCountryLength;
    }
    int maxPopLength = 0;
    for (int p : populations) {
        maxPopLength = maxPopLength < p ? Integer.toString(p).length() : maxPopLength;
    } 
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.printf ("%-" + maxCountryLength + "s | %" + maxPopLength + "d%n", countries [i], populations [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
703
0
Gpt3D_Clone703_0.java 1 9
Gpt3D_Clone703_0.java 10 26
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = -1;
    for (String country : countries)
        maxCountryLength = Math.max (maxCountryLength, country.length ());
    maxCountryLength = Math.max (maxCountryLength, defaultLength);
    int maxPopulationLength = -1;
    for (int population : populations)
        maxPopulationLength = Math.max (maxPopulationLength, Integer.toString (population).length ());
    maxPopulationLength = Math.max (maxPopulationLength, defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
704
0
Gpt3D_Clone704_0.java 1 23
Gpt3D_Clone704_0.java 24 58
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int longestNameInput = 0;
    int longestPopInput = 0;
    // Find the longest name and population inputs
    if (countries.length != 0) {
        longestNameInput = countries[0].length();
        longestPopInput = String.valueOf(populations[0]).length();
        for (int i = 0; i < countries.length; i++) {
            int countLength = countries[i].length();
            int popLength = String.valueOf(populations[i]).length();
            if (countLength > longestNameInput) {
                longestNameInput = countLength;
            } 
            if (popLength > longestPopInput) {
                longestPopInput = popLength;
            }
        }
    }
    // Print the table
    for (int i = 0; i < countries.length; i++) {
        System.out.print(countries[i]);
        for (int j = 0; j < (longestNameInput - countries[i].length()); j++) {
            System.out.print(" ");
        }
        System.out.print(" | ");
        for (int k = 0; k < (longestPopInput - String.valueOf(populations[i]).length()); k++) {
            System.out.print(" ");
        }
        System.out.println(populations[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
704
2
Gpt3D_Clone704_2.java 1 23
Gpt3D_Clone704_2.java 24 54
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    // Find the longest name and population inputs
    int longestNameInput = 0;
    int longestPopInput = 0;
    if (countries.length != 0) {
        longestNameInput = countries[0].length();
        longestPopInput = String.valueOf(populations[0]).length();
        for (String country : countries) {
            longestNameInput = Math.max(longestNameInput, country.length());
        }
        for (int population : populations) {
            longestPopInput = Math.max(longestPopInput, String.valueOf(population).length());
        }
    }
    // Print the table
    for (int i = 0; i < countries.length; i++) {
        System.out.print(countries[i]);
        for (int j = 0; j < (longestNameInput - countries[i].length()); j++) {
            System.out.print(" ");
        }
        System.out.print(" | ");
        for (int k = 0; k < (longestPopInput - String.valueOf(populations[i]).length()); k++) {
            System.out.print(" ");
        }
        System.out.println(populations[i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
704
3
Gpt3D_Clone704_3.java 1 23
Gpt3D_Clone704_3.java 24 42
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

public static void printTable(String[] countries, int[] populations) {
    if (countries.length != 0) {
        int longestNameInput = getLongestNameLength(countries);
        int longestPopInput = getLongestPopLength(populations);
        for (int i = 0; i < countries.length; i++) {
            System.out.print(countries[i]);
            for (int j = 0; j < (longestNameInput - countries[i].length()); j++) {
                System.out.print(" ");
            }
            System.out.print(" | ");
            for (int k = 0; k < (longestPopInput - String.valueOf(populations[i]).length()); k++) {
                System.out.print(" ");
            }
            System.out.println(populations[i]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
706
2
Gpt3D_Clone706_2.java 1 16
Gpt3D_Clone706_2.java 17 28
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (! Person.class.isAssignableFrom (obj.getClass ())) {
        return false;
    }
    final Person other = (Person) obj;
    if ((this.name == null) ? (other.name != null) : ! this.name.equals (other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null || ! Person.class.isAssignableFrom (obj.getClass ()) || this.name != null || other.name == null) {
        return false;
    }
    final Person other = (Person) obj;
    if (! this.name.equals (other.name) || this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
711
0
Gpt3D_Clone711_0.java 1 11
Gpt3D_Clone711_0.java 12 17
----------------------------------------

public int readNumber () {
    int x = - 1;
    while (x < 0) {
        System.out.println ("Please enter a positive number.");
        try {
            x = keyboard.nextInt ();
        } catch (java.util.InputMismatchException e) {
        }
    }
    return x;
}
----------------------------------------

public int readNumber () {
    int x = getValidInput();
    return x;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
713
0
Gpt3D_Clone713_0.java 1 26
Gpt3D_Clone713_0.java 27 61
----------------------------------------

public static void main (String [] args) {
    for (int row = 1;
    row <= 7; row += 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
    for (int row = 5;
    row >= 1; row -= 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    int row, space, i;
    row = 1;
    while (row <= 7) {
        space = 7;
        while (space >= row) {
            System.out.print ("*");
            space = space - 2;
        }
        i = 1;
        while (i <= row) {
            System.out.print (" ");
            i = i + 1;
        }
        System.out.print ("\n");
        row = row + 2;
    }
    row = 5;
    while (row >= 1) {
        space = 7;
        while (space >= row) {
            System.out.print ("*");
            space = space - 2;
        }
        i = 1;
        while (i <= row) {
            System.out.print (" ");
            i = i + 1;
        }
        System.out.print ("\n");
        row = row - 2;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
713
1
Gpt3D_Clone713_1.java 1 26
Gpt3D_Clone713_1.java 27 49
----------------------------------------

public static void main (String [] args) {
    for (int row = 1;
    row <= 7; row += 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
    for (int row = 5;
    row >= 1; row -= 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    int row, space, i;
    for (row = 1; row <= 7; row += 2) {
        for (space = 7; space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (i = 1; i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
    for (row = 5; row >= 1; row -= 2) {
        for (space = 7; space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (i = 1; i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
714
0
Gpt3D_Clone714_0.java 1 26
Gpt3D_Clone714_0.java 27 65
----------------------------------------

public static void main (String [] args) {
    for (int row = 1;
    row <= 7; row += 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
    for (int row = 5;
    row >= 1; row -= 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    int row; 
    int space; 
    int i; 
    row = 1; 
    while (row <= 7) {
        space = 7; 
        while (space >= row) {
            System.out.print ("*");
            space -= 2; 
        }
        i = 1; 
        i = row; 
        while (i >= 1) {
            System.out.print (" ");
            i--;  
        }
        System.out.print ("\n");
        row += 2; 
    }
    row = 5; 
    while (row >= 1) {
        space = 7; 
        while (space >= row) {
            System.out.print ("*");
            space -= 2; 
        }
        i = 1; 
        i = row; 
        while (i >= 1) {
            System.out.print (" ");
            i--;  
        }
        System.out.print ("\n");
        row -= 2; 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
714
1
Gpt3D_Clone714_1.java 1 26
Gpt3D_Clone714_1.java 27 60
----------------------------------------

public static void main (String [] args) {
    for (int row = 1;
    row <= 7; row += 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
    for (int row = 5;
    row >= 1; row -= 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    int row = 1;
    while (row <= 7) {
        int space = 7;
        while (space >= row) {
            System.out.print ("*");
            space -= 2;
        }
        int i = 1;
        while (i <= row){
            System.out.print (" ");
            i++;
        }
        System.out.print ("\n");
        row += 2;
    }
    int row2 = 5;
    while (row2 >= 1) {
        int space2 = 7;
        while (space2 >= row2) {
            System.out.print ("*");
            space2 -= 2;
        }
        int i2 = 1;
        while (i2 <= row2){
            System.out.print (" ");
            i2++;
        }
        System.out.print ("\n");
        row2 -= 2;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
714
2
Gpt3D_Clone714_2.java 1 26
Gpt3D_Clone714_2.java 27 60
----------------------------------------

public static void main (String [] args) {
    for (int row = 1;
    row <= 7; row += 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
    for (int row = 5;
    row >= 1; row -= 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    int row = 1;
    while (row <= 7) {
        int space = 7;
        while (space >= row) {
            System.out.print ("*");
            space = space - 2;
        }
        int i = 1;
        while (i <= row){
            System.out.print (" ");
            i = i + 1;
        }
        System.out.print ("\n");
        row = row + 2;
    }
    int row2 = 5;
    while (row2 >= 1) {
        int space2 = 7;
        while (space2 >= row2) {
            System.out.print ("*");
            space2 = space2 - 2;
        }
        int i2 = 1;
        while (i2 <= row2){
            System.out.print (" ");
            i2 = i2 + 1;
        }
        System.out.print ("\n");
        row2 = row2 - 2;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
720
0
Gpt3D_Clone720_0.java 1 5
Gpt3D_Clone720_0.java 6 14
----------------------------------------

public void actionPerformed (ActionEvent e) {
    StringBuilder s = new StringBuilder ();
    s.append (text1.getText ()).append ("\n").append (text2.getText ());
    System.out.println (s.toString ());
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    StringBuilder s = new StringBuilder ();
    s.append (text1.getText ());
    s.append ("\n");
    s.append (text2.getText ());
    System.out.println (s.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
720
1
Gpt3D_Clone720_1.java 1 5
Gpt3D_Clone720_1.java 6 13
----------------------------------------

public void actionPerformed (ActionEvent e) {
    StringBuilder s = new StringBuilder ();
    s.append (text1.getText ()).append ("\n").append (text2.getText ());
    System.out.println (s.toString ());
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String s = text1.getText () + 
    "\n" + 
    text2.getText ();
    System.out.println (s);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
722
0
Gpt3D_Clone722_0.java 1 7
Gpt3D_Clone722_0.java 8 21
----------------------------------------

private static void removeEven (int [] k, int n) {
    int counter = 0;
    for (int i = 0;
    i < n; i ++) if (k [i] % 2 == 1) k [counter ++] = k [i];
    for (int i = counter;
    i < n; i ++) k [i] = 0;
}
----------------------------------------

private static void removeEven (int [] k, int n) {
    int counter = 0;
    for (int i = 0;
    i < n; i ++) {
        if (k[i] % 2 != 0) {
            k[counter] = k[i];
            counter++;
        } else {
            k[i] = 0;
        }
     }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
722
1
Gpt3D_Clone722_1.java 1 7
Gpt3D_Clone722_1.java 8 22
----------------------------------------

private static void removeEven (int [] k, int n) {
    int counter = 0;
    for (int i = 0;
    i < n; i ++) if (k [i] % 2 == 1) k [counter ++] = k [i];
    for (int i = counter;
    i < n; i ++) k [i] = 0;
}
----------------------------------------

private static void removeEven (int [] k, int n) {
    int last_odd = -1;
    for (int i = 0; i < n; i++) {
    	if (k[i] % 2 == 1) {
        	if (last_odd + 1 < i) {
            	k[last_odd + 1] = k[i];
            }
            last_odd++;
        }
    }
    for (int i = last_odd + 1; i < n; i++)
        k[i] = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
722
2
Gpt3D_Clone722_2.java 1 7
Gpt3D_Clone722_2.java 8 21
----------------------------------------

private static void removeEven (int [] k, int n) {
    int counter = 0;
    for (int i = 0;
    i < n; i ++) if (k [i] % 2 == 1) k [counter ++] = k [i];
    for (int i = counter;
    i < n; i ++) k [i] = 0;
}
----------------------------------------

private static void removeEven (int [] k, int n) {
    int counter = 0;
    for (int i = 0;
    i < n; i ++) {
        if (k [i] % 2 != 0) {
            k [counter] = k [i];
            counter ++;
        }   
    }
    for (int i = counter;
    i < n; i ++) k [i] = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
722
3
Gpt3D_Clone722_3.java 1 7
Gpt3D_Clone722_3.java 8 21
----------------------------------------

private static void removeEven (int [] k, int n) {
    int counter = 0;
    for (int i = 0;
    i < n; i ++) if (k [i] % 2 == 1) k [counter ++] = k [i];
    for (int i = counter;
    i < n; i ++) k [i] = 0;
}
----------------------------------------

private static void removeEven (int [] k, int n) {
    int tail = 0;
    for (int i = 0;
    i < n; i++) {
    	if (k[i] % 2 == 1) {
        	k[tail] = k[i];
            tail++;
        }
    }
    for (int i = tail; i < n; i++)
        k[i] = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
724
1
Gpt3D_Clone724_1.java 1 17
Gpt3D_Clone724_1.java 18 32
----------------------------------------

public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.setCurrentItem (itemCount - 2, false);
            } else if (index == itemCount - 1) {
                viewPager.setCurrentItem (1, false);
            }
        }
    }
}
----------------------------------------

public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null && pagerAdapter.getCount () >= 2) {
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.setCurrentItem (pagerAdapter.getCount () - 2, false);
            } else if (index == pagerAdapter.getCount () - 1) {
                viewPager.setCurrentItem (1, false);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
738
2
Gpt3D_Clone738_2.java 1 15
Gpt3D_Clone738_2.java 16 32
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    if (! lineBuffered) {
        fillLineBuffer ();
    }
    if (lineBuffered) {
        if (currentLineReadPos == 0) {
            lineBuffered = false;
        }
        return currentLine [currentLineReadPos --];
    }
    return 0;
}
----------------------------------------

public int read() throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0)
        return -1;
    if (!lineBuffered)
        fillLineBuffer();
    if (lineBuffered){
        if (currentLineReadPos > 0)
            return currentLine[currentLineReadPos--];
        else {
            lineBuffered = false;	
            return 0;
        }
    }
		return 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
73
0
Gpt3D_Clone73_0.java 1 27
Gpt3D_Clone73_0.java 28 81
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) 
{
    CharSequence out = super.filter(source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length();
    
    //Check if source contains a dot
    boolean containsDot = false;
    for (int i = start; i < end; i++) {
        if (source.charAt(i) == '.') {
            containsDot = true;
            break;
        }
    }
    //The source does not have a dot - just return the source
    if (!containsDot) {
        return  new SpannableStringBuilder (source, start, end);
    }
    //The source does have a dot - check if the dot position is valid
    int dotPosition = -1;
    for (int i = start; i < end; i++) {
        if (source.charAt(i) == '.') {
            dotPosition = i;
            break;
        }
    }
    if ((dlen - dend) + (end - (dotPosition + 1)) > digits) {
        return "";
    }
    
    //Don't change source if the dot is at the beginning
    if (start == dotPosition) {
        return source;
    }
    return  new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
1
Gpt3D_Clone743_1.java 1 13
Gpt3D_Clone743_1.java 14 35
----------------------------------------

private static long factorial (int n, int depth) {
    String spaces = repeat (' ', depth);
    System.out.print (spaces);
    System.out.println ("factorial(" + n + ")");
    if (n <= 1) {
        System.out.println (spaces + " return 1");
        return 1;
    }
    long fac = factorial (n - 1, depth + 1);
    System.out.print (spaces);
    System.out.printf ("return %d * %d = %d%n", n, fac, n * fac);
    return n * fac;
}
----------------------------------------

private static long factorial (int n, int depth) {
    String spaces = repeat (' ', depth);
    System.out.print (spaces);
    System.out.println ("factorial(" + n + ")");
    if (n == 0) {
        System.out.println (spaces + " return 0");
        return 0;
    }
    if (n == 1) {
        System.out.println (spaces + " return 1");
        return 1;
    }
    if (n > 1) {
        long fac = factorial (n - 1, depth + 1);
        long result = n * fac;
        System.out.print (spaces);
        System.out.printf ("return %d * %d = %d%n", n, fac, result);
        return result;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
745
0
Gpt3D_Clone745_0.java 1 9
Gpt3D_Clone745_0.java 10 23
----------------------------------------

public static int evenDigits (int n) {
    if ((n & 1) != 0) {
        return evenDigits (n / 10);
    }
    if (n < 10) {
        return n;
    }
    return n % 10 + evenDigits (n / 10) * 10;
}
----------------------------------------

public static int evenDigits (int n) {
    if (n < 0) {
        n = -n;
    }
    while ((n & 1) == 0 && n) {
        n /= 10;
    }
    if (n < 10) {
        return n;
    }
    return n % 10 + evenDigits (n / 10) * 10;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
745
2
Gpt3D_Clone745_2.java 1 9
Gpt3D_Clone745_2.java 10 16
----------------------------------------

public static int evenDigits (int n) {
    if ((n & 1) != 0) {
        return evenDigits (n / 10);
    }
    if (n < 10) {
        return n;
    }
    return n % 10 + evenDigits (n / 10) * 10;
}
----------------------------------------

public static int evenDigits(int n) {
    if ((n & 1) != 0) n /= 10;
    if (n < 10) return n;
    return (n % 10) + (evenDigits(n / 10) * 10);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
745
3
Gpt3D_Clone745_3.java 1 9
Gpt3D_Clone745_3.java 10 16
----------------------------------------

public static int evenDigits (int n) {
    if ((n & 1) != 0) {
        return evenDigits (n / 10);
    }
    if (n < 10) {
        return n;
    }
    return n % 10 + evenDigits (n / 10) * 10;
}
----------------------------------------

public static int evenDigits(int n) {
    if(n % 2 != 0) n = n / 10;
    if(n < 10) return n;
    return n % 10 + evenDigits(n / 10) * 10;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
748
1
Gpt3D_Clone748_1.java 1 20
Gpt3D_Clone748_1.java 21 39
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String name = employeeName.getText ();
    if (name.equals ("") || alreadyInList (name)) {
        Toolkit.getDefaultToolkit ().beep ();
        employeeName.requestFocusInWindow ();
        employeeName.selectAll ();
        return;
    }
    int index = list.getSelectedIndex ();
    if (index == - 1) {
        index = 0;
    } else {
        index ++;
    }
    listModel.insertElementAt (employeeName.getText (), index);
    employeeName.requestFocusInWindow ();
    employeeName.setText ("");
    list.setSelectedIndex (index);
    list.ensureIndexIsVisible (index);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String name = employeeName.getText ();
    if (!"".equals (name) && !alreadyInList (name)) {
        int index = list.getSelectedIndex ();
        index = (index == -1) ? 0 : ++index;
        listModel.insertElementAt (name, index);
        employeeName.requestFocusInWindow ();
        employeeName.setText ("");
        list.setSelectedIndex (index);
        list.ensureIndexIsVisible (index);
    } else {
        Toolkit.getDefaultToolkit ().beep ();
        employeeName.requestFocusInWindow ();
        employeeName.selectAll ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
755
0
Gpt3D_Clone755_0.java 1 11
Gpt3D_Clone755_0.java 12 24
----------------------------------------

public static void main (String [] args) {
    Integer n = Integer.parseInt (args [0]);
    Queue < Integer > q = new Queue < Integer > ();
    while (! StdIn.isEmpty ()) {
        q.enqueue (StdIn.readInt ());
    }
    while (q.size () > n) {
        q.dequeue ();
    }
    StdOut.println (q.peek ().toString ());
}
----------------------------------------

public static void main (String [] args) {
    int n = Integer.parseInt (args [0]);
    ArrayDeque < Integer > q = new ArrayDeque < Integer > ();
    while (System.in.available () > 0) {
        q.addLast (System.in.read ());
    }
    while (q.size () > n) {
        q.removeFirst ();
    }
    System.out.println (q.peekFirst ().toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
755
1
Gpt3D_Clone755_1.java 1 11
Gpt3D_Clone755_1.java 12 24
----------------------------------------

public static void main (String [] args) {
    Integer n = Integer.parseInt (args [0]);
    Queue < Integer > q = new Queue < Integer > ();
    while (! StdIn.isEmpty ()) {
        q.enqueue (StdIn.readInt ());
    }
    while (q.size () > n) {
        q.dequeue ();
    }
    StdOut.println (q.peek ().toString ());
}
----------------------------------------

public static void main (String [] args) {
    int n = Integer.parseInt (args [0]);
    LinkedList < Integer > q = new LinkedList < Integer > ();
    while (System.in.available () > 0) {
        q.add (System.in.read ());
    }
    while (q.size () > n) {
        q.poll ();
    }
    System.out.println (q.peek ().toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
762
0
Gpt3D_Clone762_0.java 1 11
Gpt3D_Clone762_0.java 12 31
----------------------------------------

public IntList get (int i) {
    if (i < 0) {
        throw new IndexOutOfBoundsException ("Index is negative!");
    }
    if (i == 0) {
        return this;
    } else if (next != null) {
        return next.get (i - 1);
    }
    throw new IndexOutOfBoundsException ("Index exceeds bounds");
}
----------------------------------------

public IntList get (int i) {
    if (i < 0) {
        throw new IndexOutOfBoundsException ("Index is negative!");
    }
    if (i == 0) {
        return this;
    } else {
        IntList current = this;
        while (i > 0) {
            current = current.next;
            i--;
            if (current == null) {
                throw new IndexOutOfBoundsException ("Index exceeds bounds");
            }
        }
        return current;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
766
0
Gpt3D_Clone766_0.java 1 9
Gpt3D_Clone766_0.java 10 23
----------------------------------------

public static String removeAdjacentDuplicates (String input) {
    if (input.length () <= 1) {
        return input;
    }
    StringBuilder sb = new StringBuilder ();
    sb.append (input.charAt (0));
    IntStream.range (1, input.length ()).mapToObj (i -> input.charAt (i) != input.charAt (i - 1) ? input.charAt (i) : "").forEach (sb :: append);
    return sb.toString ();
}
----------------------------------------

public static String removeAdjacentDuplicates (String input) {
    if (input.length() <= 1) {
        return input;
    }
    String result = input.substring(0, 1);
    for (int i = 1; i < input.length(); i++) {
        if (input.charAt(i) != input.charAt(i-1)) {
            result += input.charAt(i);
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
766
3
Gpt3D_Clone766_3.java 1 9
Gpt3D_Clone766_3.java 10 20
----------------------------------------

public static String removeAdjacentDuplicates (String input) {
    if (input.length () <= 1) {
        return input;
    }
    StringBuilder sb = new StringBuilder ();
    sb.append (input.charAt (0));
    IntStream.range (1, input.length ()).mapToObj (i -> input.charAt (i) != input.charAt (i - 1) ? input.charAt (i) : "").forEach (sb :: append);
    return sb.toString ();
}
----------------------------------------

public static String removeAdjacentDuplicates (String input) {
    if (input.length () <= 1) {
        return input;
    }
    String result = input.substring (0, 1);
    IntStream.range (1, input.length ()).mapToObj (i -> input.charAt (i) != input.charAt (i - 1) ? input.charAt (i) : "")
            .reduce (result,(acc, curr) -> acc + curr);
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
768
0
Gpt3D_Clone768_0.java 1 10
Gpt3D_Clone768_0.java 11 22
----------------------------------------

boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i = 0;
    i < (n / 2); ++ i) {
        if (s.charAt (i) != s.charAt (n - i - 1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

boolean isPalindrome(String s) {
    int n = s.length();
    boolean answer = false;
    for (int i = 0; i < (n / 2); ++i) {
       if (s.charAt(i) == s.charAt(n - i - 1)) {
            answer= true;
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
769
0
Gpt3D_Clone769_0.java 1 19
Gpt3D_Clone769_0.java 20 56
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    int start = 0;
    int end = str.length () - 1;
    while (start < end) {
        if (str.charAt (start) != str.charAt (end)) {
            return false;
        }
        start++;
        end--;
    }
    return true;
 }
// Type 3 Code Clone Variants
public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List<Character> word = new ArrayList <> ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0).equalsIgnoreCase(word.get (word.size () - 1))) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
769
1
Gpt3D_Clone769_1.java 1 19
Gpt3D_Clone769_1.java 20 34
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    int wLen = strChars.length;
    while (wLen > 1) {
        if (strChars[0] != strChars[wLen - 1]) {
            return false;
        }
        ++strChars;
        --wLen;
    }
    return true; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
775
0
Gpt3D_Clone775_0.java 1 10
Gpt3D_Clone775_0.java 11 32
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    return r1 < r2 ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1);
}
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        if (y1 < y2) {
            return y1 <= y && y <= y2;
        }
        else {
            return y2 <= y && y <= y1;
        }
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    if (r1 < r2) {
        return r1 <= r && r <= r2;
    }
    else {
        return r2 <= r && r <= r1;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
775
1
Gpt3D_Clone775_1.java 1 10
Gpt3D_Clone775_1.java 11 26
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    return r1 < r2 ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1);
}
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        double smallestY = Math.min(y1, y2); 
        double biggestY = Math.max(y1, y2); 
        return (smallestY <= y && y <= biggestY)? true:false; 
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    double smallestR = Math.min(r1, r2); 
    double biggestR = Math.max(r1, r2); 
    return (smallestR <= r && r <= biggestR)? true:false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
775
2
Gpt3D_Clone775_2.java 1 10
Gpt3D_Clone775_2.java 11 26
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    return r1 < r2 ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1);
}
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    boolean xEqual = (x1 == x2);
    boolean yLessThan = (y1 < y2);
    boolean r1LessThan = (r1 < r2);
    if (xEqual) {
        return yLessThan ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    return r1LessThan ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
780
0
Gpt3D_Clone780_0.java 1 16
Gpt3D_Clone780_0.java 17 33
----------------------------------------

public static int binarySearch (int anArray [], int first, int last, int value) {
    do {
        if (first > last) {
            return - 1;
        } else {
            int mid = (first + last) / 2;
            if (value == anArray [mid]) {
                return mid;
            } else if (value < anArray [mid]) {
                last = mid - 1;
            } else {
                first = mid + 1;
            }
        }
    } while (true);
}
----------------------------------------

public static int binarySearch (int anArray [], int first, int last, int value) {
    int mid = (first + last) / 2;
    if (first > last) {
        return -1;
    } else if (value == anArray[mid]) {
        return mid;
    } else if (value < anArray[mid]) {
        int searchLeft = binarySearch(anArray, first, mid-1, value);
        if (searchLeft != -1) return searchLeft;
    } else {
        int searchRight = binarySearch(anArray, mid+1, last, value);
        if (searchRight != -1) return searchRight;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
788
1
Gpt3D_Clone788_1.java 1 11
Gpt3D_Clone788_1.java 12 27
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    fireEvents (false, event, cancellableEvent, cancellable);
    fireEvents (true, event, cancellableEvent, cancellable);
}
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent;
    boolean cancellable;
    if (event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        cancellable = true;
    } else {
        cancellableEvent = null;
        cancellable = false;
    }
    fireEvents (false, event, cancellableEvent, cancellable);
    fireEvents (true, event, cancellableEvent, cancellable);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
790
1
Gpt3D_Clone790_1.java 1 9
Gpt3D_Clone790_1.java 10 24
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) return 1;
    else if (amount < 0 || coins.length == checkFromIndex) return 0;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) {
        return 1;
    } 
    else if (amount < 0 || checkFromIndex >= coins.length) {
        return 0;
    }
    else {
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
792
0
Gpt3D_Clone792_0.java 1 29
Gpt3D_Clone792_0.java 30 51
----------------------------------------

public static void main (String [] args) {
    int [] coins = new int [] {1, 2, 3, 4, 5};
    int money = 600;
    int [] [] recorder = new int [money + 1] [coins.length];
    for (int k = 0;
    k < coins.length; k ++) {
        recorder [0] [k] = 1;
    }
    for (int i = 1;
    i <= money; i ++) {
        int with = 0;
        int without = 0;
        for (int coin_index = 0;
        coin_index < coins.length; coin_index ++) {
            if (i - coins [coin_index] < 0) {
                with = 0;
            } else {
                with = recorder [i - coins [coin_index]] [coin_index];
            }
            if (coin_index - 1 < 0) {
                without = 0;
            } else {
                without = recorder [i] [coin_index - 1];
            }
            recorder [i] [coin_index] = with + without;
        }
    }
    System.out.print (recorder [money] [coins.length - 1]);
}
----------------------------------------

public static void main (String [] args) {
    int [] coins = new int [] {1, 2, 3, 4, 5};
    int money = 600;
    int [] [] recorded = new int [money + 1] [coins.length];
    for (int k = 0;
    k < coins.length; k ++) {
        recorded [0] [k] = 1;
    }
    for (int i = 1;
    i <= money; i ++) {
        for (int coin_idx = 0;
        coin_idx < coins.length; coin_idx ++) {
            int with, without;
            with = (i - coins [coin_idx] < 0) ? 0 : recorded [i - coins [coin_idx]] [coin_idx];
            without = (coin_idx - 1 < 0) ? 0 : recorded [i] [coin_idx -1];
            recorded [i] [coin_idx] = with + without;
        }
    }
    System.out.print (recorded [money] [coins.length - 1]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
792
1
Gpt3D_Clone792_1.java 1 29
Gpt3D_Clone792_1.java 30 48
----------------------------------------

public static void main (String [] args) {
    int [] coins = new int [] {1, 2, 3, 4, 5};
    int money = 600;
    int [] [] recorder = new int [money + 1] [coins.length];
    for (int k = 0;
    k < coins.length; k ++) {
        recorder [0] [k] = 1;
    }
    for (int i = 1;
    i <= money; i ++) {
        int with = 0;
        int without = 0;
        for (int coin_index = 0;
        coin_index < coins.length; coin_index ++) {
            if (i - coins [coin_index] < 0) {
                with = 0;
            } else {
                with = recorder [i - coins [coin_index]] [coin_index];
            }
            if (coin_index - 1 < 0) {
                without = 0;
            } else {
                without = recorder [i] [coin_index - 1];
            }
            recorder [i] [coin_index] = with + without;
        }
    }
    System.out.print (recorder [money] [coins.length - 1]);
}
----------------------------------------

public static void main (String [] args) {
    int [] coins = new int [] {1, 2, 3, 4, 5};
    int money = 600;
    int [] [] recorder = new int [money + 1] [coins.length];
    for (int k = 0; k < coins.length; k ++) {
        recorder [0] [k] = 1;
    }
    for (int i = 1; i <= money; i ++) {
        for (int coin_index = 0; coin_index < coins.length; coin_index ++) {
            int with, without;
            with = (i - coins [coin_index] < 0) ? 0 : recorder [i - coins [coin_index]] [coin_index];
            without = (coin_index - 1 < 0) ? 0 : recorder [i] [coin_index - 1];
            recorder [i] [coin_index] = with + without;
        }
    }
    System.out.print (recorder [money] [coins.length - 1]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
793
0
Gpt3D_Clone793_0.java 1 10
Gpt3D_Clone793_0.java 11 23
----------------------------------------

public static void main (String [] args) {
    LinkedHashMap < String, Vector < String > > data = new LinkedHashMap < String, Vector < String > > ();
    data.put ("foo", new Vector < String > (Arrays.asList ("1", "2", "3")));
    data.put ("bar", new Vector < String > (Arrays.asList ("3", "2")));
    data.put ("baz", new Vector < String > (Arrays.asList ("5", "6", "7")));
    Foo foo = new Foo (data);
    for (String [] combination : foo.allUniqueCombinations ()) {
        System.out.println (Arrays.toString (combination));
    }
}
----------------------------------------

public static void main(String[] args) {
    LinkedHashMap<String, Vector<String>> data = new LinkedHashMap<>();
    data.put("foo", new Vector<>(Arrays.asList("1", "2", "3")));
    data.put("bar", new Vector<>(Arrays.asList("3", "2")));
    data.put("baz", new Vector<>(Arrays.asList("5", "6", "7")));
    for (Foo foo : new Foo[] { new Foo(data) }) {
        for (String[] combination : foo.allUniqueCombinations()) {
            System.out.println(Arrays.toString(combination));
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
793
1
Gpt3D_Clone793_1.java 1 10
Gpt3D_Clone793_1.java 11 22
----------------------------------------

public static void main (String [] args) {
    LinkedHashMap < String, Vector < String > > data = new LinkedHashMap < String, Vector < String > > ();
    data.put ("foo", new Vector < String > (Arrays.asList ("1", "2", "3")));
    data.put ("bar", new Vector < String > (Arrays.asList ("3", "2")));
    data.put ("baz", new Vector < String > (Arrays.asList ("5", "6", "7")));
    Foo foo = new Foo (data);
    for (String [] combination : foo.allUniqueCombinations ()) {
        System.out.println (Arrays.toString (combination));
    }
}
----------------------------------------

public static void main (String [] args) {
    LinkedHashMap < String, Vector < String > > data = new LinkedHashMap <> ();
    data.put ("foo", new Vector <> (Arrays.asList ("1", "2", "3")));
    data.put ("bar", new Vector <> (Arrays.asList ("3", "2")));
    data.put ("baz", new Vector <> (Arrays.asList ("5", "6", "7")));
    Foo foo = new Foo(data);
    List<String[]> allUniqueCombinations = foo.allUniqueCombinations();
    allUniqueCombinations.forEach(combination -> System.out.println(Arrays.toString(combination)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
796
0
Gpt3D_Clone796_0.java 1 18
Gpt3D_Clone796_0.java 19 34
----------------------------------------

private static String merge (String...strings) {
    StringBuilder sb = new StringBuilder ();
    int adv;
    boolean edited;
    adv = 0;
    edited = true;
    while (edited) {
        edited = false;
        for (String s : strings) {
            if (adv < s.length ()) {
                sb.append (s.charAt (adv));
                edited = true;
            }
        }
        adv ++;
    }
    return sb.toString ();
}
----------------------------------------

private static String merge (String...strings) {
    StringBuilder sb = new StringBuilder ();
    int edit;
    edit = 0;
    while (edit < strings.length) {
        for (int i = 0; i < strings.length; i++) {
            if (edit < strings[i].length()) {
                sb.append(strings[i].charAt(edit));
            }
        }
        edit++;
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
796
1
Gpt3D_Clone796_1.java 1 18
Gpt3D_Clone796_1.java 19 32
----------------------------------------

private static String merge (String...strings) {
    StringBuilder sb = new StringBuilder ();
    int adv;
    boolean edited;
    adv = 0;
    edited = true;
    while (edited) {
        edited = false;
        for (String s : strings) {
            if (adv < s.length ()) {
                sb.append (s.charAt (adv));
                edited = true;
            }
        }
        adv ++;
    }
    return sb.toString ();
}
----------------------------------------

private static String merge (String[] strings) {
    StringBuilder sb = new StringBuilder ();
    int index;
    for (index = 0; index < strings[0].length(); index++) {
        for (int j = 0; j < strings.length; j++) {
            if (index < strings[j].length()) {
                sb.append(strings[j].charAt(index));
            }
        }
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
797
0
Gpt3D_Clone797_0.java 1 8
Gpt3D_Clone797_0.java 9 27
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

public static String mergeT4 (String[] strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder();
    for (String s : strings) {
        if (s.length() > maxLength) {
            maxLength = s.length();
        }
    }
    for (int i = 0; i < maxLength; i++) {
        for (String s : strings) {
            if (s.length() > i) {
                sb.append(s.charAt(i));
            }
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
797
1
Gpt3D_Clone797_1.java 1 8
Gpt3D_Clone797_1.java 9 27
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

public static String mergeT3 (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < strings.length; i++) {
        if (strings[i].length() > maxLength) {
            maxLength = strings[i].length();
        }
    }
    for (int i = 0; i < maxLength; i++) {
        for (int j = 0; j < strings.length; j++) {
            if (strings[j].length() > i) {
                sb.append(strings[j].charAt(i));
            }
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
798
0
Gpt3D_Clone798_0.java 1 8
Gpt3D_Clone798_0.java 9 27
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

public static String merge2 (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder();
    for (String s : strings){
        if(s.length() > maxLength) {
            maxLength = s.length();
        }
    }
    for (int i = 0; i < maxLength; i++) {
        for (String s : strings) {
            if (s.length() > i) {
                sb.append(s.charAt(i));
            }
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
798
1
Gpt3D_Clone798_1.java 1 8
Gpt3D_Clone798_1.java 9 27
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

public static String mergeDifferent(String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) {
        if (s.length () > maxLength) {
            maxLength = s.length ();
        }
    }
    for (String s : strings) {
        for (int i = 0; i < maxLength; i++) {
            if (s.length () > i) {
                sb.append (s.charAt (i));
            }
        }
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
798
2
Gpt3D_Clone798_2.java 1 8
Gpt3D_Clone798_2.java 9 27
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

public static String merge3 (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < strings.length; i ++) {
        if (strings[i].length () > maxLength) {
            maxLength = strings[i].length();
        }
    }
    for (int i = 0; i < maxLength; i++) {
        for (int j = 0; j < strings.length; j++) {
            if (strings[j].length() > i) {
                sb.append(strings[j].charAt(i));
            }
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
798
3
Gpt3D_Clone798_3.java 1 8
Gpt3D_Clone798_3.java 9 25
----------------------------------------

public static String merge (String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) if (s.length () > maxLength) maxLength = s.length ();
    for (int i = 0;
    i < maxLength; i ++) for (String s : strings) if (s.length () > i) sb.append (s.charAt (i));
    return sb.toString ();
}
----------------------------------------

public static String mergeAlt(String...strings) {
    int maxLength = 0;
    StringBuilder sb = new StringBuilder ();
    for (String s : strings) {
        maxLength = Math.max(maxLength, s.length());
    }
    for (String s : strings) {
        for (int i = 0; i < maxLength; i++) {
            if (s.length() > i) {
                sb.append(s.charAt(i));
            }
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
808
0
Gpt3D_Clone808_0.java 1 9
Gpt3D_Clone808_0.java 10 20
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (a + "\n");
    sb.append (b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(a);
    sb.append("\n");
    sb.append(b);
    sb.append("\n");
    aList.forEach(elem -> sb.append(elem).append("\n"));
    return sb.toString().trim();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
808
1
Gpt3D_Clone808_1.java 1 9
Gpt3D_Clone808_1.java 10 20
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (a + "\n");
    sb.append (b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString() {
    List<String> list = new ArrayList<String>();
    list.add(a);
    list.add(b);
    for (A elem : aList) {
        list.add(elem.toString());
    }
    return list.stream().collect(Collectors.joining("\n"));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
808
2
Gpt3D_Clone808_2.java 1 9
Gpt3D_Clone808_2.java 10 20
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (a + "\n");
    sb.append (b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    String sb = "";
    sb += (a + "\n");
    sb += (b + "\n");
    for (A elem : aList) {
        sb += (elem + "\n");
    }
    return sb;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
809
0
Gpt3D_Clone809_0.java 1 9
Gpt3D_Clone809_0.java 10 22
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("--------" + v + "\n");
    sb.append ("--------" + w + "\n");
    for (B elem : bList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    String input = "";
    int size = bList.size ();
    input += "--------" + v + "\n";
    input += "--------" + w + "\n";
    for (int i = 0; i < size; i++) {
        B elem = bList.get (i);
        input += elem + "\n";
    }
    return input;    
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
809
1
Gpt3D_Clone809_1.java 1 9
Gpt3D_Clone809_1.java 10 21
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("--------" + v + "\n");
    sb.append ("--------" + w + "\n");
    for (B elem : bList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (v + "\n");
    sb.append (w + "\n");
    Iterator<B> it = bList.iterator ();
    while (it.hasNext ()) {
        sb.append (it.next () + "\n");
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
809
3
Gpt3D_Clone809_3.java 1 9
Gpt3D_Clone809_3.java 10 20
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("--------" + v + "\n");
    sb.append ("--------" + w + "\n");
    for (B elem : bList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    String input = "";
    input += "--------" + v + "\n";
    input += "--------" + w + "\n";
    for (B elem : bList) {
        input += elem + "\n";
    }
    return input;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
815
0
Gpt3D_Clone815_0.java 1 21
Gpt3D_Clone815_0.java 22 36
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println("Number of Occurrence of " + ch + " is:" + countOccurrence(tempString.toString(), ch));
        }
        if (ch == value) {
            System.out.println("Number of Occurrence of " + ch + " is:" + countOccurrence(tempString.toString(), ch));
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
816
1
Gpt3D_Clone816_1.java 1 8
Gpt3D_Clone816_1.java 9 18
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";
    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
}
----------------------------------------

public static void countString (String str, char searchKey) {
    int count = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count++;
    }
    System.out.println ("Number of Occurrence of " + searchKey + " is " + count + " in string " + str);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
817
1
Gpt3D_Clone817_1.java 1 21
Gpt3D_Clone817_1.java 22 37
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    int occurance = 0;
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            if (ch == value) {
                occurance++;
            }  
            System.out.println ("Number of Occurrence of " + ch + " is:" + occurance);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
817
2
Gpt3D_Clone817_2.java 1 21
Gpt3D_Clone817_2.java 22 35
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    int occurance = 0;
    for (String s : arr) {
        for (char ch : s.toCharArray ()) {
            if (ch == value) {
                occurance++;
            }   
            System.out.println ("Number of Occurrence of " + ch + " is:" + occurance);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
817
3
Gpt3D_Clone817_3.java 1 21
Gpt3D_Clone817_3.java 22 65
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------

public class StringCounter {
    public static void countString (String str, char value) {
        processString (str);
        if (! (Character.toString (value).isEmpty ())) {
            processStringWithChar(str, value);
        }
    }
    private static void processString (String str) {
        String [] arr = str.split ("");
        StringBuffer tempString = new StringBuffer ();
        for (String s : arr) {
           tempString.append (s);
           processChars (s, tempString);
        }
    }
    private static void processChars (String s, StringBuffer tempString) {
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    private static void processStringWithChar (String str, char value) {
        String [] arr = str.split ("");
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            processCharsWithValue (s, value, tempString2);
        }
    }
    private static void processCharsWithValue (String s, char value, StringBuffer tempString2) {
        for (char ch : s.toCharArray ()) {
            if (ch == value) {
                System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
818
0
Gpt3D_Clone818_0.java 1 8
Gpt3D_Clone818_0.java 9 21
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";
    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
}
----------------------------------------

public static void countString (String str, char searchKey) {
    int count = 0;
    for (int i = 0; i < str.length (); i++) {
        if (str.charAt (i) == searchKey) {
            System.out.println (str.charAt (i));
            count++;
        }
    }
    System.out.println ("Number of Occurrence of " + searchKey + " is " + count + " in string " + str);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
818
1
Gpt3D_Clone818_1.java 1 8
Gpt3D_Clone818_1.java 9 18
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";
    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
}
----------------------------------------

public static void countString (String str, char searchKey) {
    int count = 0;
    for (int i = 0; i < str.length (); i++) {
        if (str.charAt (i) == searchKey) count++;
    }
    System.out.println ("Number of Occurrence of " + searchKey + " is " + count + " in string " + str);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
819
0
Gpt3D_Clone819_0.java 1 8
Gpt3D_Clone819_0.java 9 22
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";
    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
}
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    int occurrences = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) {
			count += str.charAt (i) + "\n";
			occurrences++;
		}
    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + occurrences + " in string " + str);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
828
0
Gpt3D_Clone828_0.java 1 20
Gpt3D_Clone828_0.java 21 40
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    final char [] characterInput = S.toCharArray ();
    final int [] integerInput = new int [characterInput.length];
    for (int counter = 0;
    counter < characterInput.length; counter ++) {
        integerInput [counter] = characterMapping.get (characterInput [counter]);
    }
    int [] result = new int [P.length];
    for (int index = 0;
    index < P.length; index ++) {
        if (P [index] == Q [index]) {
            result [index] = integerInput [P [index]];
            break;
        }
        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);
        final int minimumValue = minimum (subArray);
        result [index] = minimumValue;
    }
    return result;
}
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    char [] c = S.toCharArray();
    int [] input = new int[c.length];
    for (int i = 0; i < c.length; ++i) 
        input[i] = characterMapping.get(c[i]);
    int [] result = new int [P.length];
    for (int i = 0; i < P.length; ++i) {
        if (P[i] == Q[i]) {
            result[i] = input[P[i]];
            break;
        }
        int [] subArray = Arrays.copyOfRange(input, P[i], Q[i]+1);
        int minVal = minimum(subArray);
        result[i] = minVal;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
828
1
Gpt3D_Clone828_1.java 1 20
Gpt3D_Clone828_1.java 21 39
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    final char [] characterInput = S.toCharArray ();
    final int [] integerInput = new int [characterInput.length];
    for (int counter = 0;
    counter < characterInput.length; counter ++) {
        integerInput [counter] = characterMapping.get (characterInput [counter]);
    }
    int [] result = new int [P.length];
    for (int index = 0;
    index < P.length; index ++) {
        if (P [index] == Q [index]) {
            result [index] = integerInput [P [index]];
            break;
        }
        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);
        final int minimumValue = minimum (subArray);
        result [index] = minimumValue;
    }
    return result;
}
----------------------------------------

public int [] resolve (String S, int [] P, int [] Q) {
    char [] c = S.toCharArray();
    int [] integer = new int[c.length];
    for (int iter = 0; iter < c.length; ++iter) 
        integer[iter] = characterMapping.get(c[iter]);
    int [] finalResult = new int [P.length];
    for (int iter = 0; iter < P.length; ++iter) {
        if (P[iter] == Q[iter]) {
            finalResult[iter] = integer[P[iter]];
            break;
        }
        int [] subArr = Arrays.copyOfRange(integer, P[iter], Q[iter]+1);
        int minVal = minimum(subArr);
        finalResult[iter] = minVal;
    }
    return finalResult;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
828
2
Gpt3D_Clone828_2.java 1 20
Gpt3D_Clone828_2.java 21 34
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    final char [] characterInput = S.toCharArray ();
    final int [] integerInput = new int [characterInput.length];
    for (int counter = 0;
    counter < characterInput.length; counter ++) {
        integerInput [counter] = characterMapping.get (characterInput [counter]);
    }
    int [] result = new int [P.length];
    for (int index = 0;
    index < P.length; index ++) {
        if (P [index] == Q [index]) {
            result [index] = integerInput [P [index]];
            break;
        }
        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);
        final int minimumValue = minimum (subArray);
        result [index] = minimumValue;
    }
    return result;
}
----------------------------------------

public void solution (int [] integerInput, int [] P, int [] Q, int [] result) {
    for (int index = 0;
    index < P.length; index ++) {
        if (P [index] == Q [index]) {
            result [index] = integerInput [P [index]];
            break;
        }
        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);
        final int minimumValue = minimum (subArray);
        result [index] = minimumValue;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
828
3
Gpt3D_Clone828_3.java 1 20
Gpt3D_Clone828_3.java 21 28
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    final char [] characterInput = S.toCharArray ();
    final int [] integerInput = new int [characterInput.length];
    for (int counter = 0;
    counter < characterInput.length; counter ++) {
        integerInput [counter] = characterMapping.get (characterInput [counter]);
    }
    int [] result = new int [P.length];
    for (int index = 0;
    index < P.length; index ++) {
        if (P [index] == Q [index]) {
            result [index] = integerInput [P [index]];
            break;
        }
        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);
        final int minimumValue = minimum (subArray);
        result [index] = minimumValue;
    }
    return result;
}
----------------------------------------

public int [] solution (String input, int [] P, int [] Q) {
    final int [] integerInput = generateIntegerInput (input);
    int [] result = new int [P.length];
    solution (integerInput, P, Q, result);
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
835
1
Gpt3D_Clone835_1.java 1 39
Gpt3D_Clone835_1.java 40 67
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int j = startIndex; j <= endIndex; j++) {
            char c = S.charAt(j);
            if (c == 'A') {
                minimum = 1;
                break;
            } else if (c == 'C') {
                minimum = 2;
                break;
            } else if (c == 'G') {
                minimum = 3;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
840
0
Gpt3D_Clone840_0.java 1 21
Gpt3D_Clone840_0.java 22 53
----------------------------------------

public static String join (String separator, String...values) {
    if (values.length == 0) return "";
    char [] sep = separator.toCharArray ();
    int totalSize = (values.length - 1) * sep.length;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] == null) values [i] = "";
        else totalSize += values [i].length ();
    }
    char [] joined = new char [totalSize];
    int pos = 0;
    for (int i = 0, end = values.length - 1;
    i < end; i ++) {
        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());
        pos += values [i].length ();
        System.arraycopy (sep, 0, joined, pos, sep.length);
        pos += sep.length;
    }
    System.arraycopy (values [values.length - 1].toCharArray (), 0, joined, pos, values [values.length - 1].length ());
    return new String (joined);
}
----------------------------------------

public static String join (String separator, String...values) 
{
    int totalSize = 0;
    for (int i = 0; 
	i < values.length; i ++) 
	{
        if (values [i] == null) 
			values [i] = "";
		else 
			totalSize += values [i].length ();
    }
		
    int pos = 0;
    char [] joined = new char [totalSize];
    for (int i = 0, end = values.length; 
	i < end; i ++) 
	{
        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());
        pos += values [i].length ();
        if (i < end-1)
		{
            pos += separator.length();
            for (int j = 0; j < separator.length(); j++)
			{
                joined[pos-1] = separator.charAt(j);
            }
        }
    }
    return new String (joined);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
841
0
Gpt3D_Clone841_0.java 1 21
Gpt3D_Clone841_0.java 22 62
----------------------------------------

public static String join (String separator, String...values) {
    if (values.length == 0) return "";
    char [] sep = separator.toCharArray ();
    int totalSize = (values.length - 1) * sep.length;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] == null) values [i] = "";
        else totalSize += values [i].length ();
    }
    char [] joined = new char [totalSize];
    int pos = 0;
    for (int i = 0, end = values.length - 1;
    i < end; i ++) {
        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());
        pos += values [i].length ();
        System.arraycopy (sep, 0, joined, pos, sep.length);
        pos += sep.length;
    }
    System.arraycopy (values [values.length - 1].toCharArray (), 0, joined, pos, values [values.length - 1].length ());
    return new String (joined);
}
----------------------------------------

public static String join(String separator, String...values) {
    if (values.length == 0) {
        return "";
    }
    char[] sep = separator.toCharArray();
    int totalSize = (values.length - 1) * sep.length;
    
    for (int i = 0; i < values.length; i++) {
        if (values[i] == null) {
            values[i] = "";
        }
        else {
            totalSize += values[i].length();
        }
    }
    char[] joined = new char[totalSize];
    int pos = 0;
    
    for (int i = 0, end = values.length - 1; i < end; i++) {
        String str = values[i];
        int length = str.length();
        for (int j = 0; j < length; j++) {
            joined[pos] = str.charAt(j);
            pos++;
        }
        for (int k = 0; k < sep.length; k++) {
            joined[pos] = sep[k];
            pos++;
        }
    }
    
    String lastStr = values[values.length - 1];
    int len = lastStr.length();
    for (int j = 0; j < len; j++) {
        joined[pos] = lastStr.charAt(j);
        pos++;
    }
    return new String (joined);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
841
1
Gpt3D_Clone841_1.java 1 21
Gpt3D_Clone841_1.java 22 58
----------------------------------------

public static String join (String separator, String...values) {
    if (values.length == 0) return "";
    char [] sep = separator.toCharArray ();
    int totalSize = (values.length - 1) * sep.length;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] == null) values [i] = "";
        else totalSize += values [i].length ();
    }
    char [] joined = new char [totalSize];
    int pos = 0;
    for (int i = 0, end = values.length - 1;
    i < end; i ++) {
        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());
        pos += values [i].length ();
        System.arraycopy (sep, 0, joined, pos, sep.length);
        pos += sep.length;
    }
    System.arraycopy (values [values.length - 1].toCharArray (), 0, joined, pos, values [values.length - 1].length ());
    return new String (joined);
}
----------------------------------------

public static String join(String separator, String...values) {
    if (values.length < 1) {
        return "";
    }
    char [] sep = separator.toCharArray();
    int totalLength = (values.length - 1) * sep.length;
    
    for (int i = 0; i < values.length; i++) {
        if (values[i] == null) {
            values[i] = "";
        }
        else {
            totalLength += values[i].length();
        }
    }
    
    char [] result = new char[totalLength];
    int position = 0;
    
    for (int i = 0, end = values.length - 1; i < end; i++) {
        String str = values[i];
        int length = str.length();
        str.getChars(0, length, result, position);
        position += length;
        
        System.arraycopy(sep, 0, result, position, sep.length);
        position += sep.length;
    }
    
    String lastStr = values[values.length - 1];
    lastStr.getChars(0, lastStr.length(), result, position);
    position += lastStr.length();
    
    return new String (result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
845
1
Gpt3D_Clone845_1.java 1 19
Gpt3D_Clone845_1.java 20 32
----------------------------------------

public int tortoiseMoves () {
    switch (tGen ()) {
        case 1 :
        case 2 :
        case 3 :
        case 4 :
        case 5 :
            return 3;
        case 6 :
        case 7 :
        case 8 :
            return 1;
        case 9 :
        case 10 :
            return - 6;
        default :
            return 0;
    }
}
----------------------------------------

public int tortoiseMoves() {
    if (tGen() == 1 || tGen() == 2 || tGen() == 3 || tGen() == 4 || tGen() == 5) {
        return 3;
    } else if (tGen() == 6 || tGen() == 7 || tGen() == 8) {
        return 1;
    } else if (tGen() == 9 || tGen() == 10) {
        return -6;
    } else {
        return 0;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
846
1
Gpt3D_Clone846_1.java 1 19
Gpt3D_Clone846_1.java 20 37
----------------------------------------

public int tortoiseMoves () {
    switch (tGen ()) {
        case 1 :
        case 2 :
        case 3 :
        case 4 :
        case 5 :
            return 3;
        case 6 :
        case 7 :
        case 8 :
            return 1;
        case 9 :
        case 10 :
            return - 6;
        default :
            return 0;
    }
}
----------------------------------------

public int tortoiseMoves () {
    int ret;
    if (tGen () == 1 || tGen () == 2 || tGen () == 3 || tGen () == 4 || tGen () == 5) {
        ret = 3;
    }
    else if (tGen () == 6 || tGen () == 7 || tGen () == 8) {
        ret = 1;
    }
    else if (tGen () == 9 || tGen () == 10) {
        ret = - 6;
    }
    else {
        ret = 0;
    }
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
851
0
Gpt3D_Clone851_0.java 1 8
Gpt3D_Clone851_0.java 9 21
----------------------------------------

public static double [] [] amountOTP (double [] [] a, int x) {
    double [] [] b = new double [x] [x];
    x = Math.min (x, a.length);
    for (int i = 0;
    i < x; i ++) for (int j = 0;
    j < x; j ++) b [i] [j] = a [i] [j];
    return b;
}
----------------------------------------

public static double [][] amountOTP (double [] [] a, int x) { 
    double [] [] b = new double [x] [x]; 
    x = Math.min (x, a.length); 
    int min = x; 
    for (int i = 0; i < min; i++) { 
        for (int j = 0; j < min; j++) { 
            b[i][j] = a[i][j]; 
        } 
    } 
    return b; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
851
1
Gpt3D_Clone851_1.java 1 8
Gpt3D_Clone851_1.java 9 20
----------------------------------------

public static double [] [] amountOTP (double [] [] a, int x) {
    double [] [] b = new double [x] [x];
    x = Math.min (x, a.length);
    for (int i = 0;
    i < x; i ++) for (int j = 0;
    j < x; j ++) b [i] [j] = a [i] [j];
    return b;
}
----------------------------------------

public static double [][] amountOTP (double [] [] a, int x) { 
    double [] [] b = new double [x] [x]; 
    int min = Math.min (x, a.length); 
    for (int i = 0; i < min; i++) { 
        for (int j = 0; j < min; j++) { 
            b[i][j] = a[i][j]; 
        } 
    } 
    return b; 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
853
0
Gpt3D_Clone853_0.java 1 13
Gpt3D_Clone853_0.java 14 32
----------------------------------------

static int [] createArray (int size) {
    int [] result = new int [size];
    int limit = (size + 1) / 2;
    int start = 0, value = 0, idx = 0;
    do {
        for (int i = start;
        i < start + limit && idx < size; ++ i) result [idx ++] = value;
        start += limit;
        limit = (limit + 1) / 2;
        ++ value;
    } while (idx < size);
    return result;
}
----------------------------------------

static int[] createArray(int size) {
    int[] result = new int[size];
    int limit = size + 1;
    int start = 0;
    int value = 0, idx = 0;
    while (idx < size) {
        int range = limit / 2;
        for (int i = start; i < start + range && idx < size; i++) {
            result[idx++] = value;
        }
        start += range;
        limit /= 2;
        if (limit == 2) limit++;
        value++;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
853
2
Gpt3D_Clone853_2.java 1 13
Gpt3D_Clone853_2.java 14 29
----------------------------------------

static int [] createArray (int size) {
    int [] result = new int [size];
    int limit = (size + 1) / 2;
    int start = 0, value = 0, idx = 0;
    do {
        for (int i = start;
        i < start + limit && idx < size; ++ i) result [idx ++] = value;
        start += limit;
        limit = (limit + 1) / 2;
        ++ value;
    } while (idx < size);
    return result;
}
----------------------------------------

static int[] createArray(int size) {
    int[] result = new int[size];
    int limit = (size + 1) / 2, start = 0, value = 0, idx = 0;
    while (idx < size) {
        for (int index = start;
             index < start + limit && idx < size; index++) {
            result[idx++] = value;
        }
        start += limit;
        limit = (limit + 1) / 2;
        value++;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
857
0
Gpt3D_Clone857_0.java 1 11
Gpt3D_Clone857_0.java 12 29
----------------------------------------

public static int binarySearch (int intToSearch, int [] sortedArray) {
    int lower = 0;
    int upper = sortedArray.length - 1;
    while (lower <= upper) {
        int mid = lower + (upper - lower) / 2;
        if (intToSearch < sortedArray [mid]) upper = mid - 1;
        else if (intToSearch > sortedArray [mid]) lower = mid + 1;
        else return mid;
    }
    return - 1;
}
----------------------------------------

public static int binarySearch (int intToSearch, int [] sortedArray) {
	int lower, mid, upper;
	lower = 0;
	upper = sortedArray.length - 1;
	
	while (lower <= upper) {
	    mid = lower + (upper - lower) / 2;
	    if (sortedArray[mid] == intToSearch) 
	    	return mid; 
	    else if (sortedArray[mid] < intToSearch) 
	    	lower = mid + 1;	 
	    else 
	    	upper = mid - 1; 	    
	}
	return -1; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
857
1
Gpt3D_Clone857_1.java 1 11
Gpt3D_Clone857_1.java 12 29
----------------------------------------

public static int binarySearch (int intToSearch, int [] sortedArray) {
    int lower = 0;
    int upper = sortedArray.length - 1;
    while (lower <= upper) {
        int mid = lower + (upper - lower) / 2;
        if (intToSearch < sortedArray [mid]) upper = mid - 1;
        else if (intToSearch > sortedArray [mid]) lower = mid + 1;
        else return mid;
    }
    return - 1;
}
----------------------------------------

public static int binarySearch (int intToSearch, int [] sortedArray) {
	int lower, mid, upper;
	lower = 0;
	upper = sortedArray.length - 1;
	
	while (lower <= upper) {
	    mid = lower + (upper - lower) / 2;
	    if (intToSearch == sortedArray[mid]) 
	    	return mid; 
	    else if (intToSearch > sortedArray[mid]) 
	    	lower = mid + 1;	 
	    else 
	    	upper = mid - 1; 	    
	}
	return -1; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
868
0
Gpt3D_Clone868_0.java 1 10
Gpt3D_Clone868_0.java 11 28
----------------------------------------

public VV remove (String key) {
    synchronized (lock) {
        Item < VV > item = cache.remove (key);
        if (item != null) {
            return item.payload;
        } else {
            return null;
        }
    }
}
----------------------------------------

public VV remove (String key) {
    boolean isLocked = lock.tryLock();
    try {
        if (isLocked) {
            Item < VV > item = cache.remove (key);
            if (item != null) {
                return item.payload;
            }
        }
    } finally {
        if (isLocked) {
            lock.unlock();
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
868
1
Gpt3D_Clone868_1.java 1 10
Gpt3D_Clone868_1.java 11 23
----------------------------------------

public VV remove (String key) {
    synchronized (lock) {
        Item < VV > item = cache.remove (key);
        if (item != null) {
            return item.payload;
        } else {
            return null;
        }
    }
}
----------------------------------------

public VV remove (String key) {
    lock.lock();
    Item < VV > item = cache.remove (key);
    if (item != null) {
        VV payload = item.payload;
        lock.unlock();
        return payload;
    }
    lock.unlock();
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
871
0
Gpt3D_Clone871_0.java 1 14
Gpt3D_Clone871_0.java 15 29
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) 
        return;
    while (currentSize >= maxSize) 
        freeSpace ();
    synchronized (this) {
        map.remove(key);
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
871
1
Gpt3D_Clone871_1.java 1 14
Gpt3D_Clone871_1.java 15 28
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

public void put (Key key, Value val) {
    
    while (currentSize >= maxSize) 
        freeSpace ();
    map.remove(key);
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
876
0
Gpt3D_Clone876_0.java 1 7
Gpt3D_Clone876_0.java 8 17
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (grantResults.length == 0 || grantResults == null) {
    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {
    }
}
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    if (grantResults == null || grantResults.length == 0) {
    } else if (!(grantResults [0] == PackageManager.PERMISSION_GRANTED) && !(grantResults [0] == PackageManager.PERMISSION_DENIED)) {
    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else {
        // Denied
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
876
1
Gpt3D_Clone876_1.java 1 7
Gpt3D_Clone876_1.java 8 18
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    if (grantResults.length == 0 || grantResults == null) {
    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {
    }
}
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    if (grantResults != null && grantResults.length > 0) {
        if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
        } else {
            // Denied
        }
    } else {
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
2
Gpt3D_Clone877_2.java 1 17
Gpt3D_Clone877_2.java 18 25
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

public void onRequestPermissionsResult(int requestCode,@NonNull String [] permissions,@NonNull int [] grantResults) {
    if (requestCode == mRequestCode) {
        checkPermissionGrants(grantResults);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
3
Gpt3D_Clone877_3.java 1 17
Gpt3D_Clone877_3.java 18 24
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

public void onRequestPermissionsResult(int requestCode,@NonNull String [] permissions,@NonNull int [] grantResults) {
  PermissionResultHandler resultHandler = getPermissionResultHandler();
  resultHandler.handleResult(requestCode, mRequestCode, grantResults, mRequestPermissionListener);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
87
0
Gpt3D_Clone87_0.java 1 9
Gpt3D_Clone87_0.java 10 19
----------------------------------------

public static void type (String characters) {
    Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();
    StringSelection stringSelection = new StringSelection (characters);
    clipboard.setContents (stringSelection, clipboardOwner);
    robot.keyPress (KeyEvent.VK_CONTROL);
    robot.keyPress (KeyEvent.VK_V);
    robot.keyRelease (KeyEvent.VK_V);
    robot.keyRelease (KeyEvent.VK_CONTROL);
}
----------------------------------------

public static void type (String characters) {
    Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();
    StringSelection stringSelection = new StringSelection (characters);
    clipboard.setContents (stringSelection, clipboardOwner);
    robot.enter ();
    robot.paste ();
    robot.enter ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
880
2
Gpt3D_Clone880_2.java 1 17
Gpt3D_Clone880_2.java 18 36
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

public void onRequestPermissionsResult(int reqCode, @NonNull String [] permissions, 
    int[] grantResults) {
    if (reqCode != mRequestCode) {
        return;
    }
    if (grantResults.length == 0) {
        mRequestPermissionListener.onFailed();
        return;
    }
    for (int grantResult : grantResults) {
        if (grantResult != PackageManager.PERMISSION_GRANTED) {
            mRequestPermissionListener.onFailed();
            return;
        }
    }
    mRequestPermissionListener.onSuccess();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
880
3
Gpt3D_Clone880_3.java 1 17
Gpt3D_Clone880_3.java 18 35
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

public void onRequestPermissionsResult(int reqCode, String[] perm, 
    int[] grantResults) {
    if (reqCode == mRequestCode) {
        if (grantResults.length == 0) {
            mRequestPermissionListener.onFailed();
            return;
        }
        for (int i = 0; i < grantResults.length; i++) {
            if (grantResults[i] != PackageManager.PERMISSION_GRANTED) {
                mRequestPermissionListener.onFailed();
                return;
            }
        }
        mRequestPermissionListener.onSuccess();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
882
0
Gpt3D_Clone882_0.java 1 32
Gpt3D_Clone882_0.java 33 68
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String [] permissions, int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    switch (requestCode) {
        case REQUEST_READ_PHONE_STATE :
            {
                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
                    Toast.makeText (LoginActivity.this, "Permission granted.", Toast.LENGTH_SHORT).show ();
                    finish ();
                    startActivity (getIntent ());
                } else {
                    Toast.makeText (LoginActivity.this, "The app was not allowed to get your phone state. Hence, it cannot function properly. Please consider granting it this permission", Toast.LENGTH_LONG).show ();
                }
            } case REQUEST_ACCESS_FINE_LOCATION :
            {
                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
                    Toast.makeText (LoginActivity.this, "Permission granted.", Toast.LENGTH_SHORT).show ();
                    finish ();
                    startActivity (getIntent ());
                } else {
                    Toast.makeText (LoginActivity.this, "The app was not allowed to get your location. Hence, it cannot function properly. Please consider granting it this permission", Toast.LENGTH_LONG).show ();
                }
            } case REQUEST_WRITE_STORAGE :
            {
                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
                    Toast.makeText (LoginActivity.this, "Permission granted.", Toast.LENGTH_SHORT).show ();
                    finish ();
                    startActivity (getIntent ());
                } else {
                    Toast.makeText (LoginActivity.this, "The app was not allowed to write to your storage. Hence, it cannot function properly. Please consider granting it this permission", Toast.LENGTH_LONG).show ();
                }
            }}
}
----------------------------------------

public void onRequestPermissionsResult (int requestCode, String [] permissions, int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    
    boolean permissionGranted = false;
    String permissionName = "";
    String errorMessage = ""; 
    switch (requestCode) {
        case REQUEST_READ_PHONE_STATE : 
            permissionGranted = grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED;
            permissionName = "phone state";
            errorMessage = "The app was not allowed to get your phone state. Hence, it cannot function properly. Please consider granting it this permission";
            break;
        case REQUEST_ACCESS_FINE_LOCATION : 
            permissionGranted = grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED;
            permissionName = "location";
            errorMessage = "The app was not allowed to get your location. Hence, it cannot function properly. Please consider granting it this permission"; 
            break; 
        case REQUEST_WRITE_STORAGE : 
            permissionGranted = grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED;
            permissionName = "write to storage";
            errorMessage = "The app was not allowed to write to your storage. Hence, it cannot function properly. Please consider granting it this permission"; 
            break; 
    }
    if (permissionGranted) {
        showToast("Permission granted.");
        finish();
        startActivity(getIntent());
    }
    else {
        showToast(String.format("The app was not allowed to get your %s. Hence, it cannot function properly. Please consider granting it this permission", permissionName));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
887
0
Gpt3D_Clone887_0.java 1 11
Gpt3D_Clone887_0.java 12 24
----------------------------------------

public static void main (String [] args) {
    String word = "a b c";
    int i = 0, spaceCount = 0;
    while (i < word.length ()) {
        if (word.charAt (i) == ' ') {
            spaceCount ++;
        }
        i ++;
    }
    System.out.println ("Spaces in string: " + spaceCount);
}
----------------------------------------

public static void main (String [] args) {
    String word = "a b c";
    int spaceCount = 0;
    for (char c : word.toCharArray ()) {
        if (c == ' ') {
            spaceCount ++;
        }
    }
    System.out.println ("Spaces in string: " + spaceCount);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
88
0
Gpt3D_Clone88_0.java 1 21
Gpt3D_Clone88_0.java 22 47
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

public void type (CharSequence chars, int ms) {
    
    if(ms < 0)
        ms = 0;
    
    for (int i = 0; i < chars.length (); i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        
        if (shift)
            robot.keyPress (KeyEvent.VK_SHIFT);
        
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        
        if (shift)
            robot.keyRelease (KeyEvent.VK_SHIFT);
        
        if (ms > 0)
            robot.delay (ms);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
88
1
Gpt3D_Clone88_1.java 1 21
Gpt3D_Clone88_1.java 22 47
----------------------------------------

public void type (CharSequence chars, int ms) {
    ms = ms > 0 ? ms : 0;
    for (int i = 0, len = chars.length ();
    i < len; i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        if (shift) {
            robot.keyPress (KeyEvent.VK_SHIFT);
        }
        robot.keyPress (keyCode);
        robot.keyRelease (keyCode);
        if (shift) {
            robot.keyRelease (KeyEvent.VK_SHIFT);
        }
        if (ms > 0) {
            robot.delay (ms);
        }
    }
}
----------------------------------------

public void type (CharSequence chars, int ms) {
    
    if(ms < 0 )
        ms = 0;
    
    for (int i = 0; i < chars.length (); i ++) {
        char c = chars.charAt (i);
        AWTKeyStroke keyStroke = getKeyStroke (c);
        int keyCode = keyStroke.getKeyCode ();
        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);
        
        if (shift)
            robot.keyPress (KeyEvent.VK_SHIFT);
        
        robot.pressKey (keyCode);
        robot.releaseKey (keyCode);
        
        if (shift)
            robot.keyRelease (KeyEvent.VK_SHIFT);
        
        if (ms > 0)
            robot.wait (ms);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
894
0
Gpt3D_Clone894_0.java 1 17
Gpt3D_Clone894_0.java 18 25
----------------------------------------

public static void main (String [] args) throws IOException {
    File dir = new File (".");
    String source = dir.getCanonicalPath () + File.separator + "Code.txt";
    String dest = dir.getCanonicalPath () + File.separator + "Dest.txt";
    File fin = new File (source);
    FileInputStream fis = new FileInputStream (fin);
    BufferedReader in = new BufferedReader (new InputStreamReader (fis));
    FileWriter fstream = new FileWriter (dest, true);
    BufferedWriter out = new BufferedWriter (fstream);
    String aLine = null;
    while ((aLine = in.readLine ()) != null) {
        out.write (aLine);
        out.newLine ();
    }
    in.close ();
    out.close ();
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File dir = new File (".");
    String sourcePath = dir.getCanonicalPath () + File.separator + "Code.txt";
    String destPath = dir.getCanonicalPath () + File.separator + "Dest.txt";
    transferCopy(sourcePath, destPath);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
906
0
Gpt3D_Clone906_0.java 1 8
Gpt3D_Clone906_0.java 9 19
----------------------------------------

public static void removeDuplicates (char [] str) {
    int map = 0;
    for (int i = 0;
    i < str.length; i ++) {
        if ((map & (1 << (str [i] - 'a'))) > 0) str [i] = 0;
        else map |= 1 << (str [i] - 'a');
    }
}
----------------------------------------

public static void removeDuplicates (char [] str) {
    int bitmask = 0;
    for (int i = 0;
    i < str.length; i++) {
        int charAsInt = str[i] - 'a';
        if ((bitmask & (1 << charAsInt)) == 0) bitmask |= 1 << charAsInt;
        else str[i] = 0;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
906
1
Gpt3D_Clone906_1.java 1 8
Gpt3D_Clone906_1.java 9 19
----------------------------------------

public static void removeDuplicates (char [] str) {
    int map = 0;
    for (int i = 0;
    i < str.length; i ++) {
        if ((map & (1 << (str [i] - 'a'))) > 0) str [i] = 0;
        else map |= 1 << (str [i] - 'a');
    }
}
----------------------------------------

public static void removeDuplicates (char [] str) {
    int bitfield = 0;
    for (int i = 0;
    i < str.length; i++) {
        int charAsInt = str[i] - 'a';
        if ((bitfield & (1 << charAsInt)) > 0) str[i] = 0;
        else  bitfield |= 1 << charAsInt;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
907
0
Gpt3D_Clone907_0.java 1 11
Gpt3D_Clone907_0.java 12 21
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

static String removeDuplicates (String s) {
    Set <String> noDupes = new HashSet<>();
    for (int i = 0; i < s.length (); i ++) {
        String ch = String.valueOf(s.charAt(i));
        noDupes.add(ch);
    }
    return String.join("", noDupes);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
908
0
Gpt3D_Clone908_0.java 1 8
Gpt3D_Clone908_0.java 9 22
----------------------------------------

public static void removeDuplicates (char [] str) {
    int map = 0;
    for (int i = 0;
    i < str.length; i ++) {
        if ((map & (1 << (str [i] - 'a'))) > 0) str [i] = 0;
        else map |= 1 << (str [i] - 'a');
    }
}
----------------------------------------

public static void removeDuplicates(char[] str) 
{ 
    int bitmap = 0; 
    for (int i = 0; i < str.length; i++) 
    { 
        int x = str[i] - 'a'; 
        if ((bitmap & (1 << x)) > 0) 
            str[i] = 0; 
        else 
            bitmap = bitmap | (1 << x); 
    } 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
908
1
Gpt3D_Clone908_1.java 1 8
Gpt3D_Clone908_1.java 9 18
----------------------------------------

public static void removeDuplicates (char [] str) {
    int map = 0;
    for (int i = 0;
    i < str.length; i ++) {
        if ((map & (1 << (str [i] - 'a'))) > 0) str [i] = 0;
        else map |= 1 << (str [i] - 'a');
    }
}
----------------------------------------

public static void removeDuplicates (char [] str) {
    int flag = 0;
    for (int i = 0; i < str.length; i ++) {
        int val = str[i] - 'a';
        if ((flag & (1 << val)) > 0) str[i] = 0;
        else flag |= 1 << val;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
908
2
Gpt3D_Clone908_2.java 1 8
Gpt3D_Clone908_2.java 9 22
----------------------------------------

public static void removeDuplicates (char [] str) {
    int map = 0;
    for (int i = 0;
    i < str.length; i ++) {
        if ((map & (1 << (str [i] - 'a'))) > 0) str [i] = 0;
        else map |= 1 << (str [i] - 'a');
    }
}
----------------------------------------

public static void removeDuplicates(char[] str) 
{ 
    int map = 0; 
    for (int i = 0; i < str.length; i++) 
    { 
        int x = str[i] - 'a'; 
        if ((map & (1 << x)) > 0) 
            str[i] = '\0'; 
        else 
            map = map | (1 << x); 
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
908
3
Gpt3D_Clone908_3.java 1 8
Gpt3D_Clone908_3.java 9 18
----------------------------------------

public static void removeDuplicates (char [] str) {
    int map = 0;
    for (int i = 0;
    i < str.length; i ++) {
        if ((map & (1 << (str [i] - 'a'))) > 0) str [i] = 0;
        else map |= 1 << (str [i] - 'a');
    }
}
----------------------------------------

public static void removeDuplicates (char [] str) {
    int checker = 0;
    for (int i = 0; i < str.length; i ++) {
        int value = str[i] - 'a';
        if ((checker & (1 << value)) > 0) str[i] = 0;
        else checker |= 1 << value;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
914
0
Gpt3D_Clone914_0.java 1 12
Gpt3D_Clone914_0.java 13 21
----------------------------------------

public static String toHexString (byte [] bytes) {
    StringBuilder hexString = new StringBuilder ();
    for (int i = 0;
    i < bytes.length; i ++) {
        String hex = Integer.toHexString (0xFF & bytes [i]);
        if (hex.length () == 1) {
            hexString.append ('0');
        }
        hexString.append (hex);
    }
    return hexString.toString ();
}
----------------------------------------

public static String toHexString (byte [] bytes) {
    StringBuilder hexString = new StringBuilder();
    for (int i = 0; i < bytes.length; i ++) {
        hexString.append(Integer.toHexString(0xFF & bytes[i]));
    }
    return hexString.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
916
1
Gpt3D_Clone916_1.java 1 12
Gpt3D_Clone916_1.java 13 21
----------------------------------------

public static String toHexString (byte [] bytes) {
    StringBuilder hexString = new StringBuilder ();
    for (int i = 0;
    i < bytes.length; i ++) {
        String hex = Integer.toHexString (0xFF & bytes [i]);
        if (hex.length () == 1) {
            hexString.append ('0');
        }
        hexString.append (hex);
    }
    return hexString.toString ();
}
----------------------------------------

public static String toHexString (byte [] bytes) {
    StringBuilder hexString = new StringBuilder ();
    for (int i = 0; i < bytes.length; i ++) {
        hexString.append (String.format("%02X ", bytes[i]));
    }
    return hexString.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
925
0
Gpt3D_Clone925_0.java 1 9
Gpt3D_Clone925_0.java 10 28
----------------------------------------

public static boolean isPrime (int n) {
    if ((n & 1) == 0) {
        return n == 2;
    }
    if (n < 9) {
        return n > 1;
    }
    return isStrongProbablePrime (n, 2) && isStrongProbablePrime (n, 7) && isStrongProbablePrime (n, 61);
}
----------------------------------------

public static boolean isPrime (int n) {
    if ((n & 1) == 0) {
        if (n == 2) {
            return true;
        } else {
            return false;
        }
    }
    if (n < 9) {
        if (n > 1) {
            return true;
        } else {
            return false;
        }
    }
    return isStrongProbablePrime (n, 2) && isStrongProbablePrime (n, 7) && isStrongProbablePrime (n, 61);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
925
1
Gpt3D_Clone925_1.java 1 9
Gpt3D_Clone925_1.java 10 22
----------------------------------------

public static boolean isPrime (int n) {
    if ((n & 1) == 0) {
        return n == 2;
    }
    if (n < 9) {
        return n > 1;
    }
    return isStrongProbablePrime (n, 2) && isStrongProbablePrime (n, 7) && isStrongProbablePrime (n, 61);
}
----------------------------------------

public static boolean isPrime (int n) {
    if (n == 2) {
        return true;
    } else if (n == 1 || (n & 1) == 0) {
        return false;
    } else if (n < 9) {
        return true;
    } else {
        return isStrongProbablePrime (n, 2) && isStrongProbablePrime (n, 7) && isStrongProbablePrime (n, 61);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
931
0
Gpt3D_Clone931_0.java 1 9
Gpt3D_Clone931_0.java 10 18
----------------------------------------

private void expandAllNodes (JTree tree) {
    int j = tree.getRowCount ();
    int i = 0;
    while (i < j) {
        tree.expandRow (i);
        i += 1;
        j = tree.getRowCount ();
    }
}
----------------------------------------

private void expandAllNodes (JTree tree) {
     int i = 0; 
     while (i < tree.getRowCount()) {
        tree.expandRow(i); 
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
931
1
Gpt3D_Clone931_1.java 1 9
Gpt3D_Clone931_1.java 10 17
----------------------------------------

private void expandAllNodes (JTree tree) {
    int j = tree.getRowCount ();
    int i = 0;
    while (i < j) {
        tree.expandRow (i);
        i += 1;
        j = tree.getRowCount ();
    }
}
----------------------------------------

private void expandAllNodes (JTree tree) {
    for (int i = 0; i < tree.getRowCount (); i++) {
        tree.expandRow (i);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
931
2
Gpt3D_Clone931_2.java 1 9
Gpt3D_Clone931_2.java 10 16
----------------------------------------

private void expandAllNodes (JTree tree) {
    int j = tree.getRowCount ();
    int i = 0;
    while (i < j) {
        tree.expandRow (i);
        i += 1;
        j = tree.getRowCount ();
    }
}
----------------------------------------

private void expandAllNodes (JTree tree) {
    for (int i =0; i< tree.getRowCount(); i++) {
        tree.expandRow(i);
    }  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
931
3
Gpt3D_Clone931_3.java 1 9
Gpt3D_Clone931_3.java 10 17
----------------------------------------

private void expandAllNodes (JTree tree) {
    int j = tree.getRowCount ();
    int i = 0;
    while (i < j) {
        tree.expandRow (i);
        i += 1;
        j = tree.getRowCount ();
    }
}
----------------------------------------

private void expandAllNodes (JTree tree) {
    while (tree.getRowCount () > 0) {
        tree.expandRow (0);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
938
0
Gpt3D_Clone938_0.java 1 12
Gpt3D_Clone938_0.java 13 26
----------------------------------------

private static String join (String delimiter, String...parts) {
    StringBuilder builder = new StringBuilder ();
    for (String part : parts) {
        if (! isEmpty (part)) {
            if (builder.length () > 0) {
                builder.append (delimiter);
            }
            builder.append (part);
        }
    }
    return builder.toString ();
}
----------------------------------------

private static String join (String delimiter, String[] parts) {
    StringBuilder builder = new StringBuilder ();
    for (int i = 0; i < parts.length; i++) {
        if (! isEmpty (parts[i])) {
            if (builder.length () > 0) {
                builder.append (delimiter);
            }
            builder.append (parts[i]);
        }
    }
    return builder.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
938
2
Gpt3D_Clone938_2.java 1 12
Gpt3D_Clone938_2.java 13 26
----------------------------------------

private static String join (String delimiter, String...parts) {
    StringBuilder builder = new StringBuilder ();
    for (String part : parts) {
        if (! isEmpty (part)) {
            if (builder.length () > 0) {
                builder.append (delimiter);
            }
            builder.append (part);
        }
    }
    return builder.toString ();
}
----------------------------------------

private static String join (String delimiter, String...parts) {
    String joinedString = "";
    for (String part : parts) {
        if (part != null && part.length() > 0) {
            joinedString += part;
            if (joinedString.length() > 0) {
                joinedString += delimiter;
            }
        }
    }
    return joinedString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
939
0
Gpt3D_Clone939_0.java 1 9
Gpt3D_Clone939_0.java 10 25
----------------------------------------

public static void main (String [] args) throws ParseException {
    String st1 = "2015-07-24T09:39:14.000Z";
    String st2 = "2015-07-24T09:45:44.000Z";
    String time1 = st1.substring (st1.indexOf ("T") + 1, st1.indexOf (".0"));
    String time2 = st2.substring (st2.indexOf ("T") + 1, st2.indexOf (".0"));
    Date dateTime1 = new java.text.SimpleDateFormat ("HH:mm").parse (time1);
    Date dateTime2 = new java.text.SimpleDateFormat ("HH:mm").parse (time2);
    System.out.println (dateTime1.after (dateTime2));
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    String st1 = "2015-07-24T09:39:14.000Z";
    String st2 = "2015-07-24T09:45:44.000Z";
    int firstIndex = st1.indexOf("T") + 1;
    int secondIndex = st1.indexOf(".0");
    String time1 = st1.substring (firstIndex, secondIndex);
    firstIndex = st2.indexOf("T") + 1;
    secondIndex = st2.indexOf(".0");
    String time2 = st2.substring (firstIndex, secondIndex);
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat ("HH:mm");
    Date dateTime1 = simpleDateFormat.parse (time1);
    Date dateTime2 = simpleDateFormat.parse (time2);
    System.out.println (dateTime1.after (dateTime2));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
939
1
Gpt3D_Clone939_1.java 1 9
Gpt3D_Clone939_1.java 10 24
----------------------------------------

public static void main (String [] args) throws ParseException {
    String st1 = "2015-07-24T09:39:14.000Z";
    String st2 = "2015-07-24T09:45:44.000Z";
    String time1 = st1.substring (st1.indexOf ("T") + 1, st1.indexOf (".0"));
    String time2 = st2.substring (st2.indexOf ("T") + 1, st2.indexOf (".0"));
    Date dateTime1 = new java.text.SimpleDateFormat ("HH:mm").parse (time1);
    Date dateTime2 = new java.text.SimpleDateFormat ("HH:mm").parse (time2);
    System.out.println (dateTime1.after (dateTime2));
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    String st1 = "2015-07-24T09:39:14.000Z";
    String st2 = "2015-07-24T09:45:44.000Z";
    int firstIndex = st1.indexOf("T") + 1;
    int secondIndex = st1.indexOf(".0");
    String time1 = st1.substring (firstIndex, secondIndex);
    firstIndex = st2.indexOf("T") + 1;
    secondIndex = st2.indexOf(".0");
    String time2 = st2.substring (firstIndex, secondIndex);
    Date dateTime1 = new java.text.SimpleDateFormat ("HH:mm").parse (time1);
    Date dateTime2 = new java.text.SimpleDateFormat ("HH:mm").parse (time2);
    System.out.println (dateTime1.after (dateTime2));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
940
0
Gpt3D_Clone940_0.java 1 9
Gpt3D_Clone940_0.java 10 25
----------------------------------------

public String getString () {
    StringBuilder msg = new StringBuilder ();
    String read;
    do {
        read = inputGenerator.getMessage ();
        msg.append (read);
    } while (read.toLowerCase ().startsWith ("hi"));
    return msg.toString ();
}
----------------------------------------

public String getString () {
    StringBuilder msg = new StringBuilder ();
    String read;
    int a = 0;
    while (true) {
        read = inputGenerator.getMessage ();
        if (a != 0 && read.toLowerCase ().startsWith ("hi"))
            break;
        else
            msg.append (read);
        a++;
    }
    return msg.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
940
1
Gpt3D_Clone940_1.java 1 9
Gpt3D_Clone940_1.java 10 23
----------------------------------------

public String getString () {
    StringBuilder msg = new StringBuilder ();
    String read;
    do {
        read = inputGenerator.getMessage ();
        msg.append (read);
    } while (read.toLowerCase ().startsWith ("hi"));
    return msg.toString ();
}
----------------------------------------

public String getString () {
    String read;
    StringBuilder msg = new StringBuilder ();
    for (;;) {
        read = inputGenerator.getMessage ();
        if (read.toLowerCase ().startsWith ("hi"))
            break;
        else
            msg.append (read); 
    }
    return msg.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
941
0
Gpt3D_Clone941_0.java 1 12
Gpt3D_Clone941_0.java 13 28
----------------------------------------

public String makeStringsEqual (String str, String keyword) {
    if (str.length () > keyword.length ()) {
        string result = "";
        for (int i = 0;
        i < str.length (); i ++) {
            if (str.charAt (i) != ' ') {
                result += keyword.charAt (i % keyword.length ());
            } else result += " ";
        }
    }
    return result;
}
----------------------------------------

public String makeStringsEqual (String str, String keyword) {
    if (str.length () > keyword.length ()) {
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < str.length (); i ++) {
            if (str.charAt (i) != ' ') {
                result.append (keyword.charAt (i % keyword.length ()));
            } else {
                result.append (" ");
            }
        }
        return result.toString();
    }
    return "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
944
0
Gpt3D_Clone944_0.java 1 11
Gpt3D_Clone944_0.java 12 18
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter String");
    String s = br.readLine ();
    System.out.print ("Enter Integer:");
    try {
        int i = Integer.parseInt (br.readLine ());
    } catch (NumberFormatException nfe) {
        System.err.println ("Invalid Format!");
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter Integer:");
    int i = Integer.parseInt (br.readLine ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
946
0
Gpt3D_Clone946_0.java 1 11
Gpt3D_Clone946_0.java 12 28
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter String");
    String s = br.readLine ();
    System.out.print ("Enter Integer:");
    try {
        int i = Integer.parseInt (br.readLine ());
    } catch (NumberFormatException nfe) {
        System.err.println ("Invalid Format!");
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    String strPrompt = "Enter String:";
    String intPrompt = "Enter Integer:";
    String errMsg = "Invalid Format!";
    
    System.out.println (strPrompt);
    String userString = br.readLine ();
    System.out.println (intPrompt);
    try {
        int userInt = Integer.parseInt (br.readLine ());
    } catch (NumberFormatException nfe) {
        System.err.println (errMsg);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
948
0
Gpt3D_Clone948_0.java 1 14
Gpt3D_Clone948_0.java 15 30
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

public static void Main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    Console.WriteLine ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        Console.Write ("><![CDATA[ ");
        String input = br.readLine ();
        Console.WriteLine (input);
        if (input.length () == EXIT_COMMAND.length () && input.equalsIgnoreCase (EXIT_COMMAND)) {
            Console.WriteLine ("Exiting.");
            return;
        }
        Console.WriteLine ("...response goes here...");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
951
0
Gpt3D_Clone951_0.java 1 6
Gpt3D_Clone951_0.java 7 15
----------------------------------------

public void onClick (View v) {
    Toast.makeText (
        container.getContext (), 
    "You clicked: " + page + ". page.", 
    Toast.LENGTH_SHORT).show ();
}
----------------------------------------

public void onClick (View v) {
        Context context = container.getContext();
        String message = "You clicked: " + page + ". page.";
        int duration = Toast.LENGTH_SHORT;
        Toast toast = Toast.makeText(context, message, duration);
        toast.show();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
951
1
Gpt3D_Clone951_1.java 1 6
Gpt3D_Clone951_1.java 7 14
----------------------------------------

public void onClick (View v) {
    Toast.makeText (
        container.getContext (), 
    "You clicked: " + page + ". page.", 
    Toast.LENGTH_SHORT).show ();
}
----------------------------------------

public void onClick (View v) {
        String message = String.format("You clicked: %s. page.", page);
        int duration = Toast.LENGTH_SHORT;
        Toast toast = Toast.makeText(container.getContext(), message, duration);
        toast.show();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
953
0
Gpt3D_Clone953_0.java 1 10
Gpt3D_Clone953_0.java 11 22
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 16; ++ i) {
        if ((i & 1) > 0) System.out.print ("A");
        if ((i & 2) > 0) System.out.print ("B");
        if ((i & 4) > 0) System.out.print ("C");
        if ((i & 8) > 0) System.out.print ("D");
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int x = 1;
    x < 16; ++ x) {
        if ((x % 2) > 0) System.out.print ("A");
        if ((x % 4) > 1) System.out.print ("B");
        if ((x % 8) > 3) System.out.print ("C");
        if ((x % 16) > 7) System.out.print ("D");
        System.out.println ("");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
953
1
Gpt3D_Clone953_1.java 1 10
Gpt3D_Clone953_1.java 11 22
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 16; ++ i) {
        if ((i & 1) > 0) System.out.print ("A");
        if ((i & 2) > 0) System.out.print ("B");
        if ((i & 4) > 0) System.out.print ("C");
        if ((i & 8) > 0) System.out.print ("D");
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) { 
    for (int j = 1;
    j < 16; ++ j) {
        if ((j % 4) < 1) System.out.print ("A");
        if ((j % 8) < 3) System.out.print ("B");
        if ((j % 16) < 7) System.out.print ("C");
        if ((j % 32) < 15) System.out.print ("D");
        System.out.println ("");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
953
2
Gpt3D_Clone953_2.java 1 10
Gpt3D_Clone953_2.java 11 22
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 16; ++ i) {
        if ((i & 1) > 0) System.out.print ("A");
        if ((i & 2) > 0) System.out.print ("B");
        if ((i & 4) > 0) System.out.print ("C");
        if ((i & 8) > 0) System.out.print ("D");
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 16; ++ i) {
        if (i % 2 > 0) System.out.print ("A");
        if (i % 4 > 1) System.out.print ("B");
        if (i % 8 > 3) System.out.print ("C");
        if (i % 16 > 7) System.out.print ("D");
        System.out.println ("");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
953
3
Gpt3D_Clone953_3.java 1 10
Gpt3D_Clone953_3.java 11 22
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 16; ++ i) {
        if ((i & 1) > 0) System.out.print ("A");
        if ((i & 2) > 0) System.out.print ("B");
        if ((i & 4) > 0) System.out.print ("C");
        if ((i & 8) > 0) System.out.print ("D");
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 16; ++ i) {
        if ((i & 1) != 0) System.out.print ("A");
        if ((i & 2) != 0) System.out.print ("B");
        if ((i & 4) != 0) System.out.print ("C");
        if ((i & 8) != 0) System.out.print ("D");
        System.out.println ("");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
957
0
Gpt3D_Clone957_0.java 1 22
Gpt3D_Clone957_0.java 23 37
----------------------------------------

public static String getDurationBreakdown (long millis) {
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    long days = TimeUnit.MILLISECONDS.toDays (millis);
    millis -= TimeUnit.DAYS.toMillis (days);
    long hours = TimeUnit.MILLISECONDS.toHours (millis);
    millis -= TimeUnit.HOURS.toMillis (hours);
    long minutes = TimeUnit.MILLISECONDS.toMinutes (millis);
    millis -= TimeUnit.MINUTES.toMillis (minutes);
    long seconds = TimeUnit.MILLISECONDS.toSeconds (millis);
    StringBuilder sb = new StringBuilder (64);
    sb.append (days);
    sb.append (" Days ");
    sb.append (hours);
    sb.append (" Hours ");
    sb.append (minutes);
    sb.append (" Minutes ");
    sb.append (seconds);
    sb.append (" Seconds");
    return (sb.toString ());
}
----------------------------------------

public static String getDurationBreakdown (long millis) {
    if (millis < 0) {
        throw new IllegalArgumentException("Duration must be greater than zero!");
    }
    long days = TimeUnit.MILLISECONDS.toDays(millis);
    millis -= TimeUnit.DAYS.toMillis(days);
    long hours = TimeUnit.MILLISECONDS.toHours(millis);
    millis -= TimeUnit.HOURS.toMillis(hours);
    long minutes = TimeUnit.MILLISECONDS.toMinutes(millis);
    millis -= TimeUnit.MINUTES.toMillis(minutes);
    long seconds = TimeUnit.MILLISECONDS.toSeconds(millis);  
    return (days + " Days " + hours + " Hours " + minutes + " Minutes " + seconds + " Seconds");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
957
1
Gpt3D_Clone957_1.java 1 22
Gpt3D_Clone957_1.java 23 37
----------------------------------------

public static String getDurationBreakdown (long millis) {
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    long days = TimeUnit.MILLISECONDS.toDays (millis);
    millis -= TimeUnit.DAYS.toMillis (days);
    long hours = TimeUnit.MILLISECONDS.toHours (millis);
    millis -= TimeUnit.HOURS.toMillis (hours);
    long minutes = TimeUnit.MILLISECONDS.toMinutes (millis);
    millis -= TimeUnit.MINUTES.toMillis (minutes);
    long seconds = TimeUnit.MILLISECONDS.toSeconds (millis);
    StringBuilder sb = new StringBuilder (64);
    sb.append (days);
    sb.append (" Days ");
    sb.append (hours);
    sb.append (" Hours ");
    sb.append (minutes);
    sb.append (" Minutes ");
    sb.append (seconds);
    sb.append (" Seconds");
    return (sb.toString ());
}
----------------------------------------

public static String getDurationBreakdown (long millis) {
    if (millis < 0) {
        throw new IllegalArgumentException("Duration must be greater than zero!");
    }
    long days = TimeUnit.MILLISECONDS.toDays(millis);
    millis = millis % TimeUnit.DAYS.toMillis(1);
    long hours = TimeUnit.MILLISECONDS.toHours(millis);
    millis = millis % TimeUnit.HOURS.toMillis(1);
    long minutes = TimeUnit.MILLISECONDS.toMinutes(millis);
    millis = millis % TimeUnit.MINUTES.toMillis(1);
    long seconds = TimeUnit.MILLISECONDS.toSeconds(millis);
    return (days + " Days " + hours + " Hours " + minutes + " Minutes " + seconds + " Seconds");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
958
1
Gpt3D_Clone958_1.java 1 22
Gpt3D_Clone958_1.java 23 39
----------------------------------------

public static String getDurationBreakdown (long millis) {
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    long days = TimeUnit.MILLISECONDS.toDays (millis);
    millis -= TimeUnit.DAYS.toMillis (days);
    long hours = TimeUnit.MILLISECONDS.toHours (millis);
    millis -= TimeUnit.HOURS.toMillis (hours);
    long minutes = TimeUnit.MILLISECONDS.toMinutes (millis);
    millis -= TimeUnit.MINUTES.toMillis (minutes);
    long seconds = TimeUnit.MILLISECONDS.toSeconds (millis);
    StringBuilder sb = new StringBuilder (64);
    sb.append (days);
    sb.append (" Days ");
    sb.append (hours);
    sb.append (" Hours ");
    sb.append (minutes);
    sb.append (" Minutes ");
    sb.append (seconds);
    sb.append (" Seconds");
    return (sb.toString ());
}
----------------------------------------

public static String getDurationBreakdown(long millis) {
    if (millis < 0) {
        throw new IllegalArgumentException("Duration must be greater than zero!");
    }
    long days = TimeUnit.MILLISECONDS.convert(millis, TimeUnit.DAYS);
    millis -= TimeUnit.DAYS.convert(days, TimeUnit.MILLISECONDS);
    long hours = TimeUnit.MILLISECONDS.convert(millis, TimeUnit.HOURS);
    millis -= TimeUnit.HOURS.convert(hours, TimeUnit.MILLISECONDS);
    long minutes = TimeUnit.MILLISECONDS.convert(millis, TimeUnit.MINUTES);
    millis -= TimeUnit.MINUTES.convert(minutes, TimeUnit.MILLISECONDS);
    long seconds = TimeUnit.MILLISECONDS.convert(millis, TimeUnit.SECONDS);
    StringBuilder sb = new StringBuilder(64);
    sb.append(days).append(" Days ").append(hours).append(" Hours ").append(minutes).append(" Minutes ").append(seconds).append(" Seconds");
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
95
0
Gpt3D_Clone95_0.java 1 12
Gpt3D_Clone95_0.java 13 31
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    switch(character){
        case Character.isLowerCase (character):
            typeCharacter (Character.toUpperCase (character));
            break;
        case Character.isUpperCase (character):
            typeShiftCharacter (character);
            break;
        case Character.isDigit (character):
            typeCharacter (character);
            break;
        default:
            break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
95
2
Gpt3D_Clone95_2.java 1 12
Gpt3D_Clone95_2.java 13 24
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

private void type (char character){
    handleSpecialCharacter (character);
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isLowerCase (character) || Character.isDigit (character)){
        typeCharacter (Character.toUpperCase(character));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
960
1
Gpt3D_Clone960_1.java 1 10
Gpt3D_Clone960_1.java 11 23
----------------------------------------

public static String startOz (String str) {
    if (str.length () >= 2 && str.substring (0, 2).equals ("oz")) {
        return "oz";
    } else if (str.length () >= 2 && str.substring (1, 2).equals ("z")) {
        return "z";
    } else if (str.length () >= 2 && str.substring (0, 1).equals ("o")) {
        return "o";
    }
    return "";
}
----------------------------------------

public static String startOz (String str) {
    String result = "";
    if (str.length () >= 2 && str.substring (0, 2).equals ("oz")) {
        result = "oz";
    } else if (str.length () >= 2 && str.substring (1, 2).equals ("z")) {
        result = "z";
    } else if (str.length () >= 2 && str.substring (0, 1).equals ("o")) {
        result = "o";
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
960
2
Gpt3D_Clone960_2.java 1 10
Gpt3D_Clone960_2.java 11 25
----------------------------------------

public static String startOz (String str) {
    if (str.length () >= 2 && str.substring (0, 2).equals ("oz")) {
        return "oz";
    } else if (str.length () >= 2 && str.substring (1, 2).equals ("z")) {
        return "z";
    } else if (str.length () >= 2 && str.substring (0, 1).equals ("o")) {
        return "o";
    }
    return "";
}
----------------------------------------

public static String startOz (String str) {
    StringBuilder result = new StringBuilder();
    if (str.length () >=2 && str.contains("oz")) {
        result.append("oz");
    }
    if (str.length () >=2 && str.contains("z") && str.indexOf("z") == 1) {
        result.append("z");
    }
    if (str.length () >=2 && str.contains("o") && str.indexOf("o") == 0) {
        result.append("o");
    }
    return result.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
961
0
Gpt3D_Clone961_0.java 1 8
Gpt3D_Clone961_0.java 9 30
----------------------------------------

public String startOz (String str) {
    int len = str.length ();
    if (len < 1) return new String ("");
    if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') return new String ("oz");
    if (str.charAt (0) == 'o') return new String ("o");
    if (str.charAt (1) == 'z') return new String ("z");
    return new String ("");
}
----------------------------------------

public String startOz(String s) {
    int len = s.length();
    if (len < 1) {
        return "";
    }
    if (len > 1 && s.charAt(0) == 'o' && s.charAt(1) == 'z') {
        return "oz";
    }
    String r = "";
    if (s.charAt(0) == 'o') {
        r = r.concat("o");
    }
    if (s.charAt(1) == 'z') {
        r = r.concat("z");
    }
    return r;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
961
1
Gpt3D_Clone961_1.java 1 8
Gpt3D_Clone961_1.java 9 24
----------------------------------------

public String startOz (String str) {
    int len = str.length ();
    if (len < 1) return new String ("");
    if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') return new String ("oz");
    if (str.charAt (0) == 'o') return new String ("o");
    if (str.charAt (1) == 'z') return new String ("z");
    return new String ("");
}
----------------------------------------

public String startOz (String str) {
    int len = str.length ();
    if (len == 0) {
        return "";
    } else if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') {
        return "oz";
    } else if (str.charAt (0) == 'o') {
        return "o";
    } else if (str.charAt (1) == 'z') {
        return "z";
    } else {
        return "";
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
961
2
Gpt3D_Clone961_2.java 1 8
Gpt3D_Clone961_2.java 9 31
----------------------------------------

public String startOz (String str) {
    int len = str.length ();
    if (len < 1) return new String ("");
    if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') return new String ("oz");
    if (str.charAt (0) == 'o') return new String ("o");
    if (str.charAt (1) == 'z') return new String ("z");
    return new String ("");
}
----------------------------------------

public String startOz (String inputString) {
    int length = inputString.length();
   
    if (length < 1) {
        return "";
    }
   
    if (length > 1 && inputString.charAt(0) == 'o' && inputString.charAt(1) == 'z') {
        return "oz";
    }
   
    if (inputString.charAt(0) == 'o') {
        return "o";
    }
   
    if (inputString.charAt(1) == 'z') {
        return "z";
    }
   
    return "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
961
3
Gpt3D_Clone961_3.java 1 8
Gpt3D_Clone961_3.java 9 16
----------------------------------------

public String startOz (String str) {
    int len = str.length ();
    if (len < 1) return new String ("");
    if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') return new String ("oz");
    if (str.charAt (0) == 'o') return new String ("o");
    if (str.charAt (1) == 'z') return new String ("z");
    return new String ("");
}
----------------------------------------

public String startOz (String str) {
    if (str.length () == 0) {
        return "";
    }
    return ((str.length () > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') ? "oz" : (str.charAt (0) == 'o' ? "o" : (str.charAt (1) == 'z' ? "z" : "")));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
962
0
Gpt3D_Clone962_0.java 1 8
Gpt3D_Clone962_0.java 9 31
----------------------------------------

public String startOz (String str) {
    int len = str.length ();
    if (len < 1) return new String ("");
    if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') return new String ("oz");
    if (str.charAt (0) == 'o') return new String ("o");
    if (str.charAt (1) == 'z') return new String ("z");
    return new String ("");
}
----------------------------------------

public String startOz(String str){
    int len = str.length ();
    
    if (len < 1) {
        return new String ("");
    } 
    else if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') {
        return new String ("oz");
    } 
    else {
        if (str.charAt (0) == 'o') {
            return new String ("o");
        } 
        else if (str.charAt (1) == 'z') {
            return new String ("z");
        } 
        else {
            return new String ("");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
962
1
Gpt3D_Clone962_1.java 1 8
Gpt3D_Clone962_1.java 9 25
----------------------------------------

public String startOz (String str) {
    int len = str.length ();
    if (len < 1) return new String ("");
    if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') return new String ("oz");
    if (str.charAt (0) == 'o') return new String ("o");
    if (str.charAt (1) == 'z') return new String ("z");
    return new String ("");
}
----------------------------------------

public String startOz(String str){
    if (str.length()<1) {
           return new String("");
    }
    else if (str.charAt(0) == 'o' && str.length()>1 && str.charAt(1) == 'z')  {
            return new String("oz");
    } 
    else if (str.charAt(0) == 'o')  {
            return new String("o");
    }
    else if (str.length()>1 && str.charAt(1) == 'z')  {
            return new String("z");
    }
    return new String("");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
962
2
Gpt3D_Clone962_2.java 1 8
Gpt3D_Clone962_2.java 9 17
----------------------------------------

public String startOz (String str) {
    int len = str.length ();
    if (len < 1) return new String ("");
    if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') return new String ("oz");
    if (str.charAt (0) == 'o') return new String ("o");
    if (str.charAt (1) == 'z') return new String ("z");
    return new String ("");
}
----------------------------------------

public String startOz (String str) {
    int len = str.length ();
    String result = "";
    if (len >= 1 && str.charAt (0) == 'o') result = result + "o";
    if (len >= 2 && str.charAt (1) == 'z') result = result + "z";
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
962
3
Gpt3D_Clone962_3.java 1 8
Gpt3D_Clone962_3.java 9 16
----------------------------------------

public String startOz (String str) {
    int len = str.length ();
    if (len < 1) return new String ("");
    if (len > 1 && str.charAt (0) == 'o' && str.charAt (1) == 'z') return new String ("oz");
    if (str.charAt (0) == 'o') return new String ("o");
    if (str.charAt (1) == 'z') return new String ("z");
    return new String ("");
}
----------------------------------------

public String startOz (String str) {
    int length = str.length();
    if (length < 1) return "";
    if (length == 1) return (str.charAt(0) == 'o') ? "o" : "";
    else return (str.substring(0, 2).equals("oz")) ? "oz" : ((str.charAt(0) == 'o') ? "o" : "" + (str.charAt(1) == 'z') ? "z" : "");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
0
Gpt3D_Clone963_0.java 1 14
Gpt3D_Clone963_0.java 15 61
----------------------------------------

public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    String binary = "";
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

// Code 1
public static void main (String h[]) {
    Scanner sc = new Scanner (System.in);
    int decimal;
    
    System.out.print("Please enter number: ");
    decimal = sc.nextInt();
    String binary="";
    
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal!=0) {
            if(decimal%2==1) {
                binary="1"+binary;
            } else {
                binary="0"+binary;
            }
                decimal=decimal/2;
            }
        }
        System.out.println ("binary is:" + binary);
    }
// Code 2
public static void main (String h[]) {
    Scanner sc = new Scanner (System.in);
    int decimal;
    System.out.print("Please enter number: ");
    decimal = sc.nextInt();
    String binary="";
    
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            if(decimal % 2 == 0)
                binary = "0" + binary; 
            else
                binary = "1" + binary; 
            decimal = decimal / 2; 
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
966
0
Gpt3D_Clone966_0.java 1 29
Gpt3D_Clone966_0.java 30 54
----------------------------------------

private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFCell cellOld, HSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFCell cellOld, HSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    if (cellOld.getCellType () == Cell.CELL_TYPE_BLANK) {
        break;
    } else if (cellOld.getCellType () == Cell.CELL_TYPE_BOOLEAN) {
        cellNew.setCellValue (cellOld.getBooleanCellValue ());
    } else if (cellOld.getCellType () == Cell.CELL_TYPE_ERROR) {
        cellNew.setCellValue (cellOld.getErrorCellValue ());
    } else if (cellOld.getCellType () == Cell.CELL_TYPE_FORMULA) {
        cellNew.setCellValue (cellOld.getCellFormula ());
    } else if (cellOld.getCellType () == Cell.CELL_TYPE_NUMERIC) {
        cellNew.setCellValue (cellOld.getNumericCellValue ());
    } else if (cellOld.getCellType () == Cell.CELL_TYPE_STRING) {
        cellNew.setCellValue (cellOld.getStringCellValue ());
    } else {
        System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
971
0
Gpt3D_Clone971_0.java 1 29
Gpt3D_Clone971_0.java 30 55
----------------------------------------

private void transform (HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

private void transform (HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    int cellType = cellOld.getCellType ();
    if (Cell.CELL_TYPE_BLANK == cellType) {
        //do nothing
    } else if (Cell.CELL_TYPE_BOOLEAN == cellType) {
        cellNew.setCellValue (cellOld.getBooleanCellValue ());
    } else if (Cell.CELL_TYPE_ERROR == cellType) {
        cellNew.setCellValue (cellOld.getErrorCellValue ());
    } else if (Cell.CELL_TYPE_FORMULA == cellType) {
        cellNew.setCellValue (cellOld.getCellFormula ());
    } else if (Cell.CELL_TYPE_NUMERIC == cellType) {
        cellNew.setCellValue (cellOld.getNumericCellValue ());
    } else if (Cell.CELL_TYPE_STRING == cellType) {
        cellNew.setCellValue (cellOld.getStringCellValue ());
    } else {
        System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
971
1
Gpt3D_Clone971_1.java 1 29
Gpt3D_Clone971_1.java 30 56
----------------------------------------

private void transform (HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

private void transform (HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    if (cellOld.getCellType () == Cell.CELL_TYPE_BLANK) {
        // Do nothing
    } else {
         if (cellOld.getCellType () == Cell.CELL_TYPE_BOOLEAN) {
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
         } else if (cellOld.getCellType () == Cell.CELL_TYPE_ERROR) {
            cellNew.setCellValue (cellOld.getErrorCellValue ());
         } else if (cellOld.getCellType () == Cell.CELL_TYPE_FORMULA) {
            cellNew.setCellValue (cellOld.getCellFormula ());
         } else if (cellOld.getCellType () == Cell.CELL_TYPE_NUMERIC) {
            cellNew.setCellValue (cellOld.getNumericCellValue ());
         } else if (cellOld.getCellType () == Cell.CELL_TYPE_STRING) {
            cellNew.setCellValue (cellOld.getStringCellValue ());
        } else {
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
971
2
Gpt3D_Clone971_2.java 1 29
Gpt3D_Clone971_2.java 30 54
----------------------------------------

private void transform (HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

private void transform (HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    if (cellOld.getCellType () == Cell.CELL_TYPE_BLANK) {
        // Do nothing
    } else if (cellOld.getCellType () == Cell.CELL_TYPE_BOOLEAN) {
        cellNew.setCellValue (cellOld.getBooleanCellValue ());
    } else if (cellOld.getCellType () == Cell.CELL_TYPE_ERROR) {
        cellNew.setCellValue (cellOld.getErrorCellValue ());
    } else if (cellOld.getCellType () == Cell.CELL_TYPE_FORMULA) {
        cellNew.setCellValue (cellOld.getCellFormula ());
    } else if (cellOld.getCellType () == Cell.CELL_TYPE_NUMERIC) {
        cellNew.setCellValue (cellOld.getNumericCellValue ());
    } else if (cellOld.getCellType () == Cell.CELL_TYPE_STRING) {
        cellNew.setCellValue (cellOld.getStringCellValue ());
    } else {
        System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
971
3
Gpt3D_Clone971_3.java 1 29
Gpt3D_Clone971_3.java 30 36
----------------------------------------

private void transform (HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

private void transform (HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    calcCellStyle (cellOld, cellNew);
    processCellType (cellOld, cellNew);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
976
2
Gpt3D_Clone976_2.java 1 18
Gpt3D_Clone976_2.java 19 28
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderRight (styleOld.getBorderRight ());
    styleNew.setBorderTop (styleOld.getBorderTop ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
978
0
Gpt3D_Clone978_0.java 1 29
Gpt3D_Clone978_0.java 30 54
----------------------------------------

private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFCell cellOld, HSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFCell cellOld, HSSFCell cellNew) {
    cellNew.setCellComment(cellOld.getCellComment());
    Integer hash = cellOld.getCellStyle().hashCode();
    if (this.styleMap != null && !this.styleMap.containsKey(hash)) {
        this.transform(workbookOld, workbookNew, hash, cellOld.getCellStyle(), (HSSFCellStyle) workbookNew.createCellStyle());
    }
    cellNew.setCellStyle(this.styleMap.get(hash));
    if (cellOld.getCellType() == Cell.CELL_TYPE_BLANK) {
        // Nothing to do
    } else if (cellOld.getCellType() == Cell.CELL_TYPE_BOOLEAN) {
        cellNew.setCellValue(cellOld.getBooleanCellValue());
    } else if (cellOld.getCellType() == Cell.CELL_TYPE_ERROR) {
        cellNew.setCellValue(cellOld.getErrorCellValue());
    } else if (cellOld.getCellType() == Cell.CELL_TYPE_FORMULA) {
        cellNew.setCellValue(cellOld.getCellFormula());
    } else if (cellOld.getCellType() == Cell.CELL_TYPE_NUMERIC) {
        cellNew.setCellValue(cellOld.getNumericCellValue());
    } else if (cellOld.getCellType() == Cell.CELL_TYPE_STRING) {
        cellNew.setCellValue(cellOld.getStringCellValue());
    } else {
        System.out.println("transform: Unbekannter Zellentyp " + cellOld.getCellType());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
978
1
Gpt3D_Clone978_1.java 1 29
Gpt3D_Clone978_1.java 30 37
----------------------------------------

private void transform (XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFCell cellOld, HSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {
        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

private void transform(XSSFWorkbook workbookOld, HSSFWorkbook workbookNew, XSSFCell cellOld, HSSFCell cellNew) {
    copyCellComment(cellOld, cellNew);
    Integer hash = cellOld.getCellStyle().hashCode();
    handleCellStyle(workbookOld, workbookNew, hash, cellOld.getCellStyle());
    handleCellValue(cellNew, cellOld);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
101
0
Gpt3D_Clone101_0.java 1 12
Gpt3D_Clone101_0.java 13 26
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type (String text) {
    int c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = (int) text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
102
1
Gpt3D_Clone102_1.java 1 12
Gpt3D_Clone102_1.java 13 33
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

private void type(char character)
{
    handleSpecialCharacter(character);
    if (Character.isLetter(character)) 
    {
        if (Character.isLowerCase(character))
        {
            typeCharacter(Character.toUpperCase(character));
        }
        else if (Character.isUpperCase(character)) 
        {
            typeShiftCharacter(character);
        }
    }
    else if (Character.isDigit(character))
    {
        typeCharacter(character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
0
Gpt3D_Clone103_0.java 1 12
Gpt3D_Clone103_0.java 13 24
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type(String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c >= 33 && c <= 127) {
            typeAsciiCode (c);
        }
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
103
1
Gpt3D_Clone103_1.java 1 12
Gpt3D_Clone103_1.java 13 24
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type(String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 127 && c >= 33) {
            typeAsciiCode (c);
        } 
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
105
0
Gpt3D_Clone105_0.java 1 12
Gpt3D_Clone105_0.java 13 28
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31) {
            pressControlKey (c);
        } else if (c == 129) {
            pressCommandKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
105
1
Gpt3D_Clone105_1.java 1 12
Gpt3D_Clone105_1.java 13 22
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        typeKey (c);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
106
0
Gpt3D_Clone106_0.java 1 12
Gpt3D_Clone106_0.java 13 30
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31) {
            pressControlKey (c);
        } else {
            if (c == 129) {
                pressControlKey (c);
            } else {
                typeAsciiCode (c);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
106
1
Gpt3D_Clone106_1.java 1 12
Gpt3D_Clone106_1.java 13 28
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31) {
            pressControlKey (c);
        } else if (c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
108
0
Gpt3D_Clone108_0.java 1 12
Gpt3D_Clone108_0.java 13 27
----------------------------------------

public static File createTempDir () {
    File baseDir = new File (System.getProperty ("java.io.tmpdir"));
    String baseName = System.currentTimeMillis () + "-";
    for (int counter = 0;
    counter < TEMP_DIR_ATTEMPTS; counter ++) {
        File tempDir = new File (baseDir, baseName + counter);
        if (tempDir.mkdir ()) {
            return tempDir;
        }
    }
    throw new IllegalStateException ("Failed to create directory within " + TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
}
----------------------------------------

public static File createTempDir () {
    File baseDir = new File (System.getProperty ("java.io.tmpdir"));
    String baseName = System.currentTimeMillis () + "-";
    int counter = 0;
    while(counter < TEMP_DIR_ATTEMPTS) {
        File tempDir = new File (baseDir, baseName + counter);
        if (tempDir.mkdir ()) {
            return tempDir;
        }
        counter++;
    }
    throw new IllegalStateException ("Failed to create directory within " + TEMP_DIR_ATTEMPTS + " attempts (tried " + baseName + "0 to " + baseName + (TEMP_DIR_ATTEMPTS - 1) + ')');
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
113
0
Gpt3D_Clone113_0.java 1 10
Gpt3D_Clone113_0.java 11 22
----------------------------------------

Node reverse (Node n, Node p) {
    if (n == null) return null;
    if (n.next == null) {
        n.next = p;
        return n;
    }
    Node r = reverse (n.next, n);
    n.next = p;
    return r;
}
----------------------------------------

Node reverse (Node n, Node p) {
    if (n == null) return null;
    if (n.next == null) {
        n.next = p;
        return n;
    }
    Node temp = n.next;
    n.next = p;
    return reverse (temp, n);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
114
0
Gpt3D_Clone114_0.java 1 13
Gpt3D_Clone114_0.java 14 30
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) {
        return null;
    } else if (previous.equals (head)) {
        previous.setNext (null);
    } else if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
114
2
Gpt3D_Clone114_2.java 1 13
Gpt3D_Clone114_2.java 14 32
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null){
        return null;
    } else if (previous.equals(head)){
        previous.setNext(null);
    }
    
    if (current == null) {
        head = previous;
        return head;
    } else { 
        Node temp = current.getNext();
        current.setNext(previous);
        reverse(current, temp);
		return null;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
114
3
Gpt3D_Clone114_3.java 1 13
Gpt3D_Clone114_3.java 14 31
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) return null;
    if (previous.equals (head)) previous.setNext (null);
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext ();
        current.setNext (previous);
        reverse (current, temp);
    }
    return null;
}
----------------------------------------

public Node reverse (Node previous, Node current) {
    if (previous == null) { 
        return null;
    } else if (previous.equals(head)) {
        previous.setNext(null);
    }
    
    if (current == null) {
        head = previous;
        return head;
    } else {
        Node temp = current.getNext();
        current.setNext(previous);
        return reverse(current, temp);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
117
0
Gpt3D_Clone117_0.java 1 11
Gpt3D_Clone117_0.java 12 22
----------------------------------------

public static void main (String [] args) throws ParseException {
    String month = "08";
    String day = "05";
    String year = "2015";
    String inputDateStr = String.format ("%s/%s/%s", day, month, year);
    Date inputDate = new SimpleDateFormat ("dd/MM/yyyy").parse (inputDateStr);
    Calendar calendar = Calendar.getInstance ();
    calendar.setTime (inputDate);
    String dayOfWeek = calendar.getDisplayName (Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.US).toUpperCase ();
    System.out.println (dayOfWeek);
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    String date = "08/05/2015";
    SimpleDateFormat dateFormat = new SimpleDateFormat ("dd/MM/yyyy");
    Date inputDate = dateFormat.parse (date);
    Calendar calendar = Calendar.getInstance ();
    calendar.setTime (inputDate);
    String dayOfWeek = calendar.getDisplayName (Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.US).toUpperCase ();
    System.out.println (dayOfWeek);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
124
0
Gpt3D_Clone124_0.java 1 23
Gpt3D_Clone124_0.java 24 47
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 9; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
                if (condition1) {
                    System.out.println ("Breaking from Loop K and J");
                    k = 9;
                    j = 9;
                }
                if (condition2) {
                    System.out.println ("Breaking from Loop K, J and I");
                    k = 9;
                    j = 9;
                    i = 9;
                }
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

public static void main (String [] args) {
    out:
    for (int i = 0;
    i < 9; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
                if (condition1) {
                    System.out.println ("Breaking from Loop K and J");
                    break out;
                }
                if (condition2) {
                    System.out.println ("Breaking from Loop K, J and I");
                    break out;
                }
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
124
1
Gpt3D_Clone124_1.java 1 23
Gpt3D_Clone124_1.java 24 46
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 9; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
                if (condition1) {
                    System.out.println ("Breaking from Loop K and J");
                    k = 9;
                    j = 9;
                }
                if (condition2) {
                    System.out.println ("Breaking from Loop K, J and I");
                    k = 9;
                    j = 9;
                    i = 9;
                }
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 9; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
                if (condition1) {
                    System.out.println ("Breaking from Loop K and J");
                    break;
                }
                if (condition2) {
                    System.out.println ("Breaking from Loop K, J and I");
                    break;
                }
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
124
2
Gpt3D_Clone124_2.java 1 23
Gpt3D_Clone124_2.java 24 44
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 9; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
                if (condition1) {
                    System.out.println ("Breaking from Loop K and J");
                    k = 9;
                    j = 9;
                }
                if (condition2) {
                    System.out.println ("Breaking from Loop K, J and I");
                    k = 9;
                    j = 9;
                    i = 9;
                }
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 9; i ++) {
        if (condition1) {
            System.out.println ("Breaking from Loop K and J");
        }
        if (condition2) {
            System.out.println ("Breaking from Loop K, J and I");
            i = 9;
        }
        for (int j = 0;
        j < 9; j ++) {
            for (int k = 0;
            k < 9; k ++) {
            }
        }
    }
    System.out.println ("End of I , J , K");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
125
0
Gpt3D_Clone125_0.java 1 13
Gpt3D_Clone125_0.java 14 31
----------------------------------------

public static String center (String s, int size, char pad) {
    if (s == null || size <= s.length ()) return s;
    StringBuilder sb = new StringBuilder (size);
    for (int i = 0;
    i < (size - s.length ()) / 2; i ++) {
        sb.append (pad);
    }
    sb.append (s);
    while (sb.length () < size) {
        sb.append (pad);
    }
    return sb.toString ();
}
----------------------------------------

public static String center(String s, int size, char pad) {
    if (s == null || size <= s.length()){
        return s;
    }
    StringBuilder sb = new StringBuilder(size);
    int leftPadding = (size - s.length()) / 2;
    
    for (int i = 0; i < leftPadding; i++) {
        sb.append(pad);
    }
    sb.append(s); 
    while(sb.length() < size) {
        sb.append(pad);
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
125
2
Gpt3D_Clone125_2.java 1 13
Gpt3D_Clone125_2.java 14 32
----------------------------------------

public static String center (String s, int size, char pad) {
    if (s == null || size <= s.length ()) return s;
    StringBuilder sb = new StringBuilder (size);
    for (int i = 0;
    i < (size - s.length ()) / 2; i ++) {
        sb.append (pad);
    }
    sb.append (s);
    while (sb.length () < size) {
        sb.append (pad);
    }
    return sb.toString ();
}
----------------------------------------

public static String center(String str, int len, char ch) {
    if (str == null || len <= str.length()){
        return str;
    }
    StringBuilder stb = new StringBuilder(len);
    
    int place = (len - str.length()) / 2;
    
    for(int i = 0; i < place; i++){
        stb.append(ch);
    }
    stb.append(str);
    while(stb.length() < len){
        stb.append(ch);
    }
    return stb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
0
Gpt3D_Clone126_0.java 1 12
Gpt3D_Clone126_0.java 13 24
----------------------------------------

public void start (Stage stage) throws Exception {
    URL location = getClass ().getResource ("Main.fxml");
    FXMLLoader fxmlLoader = new FXMLLoader ();
    fxmlLoader.setLocation (location);
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load (location.openStream ());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

public void start (Stage stage) throws Exception {
    FXMLLoader fxmlLoader = new FXMLLoader();
    fxmlLoader.setLocation(getClass ().getResource ("Main.fxml"));
    Parent root = (Parent) fxmlLoader.load(getClass ().getResource("Main.fxml").openStream());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
126
1
Gpt3D_Clone126_1.java 1 12
Gpt3D_Clone126_1.java 13 24
----------------------------------------

public void start (Stage stage) throws Exception {
    URL location = getClass ().getResource ("Main.fxml");
    FXMLLoader fxmlLoader = new FXMLLoader ();
    fxmlLoader.setLocation (location);
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load (location.openStream ());
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

public void start (Stage stage) throws Exception {
    FXMLLoader fxmlLoader = new FXMLLoader(getClass ().getResource ("Main.fxml"));
    fxmlLoader.setBuilderFactory (new JavaFXBuilderFactory ());
    Parent root = (Parent) fxmlLoader.load ();
    Scene scene = new Scene (root);
    stage.setScene (scene);
    MainController mainController = fxmlLoader.getController ();
    mainController.setStage (stage);
    mainController.showStage ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
127
1
Gpt3D_Clone127_1.java 1 6
Gpt3D_Clone127_1.java 7 14
----------------------------------------

long pow (long a, int b) {
    if (b == 0) return 1;
    if (b == 1) return a;
    if (isEven (b)) return pow (a * a, b / 2);
    else return a * pow (a * a, b / 2);
}
----------------------------------------

long pow (long a, int b) {
    if (b == 0) return 1;
    else if (b == 1) return a;
    else if (b % 2 == 0) return pow (a * a, b / 2);
    else return a * pow (a * a, b / 2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
0
Gpt3D_Clone129_0.java 1 17
Gpt3D_Clone129_0.java 18 37
----------------------------------------

private static int pow (int x, int n) {
    if (n == 0) return 1;
    if (n == 1) return x;
    if (n < 0) {
        if (x == 1 || (x == 2 && n == - 1)) return 1;
        else return 0;
    }
    if ((n & 1) == 0) {
        long num = pow (x * x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    } else {
        long num = x * pow (x * x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    }
}
----------------------------------------

private static int pow (int x, int n) {
    if (n == 0) return 1;
    if (n == 1) return x;
    if (n < 0) {
        if (x == 1) return 1;
        else if (x == 2 && n == -1) return 1;
        else return 0;  
    } 
    if ((n & 1) == 0) {
        long num = pow (x, n / 2) * pow (x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    } else {
        long num = x * pow (x, (n-1) / 2) * pow (x, (n-1) / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
1
Gpt3D_Clone129_1.java 1 17
Gpt3D_Clone129_1.java 18 36
----------------------------------------

private static int pow (int x, int n) {
    if (n == 0) return 1;
    if (n == 1) return x;
    if (n < 0) {
        if (x == 1 || (x == 2 && n == - 1)) return 1;
        else return 0;
    }
    if ((n & 1) == 0) {
        long num = pow (x * x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    } else {
        long num = x * pow (x * x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    }
}
----------------------------------------

private static int pow (int x, int n) {
    if (n == 0) return 1;
    if (n == 1) return x; 
    if (n < 0) { 
        if (x == 1 || (x == 2 && n == -1)) return 1; 
        else return 0; 
    } 
    long num; 
    if ((n & 1) == 0) { 
        num = pow (x * x, n/2); 
    } 
    else { 
        num = x * pow (x * x, n/2); 
    } 
    if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE; 
    return (int) num; 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
129
2
Gpt3D_Clone129_2.java 1 17
Gpt3D_Clone129_2.java 18 36
----------------------------------------

private static int pow (int x, int n) {
    if (n == 0) return 1;
    if (n == 1) return x;
    if (n < 0) {
        if (x == 1 || (x == 2 && n == - 1)) return 1;
        else return 0;
    }
    if ((n & 1) == 0) {
        long num = pow (x * x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    } else {
        long num = x * pow (x * x, n / 2);
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        return (int) num;
    }
}
----------------------------------------

private static int pow (int x, int n) {
    if (n == 0) return 1; 
    if (n == 1) return x; 
    if (n < 0) { 
        if (n == -1 && x == 2) return 1; 
        else return 0; 
    } 
    long num; 
    if ((n & 1) == 0) { 
        num = pow (x * x, n/2); 
    } 
    else { 
        num = x * pow (x * x, n/2); 
    } 
    if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE; 
    return (int) num; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
135
0
Gpt3D_Clone135_0.java 1 11
Gpt3D_Clone135_0.java 12 27
----------------------------------------

public static int [] [] getRows (int i, int j, int [] [] array) {
    int [] [] another = new int [j - i + 1] [];
    while (i <= j) {
        for (int k = 0;
        k < another.length; k ++) {
            another [k] = array [i];
            i ++;
        }
    }
    return another;
}
----------------------------------------

public static int [] [] getRows (int i, int j, int [] [] array) {
    int [] [] another = new int [j - i + 1] [];
    for (int k = 0; k < another.length; k ++) {
        int count = 0;
        while (i <= j) {
            another [k] = array [i];
            i ++;
            count++;
        }
        if (count < another.length)
            k--;
    }
    return another;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
136
1
Gpt3D_Clone136_1.java 1 10
Gpt3D_Clone136_1.java 11 24
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        ContentValues values = new ContentValues();
        values.put("path", "path");
        sql.insert("table_name", null, values); 
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
1
Gpt3D_Clone137_1.java 1 5
Gpt3D_Clone137_1.java 6 15
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    return this;
}
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    if (isSelected)
        setToolTipText ("Row " + row + " Column " + column + "\nThis cell is selected. \nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    else 
        setToolTipText ("Row " + row + " Column " + column + "\nThis cell isn't selected. \nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
2
Gpt3D_Clone137_2.java 1 5
Gpt3D_Clone137_2.java 6 12
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    return this;
}
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component.");
    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
3
Gpt3D_Clone137_3.java 1 5
Gpt3D_Clone137_3.java 6 12
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    return this;
}
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Used to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
4
Gpt3D_Clone137_4.java 1 5
Gpt3D_Clone137_4.java 6 12
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    return this;
}
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Row " + row + " Column " + column + "\nTypically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
137
5
Gpt3D_Clone137_5.java 1 5
Gpt3D_Clone137_5.java 6 12
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
    return this;
}
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    setToolTipText ("Row " + row + " Column " + column);
    return this;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
138
0
Gpt3D_Clone138_0.java 1 12
Gpt3D_Clone138_0.java 13 23
----------------------------------------

public boolean add (P producer, E item) {
    lock.lock ();
    try {
        if (! queues.containsKey (producer)) {
            queues.put (producer, new PriorityBlockingQueue < > ());
        }
        added.signalAll ();
        return queues.get (producer).add (item);
    } finally {
        lock.unlock ();
    }
}
----------------------------------------

public boolean add (P producer, E item) {
    synchronized(lock) {
        if (! queues.containsKey (producer)) {
            queues.put (producer, new PriorityBlockingQueue < > ());
        }
        added.signalAll ();
        return queues.get (producer).add (item);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
142
0
Gpt3D_Clone142_0.java 1 11
Gpt3D_Clone142_0.java 12 24
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth ();
    int maxY = scrn.height - dialog.getHeight ();
    if (x < maxX && y < maxY) {
        x ++;
        y ++;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int maxX = scrn.width - dialog.getWidth();
    int maxY = scrn.height - dialog.getHeight();
    if (x + 1 <= maxX && y + 1 <= maxY) {
        x += 1;
        y += 1;
        dialog.setLocation (x, y);
    } else {
        ((Timer) e.getSource()).stop();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
144
0
Gpt3D_Clone144_0.java 1 9
Gpt3D_Clone144_0.java 10 20
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, host, "xmpp", host, props, this);
    super.authenticate (username + "@" + host);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
145
1
Gpt3D_Clone145_1.java 1 33
Gpt3D_Clone145_1.java 34 63
----------------------------------------

static void merge (int [] a, int [] l, int [] r) {
    int totElem = l.length + r.length;
    int i, li, ri;
    i = li = ri = 0;
    while (i < totElem) {
        if ((li < l.length) && (ri < r.length)) {
            if (l [li] < r [ri]) {
                a [i] = l [li];
                i ++;
                li ++;
            } else {
                a [i] = r [ri];
                i ++;
                ri ++;
            }
        } else {
            if (li >= l.length) {
                while (ri < r.length) {
                    a [i] = r [ri];
                    i ++;
                    ri ++;
                }
            }
            if (ri >= r.length) {
                while (li < l.length) {
                    a [i] = l [li];
                    li ++;
                    i ++;
                }
            }
        }
    }
}
----------------------------------------

static void merge_v4 (int [] a, int [] l, int [] r) {
    int totElem = l.length + r.length;
    int i, li, ri;
	i=0; li=0; ri=0;
    while (i < totElem) {
		if(li == l.length && ri != r.length){
			a[i] = r[ri];
			i++;
			ri++;
		}
		else if(ri == r.length && li != l.length){
			a[i] = l[li];
			i++;
			li++;
		}
		else{
			if (l [li] < r [ri]) {
				a [i] = l [li];
				i ++;
				li ++;
			} else {
				a [i] = r [ri];
				i ++;
				ri ++;
			}
		}
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
146
2
Gpt3D_Clone146_2.java 1 8
Gpt3D_Clone146_2.java 9 19
----------------------------------------

static void permute (int level, String prefix) {
    if (level == 0) {
        System.out.println (prefix);
        return;
    }
    for (int i = 0;
    i < s.length (); i ++) permute (level - 1, prefix + s.charAt (i));
}
----------------------------------------

static void permute4(int level, String prefix) {
    if (level == 0) {
        System.out.println(prefix);
        return;
    }
    char[] input = s.toCharArray();
    for (int i = 0; i < input.length; i ++) 
        permute4(level - 1, prefix + input[i]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
147
0
Gpt3D_Clone147_0.java 1 11
Gpt3D_Clone147_0.java 12 24
----------------------------------------

public static String replace (String oldStr, String newStr, String input) {
    StringBuilder sb = new StringBuilder ();
    int i;
    int prev = 0;
    while ((i = input.indexOf (oldStr, prev)) >= 0) {
        sb.append (input.substring (prev, i)).append (newStr);
        prev = i + oldStr.length ();
    }
    sb.append (input.substring (prev));
    return sb.toString ();
}
----------------------------------------

public static String replace (String oldStr, String newStr, String input) {
    String str = "";
    int i;
    int prev = 0;
    while ((i = input.indexOf (oldStr, prev)) >= 0) {
        str = str + input.substring (prev, i) + newStr;
        prev = i + oldStr.length ();
    }
    str = str + input.substring (prev);
    return str;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
148
0
Gpt3D_Clone148_0.java 1 11
Gpt3D_Clone148_0.java 12 25
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    while (true) {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (inString.equals ("-1")) break;
        System.out.println (Integer.parseInt (inString, 2));
    }
    System.out.println ("All set !");
}
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    boolean loopTerminated = false;
    while (!loopTerminated) {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (inString.equals ("-1")) loopTerminated = true;
        else System.out.println (Integer.parseInt (inString, 2));
    }
    System.out.println ("All set !");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
148
1
Gpt3D_Clone148_1.java 1 11
Gpt3D_Clone148_1.java 12 24
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    while (true) {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (inString.equals ("-1")) break;
        System.out.println (Integer.parseInt (inString, 2));
    }
    System.out.println ("All set !");
}
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    do {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (!inString.equals ("-1"))
            System.out.println (Integer.parseInt (inString, 2));
    } while (!inString.equals ("-1"));
    System.out.println ("All set !");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
149
0
Gpt3D_Clone149_0.java 1 13
Gpt3D_Clone149_0.java 14 28
----------------------------------------

public static void main (String [] args) {
    int [] constraints = {2, 1, 0, 1};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {true, false, true, false};
    boolean [] i2 = {true, false, false, false};
    boolean [] i3 = {false, true, false, true};
    boolean [] i4 = {false, false, false, true};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

public static void main (String [] args) {
    int [] constraints = {2, 1, 0, 1};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {true, false, true, false};
    boolean [] i2 = {true, false, false, true};
    boolean [] i3 = {false, true, true, false};
    boolean [] i4 = {true, true, false, false};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
149
1
Gpt3D_Clone149_1.java 1 13
Gpt3D_Clone149_1.java 14 28
----------------------------------------

public static void main (String [] args) {
    int [] constraints = {2, 1, 0, 1};
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {true, false, true, false};
    boolean [] i2 = {true, false, false, false};
    boolean [] i3 = {false, true, false, true};
    boolean [] i4 = {false, false, false, true};
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

public static void main (String [] args) {
    int [] constraints = {2, 1, 0, 8}; 
    List < boolean [] > items = new ArrayList < boolean [] > ();
    boolean [] i1 = {true, false, false, true};
    boolean [] i2 = {false, false, true, false};
    boolean [] i3 = {true, true, false, false};
    boolean [] i4 = {false, true, true, false}; 
    items.add (i1);
    items.add (i2);
    items.add (i3);
    items.add (i4);
    backtrack (constraints, items);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
151
0
Gpt3D_Clone151_0.java 1 22
Gpt3D_Clone151_0.java 23 40
----------------------------------------

public int maxBlock (String str) {
    int max = 0;
    int count = 1;
    char o = ' ';
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt (i);
        if (c == o) {
            count ++;
            if (count > max) {
                max = count;
            }
        } else {
            count = 1;
            if (count > max) {
                max = count;
            }
        }
        o = c;
    }
    return max;
}
----------------------------------------

int maxBlockV3 (String str) {
    int max = 0;
    int count = 1;
    char o = ' ';
    for (int i = 0; i < str.length (); i++) {
        char c = str.charAt (i);
        if (c == o) {
            max = Math.max(count++, max);
        } else {
            count = 1;
            max = Math.max(count, max);
        }
        o = c;
    }
    return max;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
151
1
Gpt3D_Clone151_1.java 1 22
Gpt3D_Clone151_1.java 23 40
----------------------------------------

public int maxBlock (String str) {
    int max = 0;
    int count = 1;
    char o = ' ';
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt (i);
        if (c == o) {
            count ++;
            if (count > max) {
                max = count;
            }
        } else {
            count = 1;
            if (count > max) {
                max = count;
            }
        }
        o = c;
    }
    return max;
}
----------------------------------------

int maxBlockV4 (String str) {
    int max = 0;
    int count = 1;
    char o = ' ';
    for (int i = 0; i < str.length (); i++) {
        char c = str.charAt (i);
        if (c == o) {
            max = count > max ? count ++ : max;
        } else {
            count = 1;
            max = count > max ? count : max;
        }
        o = c;
    }
    return max;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
152
0
Gpt3D_Clone152_0.java 1 19
Gpt3D_Clone152_0.java 20 41
----------------------------------------

public static int maxBlock (String str) {
    int maxCounter = 1;
    int counter = 1;
    if (str.length () == 0) {
        return 0;
    }
    for (int i = 1;
    i < str.length (); i ++) {
        if (str.charAt (i - 1) == str.charAt (i)) {
            counter ++;
        } else {
            if (counter > maxCounter) {
                maxCounter = counter;
            }
            counter = 1;
        }
    }
    return Math.max (maxCounter, counter);
}
----------------------------------------

public static int maxBlock (String str) {
    int maxCounter = 1;
    int counter = 1;
    if (str.length () == 0) {
        return 0;
    }
    for (int i = 0;
    i < str.length () -1 ; i ++) {
        if (str.charAt (i) == str.charAt (i + 1)) {
            counter ++;
            if (counter > maxCounter) {
                maxCounter = counter;
            }
        }
        else {
           counter = 1;
        }
    }
    return maxCounter;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
154
0
Gpt3D_Clone154_0.java 1 15
Gpt3D_Clone154_0.java 16 34
----------------------------------------

static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (UncheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (UncheckedException.class));
    } else {
        throw new InternalError (exClassName + " is not a valid exception");
    }
}
----------------------------------------

static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    
    if (CheckedException.class.isAssignableFrom (clazz) 
        && UncheckedException.class.isAssignableFrom (clazz))
    {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else {
        throw new InternalError (exClassName + " is not a valid exception");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
156
0
Gpt3D_Clone156_0.java 1 19
Gpt3D_Clone156_0.java 20 44
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    if (CheckedException.class.isAssignableFrom (exceptionClass)) {
        try {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } catch (InstantiationException | IllegalAccessException e) {
            throw new IllegalStateException (e);
        }
    } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
		try {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } catch (InstantiationException | IllegalAccessException e) {
            throw new IllegalStateException (e);
        }
    } else {
        throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
156
1
Gpt3D_Clone156_1.java 1 19
Gpt3D_Clone156_1.java 20 39
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class <?> exceptionClass;
    try {
        exceptionClass = Class.forName(className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException(e);
    }
    try {
        if (CheckedException.class.isAssignableFrom(exceptionClass)) 
            throw exceptionClass.asSubclass(CheckedException.class).newInstance();
        else if (UncheckedException.class.isAssignableFrom(exceptionClass))
            throw exceptionClass.asSubclass(UncheckedException.class).newInstance(); 
        else
            throw new IllegalArgumentException("Not a valid exception type: " + exceptionClass.getName());
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException(e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
156
2
Gpt3D_Clone156_2.java 1 19
Gpt3D_Clone156_2.java 20 39
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class <?> exceptionClass;
    try {
        exceptionClass = Class.forName(className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException(e);
    }
    try {
        if (CheckedException.class.isAssignableFrom(exceptionClass)) 
            throw (CheckedException) exceptionClass.newInstance();
        else if (UncheckedException.class.isAssignableFrom(exceptionClass))
            throw (UncheckedException) exceptionClass.newInstance(); 
        else
            throw new IllegalArgumentException("Not a valid exception type: " + exceptionClass.getName());
    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException(e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
158
0
Gpt3D_Clone158_0.java 1 11
Gpt3D_Clone158_0.java 12 28
----------------------------------------

public void insertNodeAfter (E nVal, E curVal) {
    Node < E > prev = findPrevOf (curVal);
    Node < E > curr = null;
    if (prev == null) {
        curr = head;
    } else {
        curr = prev.getNext ();
    }
    Node < E > newNode = new Node < E > (nVal);
    insert (curr, (curr == null ? curr : curr.getNext ()), newNode);
}
----------------------------------------

public void insertNodeAfter (E nVal, E curVal) {
    Node < E > prev = findPrevOf (curVal);
    Node < E > curr;
    if (prev == null) {
        curr = head;
    } else {
        curr = prev.getNext ();
    }
    Node < E > newNode = new Node < E > (nVal);
    if (curr != null) {
        insert (curr, curr.getNext (), newNode);
    } else {
        insert (curr, curr, newNode);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
159
0
Gpt3D_Clone159_0.java 1 26
Gpt3D_Clone159_0.java 27 51
----------------------------------------

private void addPersonButtonActionPerformed (java.awt.event.ActionEvent evt) {
    String firstName = firstNameTextField.getText ();
    String lastName = lastNameTextField.getText ();
    String emailAddress = emailTextField.getText ();
    boolean valid = true;
    if (firstName.equals ("")) {
        System.out.println ("First Name is missing");
        valid = false;
    }
    if (lastName.equals ("")) {
        System.out.println ("Last Name is missing");
        valid = false;
    }
    if (emailAddress.equals ("")) {
        System.out.println ("E-Mail address is missing");
        valid = false;
    }
    if (! Email.isValid (emailAddress)) {
        System.out.println ("E-Mail address is invalid");
        valid = false;
    }
    if (valid) {
        personArrayList.add (new Person (firstName, lastName, emailAddress));
        System.out.println ("Person added!");
    }
}
----------------------------------------

private void addPersonButtonActionPerformed(java.awt.event.ActionEvent evt) {
    String firstName = firstNameTextField.getText();
    if (firstName.equals("")) {
        System.out.println("First Name is missing");
        return;
    }
    String lastName = lastNameTextField.getText();
    if (lastName.equals("")) {
        System.out.println("Last Name is missing");
        return;
    }
    String emailAddress = emailTextField.getText();
    if (emailAddress.equals("")) {
        System.out.println("E-Mail address is missing");
        return;
    }
    if (!Email.isValid(emailAddress)) {
        System.out.println("E-Mail address is invalid");
        return;
    }
    personArrayList.add(new Person(firstName, lastName, emailAddress));
    System.out.println("Person added!");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
1
Gpt3D_Clone15_1.java 1 9
Gpt3D_Clone15_1.java 10 24
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) {
        cal.add (Calendar.DAY_OF_MONTH, - 7 + Calendar.FRIDAY - dayofweek);
    } 
    else {
        cal.add (Calendar.DAY_OF_MONTH, Calendar.FRIDAY - dayofweek);
    }
    return cal;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
15
2
Gpt3D_Clone15_2.java 1 9
Gpt3D_Clone15_2.java 10 20
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);
    return cal;
}
----------------------------------------

public static Calendar getFirstThursday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMinimum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek > Calendar.THURSDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + 7 + Calendar.THURSDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - dayofweek + Calendar.THURSDAY);
    return cal;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
0
Gpt3D_Clone162_0.java 1 12
Gpt3D_Clone162_0.java 13 25
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRectException ge) {
         System.out.printf ("The corner locations for the window \"%s\" could not be found due to an error.\n", windowName);
         ge.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
1
Gpt3D_Clone162_1.java 1 12
Gpt3D_Clone162_1.java 13 25
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRectException ge) {
         System.out.printf ("The corner locations for the window \"%s\" could not be found.\n", windowName);
         ge.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
162
2
Gpt3D_Clone162_2.java 1 12
Gpt3D_Clone162_2.java 13 24
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException e) {
        e.printStackTrace ();
    } catch (GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String windowName = "Document - WordPad";
    int [] rect;
    try {
        rect = GetWindowRect.getRect (windowName);
        System.out.printf ("The corner locations for the window \"%s\" are %s", windowName, Arrays.toString (rect));
    } catch (GetWindowRect.WindowNotFoundException | GetWindowRect.GetWindowRectException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
163
0
Gpt3D_Clone163_0.java 1 16
Gpt3D_Clone163_0.java 17 32
----------------------------------------

static boolean unsignedMultiplyOverflows (final long a, final long b) {
    if (a == 0 || b == 0) {
        return false;
    }
    final long aHalf = a>>> 1;
    final long bHalf = b>>> 1;
    final byte aLastBit = (byte) (a & 1);
    final byte bLastBit = (byte) (b & 1);
    if (aLastBit == 0) {
        return Long.MAX_VALUE / b < aHalf;
    } else if (bLastBit == 0) {
        return Long.MAX_VALUE / a < bHalf;
    } else {
        return (Long.MAX_VALUE - bHalf) / b < aHalf;
    }
}
----------------------------------------

static boolean unsignedMultiplyOverflows (final long a, final long b) {
    if (a == 0 || b == 0) {
        return false;
    }
    final byte aLastBit = (byte) (a & 1);
    final byte bLastBit = (byte) (b & 1);
    if (aLastBit == 0) {
        return a * b > Long.MAX_VALUE;
    } else if (bLastBit == 0) {
        return a * b > Long.MAX_VALUE;
    } else {
        return (a / 2) * b > (Long.MAX_VALUE - (b / 2));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
16
0
Gpt3D_Clone16_0.java 1 12
Gpt3D_Clone16_0.java 13 30
----------------------------------------

public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        Arrays.asList (tweets).forEach (System.out :: println);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Tweet [] tweets;
    ObjectMapper mapper = new ObjectMapper ();
    try {
        File json = new File ("test.json");
        tweets = mapper.readValue (json, Tweet [].class);
        System.out.println ("Java object created from JSON String :");
        for (int i = 0; i < tweets.length; i++) {
            Tweet tweet = tweets[i];
            System.out.println (tweet);
        }
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
173
0
Gpt3D_Clone173_0.java 1 14
Gpt3D_Clone173_0.java 15 30
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ();
    System.out.println ("Create Dialog");
    JDialog dialog = new JDialog ();
    dialog.getContentPane ().setLayout (null);
    for (int i = 0;
    i < 200; i ++) {
        dialog.add (new JTextField ("some text"));
    }
    dialog.setTitle ("Dialog " + count ++);
    dialog.setLocation (count * 25, count * 25);
    dialog.setVisible (true);
    System.out.println ("\tCreated " + dialog.getTitle ());
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JDialog dialog = new JDialog ();
    System.out.println ("Create Dialog");
    dialog.getContentPane ().setLayout (null);
    for (int i = 0; i < 200; i ++) {
        JTextField textField = new JTextField ("some text");
        dialog.add (textField);
    }
    dialog.setTitle ("Dialog " + count ++);
    dialog.setLocation (count * 25, count * 25);
    dialog.setVisible (true);
    System.out.println ("\tCreated " + dialog.getTitle ());
    System.out.println ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
17
0
Gpt3D_Clone17_0.java 1 20
Gpt3D_Clone17_0.java 21 44
----------------------------------------

public String longestSequenceOfChar (String str) {
    String interimresult = "";
    String result = "";
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        interimresult += ch;
        for (int j = i + 1;
        j < str.length (); j ++) {
            char ch1 = str.charAt (j);
            if (ch != ch1) {
                break;
            }
            interimresult += ch;
        }
        if (interimresult.length () > result.length ()) result = interimresult;
        interimresult = "";
    }
    return result;
}
----------------------------------------

public String longestSequenceOfChar (String str) {
    String interimresult = "";
    String result = "";
    int i = 0;
    while (i < str.length ()) {
        char ch = str.charAt (i);
        interimresult += ch;
        int j = i + 1;
        do {
            char ch1 = str.charAt (j);
            if (ch != ch1) {
                break;
            }
            interimresult += ch;
            j++;
        } while (j < str.length ());
        if (interimresult.length () > result.length ()) result = interimresult;
        interimresult = "";
        i++;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
17
1
Gpt3D_Clone17_1.java 1 20
Gpt3D_Clone17_1.java 21 44
----------------------------------------

public String longestSequenceOfChar (String str) {
    String interimresult = "";
    String result = "";
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        interimresult += ch;
        for (int j = i + 1;
        j < str.length (); j ++) {
            char ch1 = str.charAt (j);
            if (ch != ch1) {
                break;
            }
            interimresult += ch;
        }
        if (interimresult.length () > result.length ()) result = interimresult;
        interimresult = "";
    }
    return result;
}
----------------------------------------

public String longestSequenceOfChar (String str) {
    String interimresult = "";
    String result = "";
    int i = 0;
    while (i < str.length ()) {
        char ch = str.charAt (i);
        interimresult += ch;
        int j = i + 1;
        while (j < str.length ()) {
            char ch1 = str.charAt (j);
            if (ch != ch1) {
                break;
            }
            interimresult += ch;
            j++;
        }
        if (interimresult.length () > result.length ()) result = interimresult;
        interimresult = "";
        i++;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
180
0
Gpt3D_Clone180_0.java 1 18
Gpt3D_Clone180_0.java 19 38
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    Scanner stdin = new Scanner (System.in);
    do {
        System.out.println ("Current list is " + list);
        System.out.println ("Add more? (y/n)");
        if (stdin.next ().startsWith ("y")) {
            System.out.println ("Enter : ");
            list.add (stdin.next ());
        } else {
            break;
        }
    } while (true);
    stdin.close ();
    System.out.println ("List is " + list);
    String [] arr = list.toArray (new String [0]);
    System.out.println ("Array is " + Arrays.toString (arr));
}
----------------------------------------

public static void main(String[] args) {
    List<String> list = new ArrayList<String>();
    Scanner stdin = new Scanner(System.in);
    while (true) {
        System.out.println("Current list is " + list);
        System.out.println("Add more? (y/n)");
        if (stdin.next().charAt(0) == 'y') {
            System.out.println("Enter : ");
            list.add(stdin.next());
        } else {
            break;
        }
    }
    String[] arr = list.toArray(new String[0]);
    System.out.println("List is " + list);
    System.out.println("Array is " + Arrays.toString(arr));
    stdin.close();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
0
Gpt3D_Clone182_0.java 1 11
Gpt3D_Clone182_0.java 12 22
----------------------------------------

public static void main (String [] args) {
    int arr [];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 5; i ++) {
        System.out.print ("Enter number " + (i + 1) + ": ");
        arr [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < 5; i ++) System.out.println ("Number " + (i + 1) + ": " + arr [i]);
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int[5];
    Scanner scan = new Scanner (System.in);
    for (int i = 0; i < arr.length; i++) {
        System.out.print ("Enter number " + (i + 1) + ": ");
        arr[i] = scan.nextInt();
    }
    for (int i = 0; i < arr.length; i++) System.out.println ("Number " + (i + 1) + ": " + arr[i]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
182
1
Gpt3D_Clone182_1.java 1 11
Gpt3D_Clone182_1.java 12 22
----------------------------------------

public static void main (String [] args) {
    int arr [];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 5; i ++) {
        System.out.print ("Enter number " + (i + 1) + ": ");
        arr [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < 5; i ++) System.out.println ("Number " + (i + 1) + ": " + arr [i]);
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int[5];
    for (int i = 0; i < arr.length; i++) {
        Scanner scan = new Scanner (System.in);
        System.out.print ("Enter number " + (i + 1) + ": ");
        arr[i] = scan.nextInt();
    }
    for (int i = 0; i < arr.length; i++) System.out.println ("Number " + (i + 1) + ": " + arr[i]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
183
0
Gpt3D_Clone183_0.java 1 11
Gpt3D_Clone183_0.java 12 24
----------------------------------------

public static void main (String [] args) {
    int arr [];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 5; i ++) {
        System.out.print ("Enter number " + (i + 1) + ": ");
        arr [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < 5; i ++) System.out.println ("Number " + (i + 1) + ": " + arr [i]);
}
----------------------------------------

public static void main (String [] args) {
    int arr [];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 5; i ++) {
        System.out.print ("Please enter the number for index " + i + ": ");
        arr [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < 5; i ++) System.out.println ("This number at index " + i + " is: " + arr [i]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
0
Gpt3D_Clone188_0.java 1 14
Gpt3D_Clone188_0.java 15 37
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        while (true) {
            try {
                latch.await ();
                break;
            } catch (InterruptedException e) {
                throw new RuntimeException (e);
            }
        }
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
188
1
Gpt3D_Clone188_1.java 1 14
Gpt3D_Clone188_1.java 15 36
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        latch.countDown ();
        System.out.println (threadName + ": locked first lock");
        latch.await ();
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

public void run () {
    String threadName = Thread.currentThread ().getName ();
    try {
        first.lock ();
        System.out.println (threadName + ": locked first lock");
        while (true) {
            try {
                latch.await ();
                break;
            } catch (InterruptedException e) {
                throw new RuntimeException (e);
            }
        }
        System.out.println (threadName + ": attempting to lock second lock");
        second.lock ();
        System.out.println (threadName + ": never reached");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
0
Gpt3D_Clone18_0.java 1 13
Gpt3D_Clone18_0.java 14 32
----------------------------------------

public void serialize (Test value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
    jgen.writeStartObject ();
    Field [] fields = value.getClass ().getDeclaredFields ();
    for (Field field : fields) {
        try {
            jgen.writeObjectField (field.getName (), field.get (value));
        } catch (IllegalArgumentException | IllegalAccessException e) {
            e.printStackTrace ();
        }
    }
    jgen.writeObjectField ("extra_field", "whatever_value");
    jgen.writeEndObject ();
}
----------------------------------------

public void serialize (Test value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
    jgen.writeStartObject ();
    Class<?> clazz = value.getClass ();
    while (clazz != null) {
        Field [] fields = clazz.getDeclaredFields ();
        for (Field field : fields) {
            try {
                jgen.writeObjectField (field.getName (), field.get (value));
            } catch (IllegalArgumentException | IllegalAccessException e) {
                e.printStackTrace ();
            }
        }
        clazz = clazz.getSuperclass ();
    }
    jgen.writeObjectField ("extra_field", "whatever_value");
    jgen.writeEndObject ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
18
1
Gpt3D_Clone18_1.java 1 13
Gpt3D_Clone18_1.java 14 29
----------------------------------------

public void serialize (Test value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
    jgen.writeStartObject ();
    Field [] fields = value.getClass ().getDeclaredFields ();
    for (Field field : fields) {
        try {
            jgen.writeObjectField (field.getName (), field.get (value));
        } catch (IllegalArgumentException | IllegalAccessException e) {
            e.printStackTrace ();
        }
    }
    jgen.writeObjectField ("extra_field", "whatever_value");
    jgen.writeEndObject ();
}
----------------------------------------

public void serialize (Test value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
    jgen.writeStartObject ();
    Field [] fields = value.getClass ().getDeclaredFields ();
    int len = fields.length;
    for (int i=0; i<len; i++) {
        try {
            jgen.writeObjectField (fields[i].getName (), fields[i].get (value));
        } catch (IllegalArgumentException | IllegalAccessException e) {
            e.printStackTrace ();
        }
    }
    jgen.writeObjectField ("extra_field", "whatever_value");
    jgen.writeEndObject ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
190
0
Gpt3D_Clone190_0.java 1 14
Gpt3D_Clone190_0.java 15 30
----------------------------------------

public void printSquare (int min, int max) {
    for (int i = min;
    i <= max; i ++) {
        for (int j = i;
        j <= max; j ++) {
            System.out.print (j);
        }
        for (int k = min;
        k < i; k ++) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------

public void printSquare (int min, int max) {
    for (int i = max;
        i >= min; i --) {
        for (int j = i;
            j >= min; j --) {
            System.out.print (j);
        }
        for (int k = max;
            k > i; k --) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
191
0
Gpt3D_Clone191_0.java 1 9
Gpt3D_Clone191_0.java 10 22
----------------------------------------

public boolean handleMessage (SOAPMessageContext context) {
    SOAPMessage msg = context.getMessage ();
    try {
        msg.writeTo (System.out);
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
    return true;
}
----------------------------------------

public boolean handleMessage (SOAPMessageContext context1, SOAPMessageContext context2) {
    SOAPMessage msg1 = context1.getMessage ();
    SOAPMessage msg2 = context2.getMessage ();
    try {
        msg1.writeTo (System.out);
        msg2.writeTo (System.out);
    } catch (Exception ex) {
        Logger.getLogger (LogMessageHandler.class.getName ()).log (Level.SEVERE, null, ex);
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
192
0
Gpt3D_Clone192_0.java 1 9
Gpt3D_Clone192_0.java 10 20
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        UIManager.setLookAndFeel (laf [index].getClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
    index = (index + 1) % laf.length;
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        UIManager.setLookAndFeel (laf [index++].getClassName ());
        index %= laf.length;
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
0
Gpt3D_Clone193_0.java 1 19
Gpt3D_Clone193_0.java 20 42
----------------------------------------

public static String compressBad (String str) {
    String compressedString = "";
    if (str != null && str.length () > 0) {
        int countConsecutive = 1;
        char prevChar = str.charAt (0);
        for (int i = 1;
        i < str.length (); i ++) {
            if (str.charAt (i) != prevChar) {
                compressedString += String.valueOf (prevChar) + countConsecutive;
                prevChar = str.charAt (i);
                countConsecutive = 1;
                continue;
            }
            countConsecutive ++;
        }
        compressedString += String.valueOf (prevChar) + countConsecutive;
    }
    return compressedString;
}
----------------------------------------

public static String compressBad (String str) {
    String compressedString = "";
    if (str != null && str.length () > 0) {
        int countConsecutive = 1;
        char prevChar = str.charAt (0);
        for (int i = 1;
        i < str.length (); i++) {
            if (str.charAt (i) == prevChar) {
                countConsecutive++; 
                continue;
            }
            else { 
                compressedString += String.valueOf (prevChar) + countConsecutive;
                prevChar = str.charAt (i);
                countConsecutive = 1;
            }
        }
        compressedString += String.valueOf (prevChar) + countConsecutive;
    }
    return compressedString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
193
1
Gpt3D_Clone193_1.java 1 19
Gpt3D_Clone193_1.java 20 42
----------------------------------------

public static String compressBad (String str) {
    String compressedString = "";
    if (str != null && str.length () > 0) {
        int countConsecutive = 1;
        char prevChar = str.charAt (0);
        for (int i = 1;
        i < str.length (); i ++) {
            if (str.charAt (i) != prevChar) {
                compressedString += String.valueOf (prevChar) + countConsecutive;
                prevChar = str.charAt (i);
                countConsecutive = 1;
                continue;
            }
            countConsecutive ++;
        }
        compressedString += String.valueOf (prevChar) + countConsecutive;
    }
    return compressedString;
}
----------------------------------------

public static String compressBad (String str) {
    StringBuilder compressedString = new StringBuilder();
    if (str != null && str.length () > 0) {
        int countConsecutive = 1;
        char prevChar = str.charAt (0);
        for (int i = 1;
        i < str.length (); i++) {
            if (str.charAt (i) != prevChar) {
                compressedString.append(String.valueOf (prevChar) + countConsecutive);
                prevChar = str.charAt (i);
                countConsecutive = 1;
                continue;
            }
            else {
                countConsecutive++;
            }
        }
        compressedString.append(String.valueOf (prevChar) + countConsecutive);
    }
    return compressedString.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
195
0
Gpt3D_Clone195_0.java 1 26
Gpt3D_Clone195_0.java 27 53
----------------------------------------

public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    }
    ByteArrayOutputStream ous = null;
    InputStream ios = null;
    try {
        byte [] buffer = new byte [4096];
        ous = new ByteArrayOutputStream ();
        ios = new FileInputStream (file);
        int read = 0;
        while ((read = ios.read (buffer)) != - 1) {
            ous.write (buffer, 0, read);
        }
    } finally {
        try {
            if (ous != null) ous.close ();
        } catch (IOException e) {
        }
        try {
            if (ios != null) ios.close ();
        } catch (IOException e) {
        }
    }
    return ous.toByteArray ();
}
----------------------------------------

public byte [] read (File file) throws IOException, FileTooBigException {
    if (file.length () > MAX_FILE_SIZE) {
        throw new FileTooBigException (file);
    } 
    InputStream bfi = new BufferedInputStream(new FileInputStream(file));
    ByteArrayOutputStream ous = null;
    try {   
        ous = new ByteArrayOutputStream ();
        int read = 0;
        while ((read = bfi.read ()) != -1) {
            ous.write (read);
        }
    } finally {
        try {
            if (ous != null) ous.close ();
        } catch (IOException e) {
        }
        try {
            if (bfi != null) bfi.close ();
        } catch (IOException e) {
        }
    }
    return ous.toByteArray ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
199
0
Gpt3D_Clone199_0.java 1 13
Gpt3D_Clone199_0.java 14 28
----------------------------------------

public IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject ();
    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);
    String className = prim.getAsString ();
    Class < ? > klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
        throw new JsonParseException (e.getMessage ());
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

public IAnimal deserialize (JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
    JsonObject jsonObject = json.getAsJsonObject ();
    JsonPrimitive jsonPrimitive = jsonObject.getAsJsonPrimitive (CLASSNAME);
    String className = jsonPrimitive.getAsString ();
    Class<?> klass = null;
    try {
        klass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        System.err.println (e.getMessage ());
        throw new JsonParseException (e);
    }
    return context.deserialize (jsonObject.get (INSTANCE), klass);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
202
0
Gpt3D_Clone202_0.java 1 14
Gpt3D_Clone202_0.java 15 34
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    for (int i = 0;
    i < s2.length (); i ++) {
        if (! s1.contains ("" + s2.charAt (i))) {
            return false;
        }
        s1 = s1.replaceFirst ("" + s2.charAt (i), "");
        s2 = s2.replaceFirst ("" + s2.charAt (i), "");
    }
    return true;
}
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    for (int i = 0;
    i < s2.length (); i ++) {
        if (! s1.contains ("" + s2.charAt (i))) {
            return false;
        }
        StringBuilder temp1 = new StringBuilder(s1);
        temp1.replace(temp1.indexOf("" + s2.charAt (i)), temp1.indexOf("" + s2.charAt (i))+1, "");
        StringBuilder temp2 = new StringBuilder(s2);
        temp2.replace(temp2.indexOf("" + s2.charAt (i)), temp2.indexOf("" + s2.charAt (i))+1,"");
        s1 = temp1.toString();
        s2 = temp2.toString();
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
202
1
Gpt3D_Clone202_1.java 1 14
Gpt3D_Clone202_1.java 15 34
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    for (int i = 0;
    i < s2.length (); i ++) {
        if (! s1.contains ("" + s2.charAt (i))) {
            return false;
        }
        s1 = s1.replaceFirst ("" + s2.charAt (i), "");
        s2 = s2.replaceFirst ("" + s2.charAt (i), "");
    }
    return true;
}
----------------------------------------

public static boolean isAnagram (String a, String b) {
    if (a.length() != b.length()) {
        return false;
    }
    boolean isAnagram = true;
    for (int i = 0;
    i < b.length (); i ++) {
        if (! a.contains ("" + b.charAt (i))) {
            isAnagram = false;
            break;
        }
        a = a.replaceFirst ("" + b.charAt (i), "");
        b = b.replaceFirst ("" + b.charAt (i), "");
    }
    
    return isAnagram; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
202
2
Gpt3D_Clone202_2.java 1 14
Gpt3D_Clone202_2.java 15 33
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    for (int i = 0;
    i < s2.length (); i ++) {
        if (! s1.contains ("" + s2.charAt (i))) {
            return false;
        }
        s1 = s1.replaceFirst ("" + s2.charAt (i), "");
        s2 = s2.replaceFirst ("" + s2.charAt (i), "");
    }
    return true;
}
----------------------------------------

public static boolean isAnagram (String p, String q) {
    if (p.length() != q.length()) {
        return false;
    }
    int countAnagrams = 0;
    for (int i = 0;
    i < q.length (); i ++) {
        if (p.contains ("" + q.charAt (i))) {
            countAnagrams++;
            p = p.replaceFirst ("" + q.charAt (i), "");
            q = q.replaceFirst ("" + q.charAt (i), "");
        } 
    }
    
    return countAnagrams == q.length(); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
0
Gpt3D_Clone205_0.java 1 17
Gpt3D_Clone205_0.java 18 38
----------------------------------------

static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    int n = s1.length ();
    int [] charMap = new int [256];
    for (int i = 0;
    i < n; i ++) {
        char c1 = s1.charAt (i);
        charMap [c1] ++;
        char c2 = s2.charAt (i);
        charMap [c2] --;
    }
    for (int i = 0;
    i < charMap.length; i ++) {
        if (charMap [i] != 0) return false;
    }
    return true;
}
----------------------------------------

static boolean isAnagram (String s1, String s2) {
    int n = s1.length();
    int[] charMap = new int[256];
    if (s1.length() == s2.length()){
        for (int i = 0; i < n; i++) {
            char c1 = s1.charAt(i);
            charMap[c1]++;
            char c2 = s2.charAt(i);
            charMap[c2]--;
        }
        for (int i = 0; i < charMap.length; i++) {
            if (charMap[i] != 0) {
                return false;
            }
        }
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
205
1
Gpt3D_Clone205_1.java 1 17
Gpt3D_Clone205_1.java 18 38
----------------------------------------

static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    int n = s1.length ();
    int [] charMap = new int [256];
    for (int i = 0;
    i < n; i ++) {
        char c1 = s1.charAt (i);
        charMap [c1] ++;
        char c2 = s2.charAt (i);
        charMap [c2] --;
    }
    for (int i = 0;
    i < charMap.length; i ++) {
        if (charMap [i] != 0) return false;
    }
    return true;
}
----------------------------------------

public static boolean isAnagram(String s1, String s2) {
    int n = s1.length();
    if (s1.length() == s2.length()) {
        int[] charMap = new int[256];
        for (int i = 0; i < n; i++) {
            char c1 = s1.charAt(i);
            charMap[c1]++; 
            char c2 = s2.charAt(i);
            charMap[c2]--;
        }
        for (int i = 0; i < charMap.length; i++) {
            if (charMap[i] != 0) {
                return false;
            }
        }
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
206
1
Gpt3D_Clone206_1.java 1 14
Gpt3D_Clone206_1.java 15 28
----------------------------------------

public static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    s1 = s1.toLowerCase ();
    s2 = s2.toLowerCase ();
    char [] c1 = s1.toCharArray ();
    char [] c2 = s2.toCharArray ();
    Arrays.sort (c1);
    Arrays.sort (c2);
    String sc1 = new String (c1);
    String sc2 = new String (c2);
    return sc1.equals (sc2);
}
----------------------------------------

public static boolean isAnagram2 (String s1, String s2) {
    if (s1.length () != s2.length ()) {
        return false;
    }
    s1 = s1.toLowerCase ();
    s2 = s2.toLowerCase ();
    char [] c1 = s1.toCharArray ();
    char [] c2 = s2.toCharArray ();
    Arrays.sort (c1);
    Arrays.sort (c2);
    return Arrays.equals(c1, c2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
0
Gpt3D_Clone207_0.java 1 17
Gpt3D_Clone207_0.java 18 39
----------------------------------------

static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    int n = s1.length ();
    int [] charMap = new int [256];
    for (int i = 0;
    i < n; i ++) {
        char c1 = s1.charAt (i);
        charMap [c1] ++;
        char c2 = s2.charAt (i);
        charMap [c2] --;
    }
    for (int i = 0;
    i < charMap.length; i ++) {
        if (charMap [i] != 0) return false;
    }
    return true;
}
----------------------------------------

static boolean isAnagram(String s1, String s2) {
    if (Objects.equals(s1.length(), s2.length())) {
        return false;
    }
    int n = s1.length();
    int[] charMap = new int[256];
    for (int i = 0; i < n; i++) {
        char c1 = s1.charAt(i);
        charMap[c1]++;
        char c2 = s2.charAt(i);
        charMap[c2]--;
    }
    for (int i = 0; i < charMap.length; i++) {
        if (charMap[i] != 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
207
1
Gpt3D_Clone207_1.java 1 17
Gpt3D_Clone207_1.java 18 40
----------------------------------------

static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    int n = s1.length ();
    int [] charMap = new int [256];
    for (int i = 0;
    i < n; i ++) {
        char c1 = s1.charAt (i);
        charMap [c1] ++;
        char c2 = s2.charAt (i);
        charMap [c2] --;
    }
    for (int i = 0;
    i < charMap.length; i ++) {
        if (charMap [i] != 0) return false;
    }
    return true;
}
----------------------------------------

static boolean isAnagram(String s1, String s2) {
    if (!Objects.equals(s1.length(), s2.length())) {
        return false;
    }
    int n = s1.length();
    int[] charMap = new int[256];
    for (int i = 0; i < n; i++) {
        char c1 = s1.charAt(i);
        char c2 = s2.charAt(i);
        charMap[c1]++;
        charMap[c2]--;
    }
    for (int j = 0; j < charMap.length; j++) {
        if (charMap[j] != 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
208
1
Gpt3D_Clone208_1.java 1 17
Gpt3D_Clone208_1.java 18 40
----------------------------------------

static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    int n = s1.length ();
    int [] charMap = new int [256];
    for (int i = 0;
    i < n; i ++) {
        char c1 = s1.charAt (i);
        charMap [c1] ++;
        char c2 = s2.charAt (i);
        charMap [c2] --;
    }
    for (int i = 0;
    i < charMap.length; i ++) {
        if (charMap [i] != 0) return false;
    }
    return true;
}
----------------------------------------

static boolean isAnagramType4(String s1, String s2) {
    if (s1.length() != s2.length()) return false;
    int[] charMap = new int[256];
    int i;
    for (i = 0; i < s1.length(); i++) {
        char c1 = s1.charAt(i);
        char c2 = s2.charAt(i);
        charMap[c1]++;
        charMap[c2]--;
    }
    for (i = 0; i < charMap.length; i++) {
        if (charMap[i] != 0) return false;
    }
     return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
208
2
Gpt3D_Clone208_2.java 1 17
Gpt3D_Clone208_2.java 18 39
----------------------------------------

static boolean isAnagram (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;
    int n = s1.length ();
    int [] charMap = new int [256];
    for (int i = 0;
    i < n; i ++) {
        char c1 = s1.charAt (i);
        charMap [c1] ++;
        char c2 = s2.charAt (i);
        charMap [c2] --;
    }
    for (int i = 0;
    i < charMap.length; i ++) {
        if (charMap [i] != 0) return false;
    }
    return true;
}
----------------------------------------

boolean isAnagramType3(String s1, String s2) {
    if (s1.length() != s2.length()) return false;
    int[] charMap = new int[256];
    for (int i = 0; i < s1.length(); i++) {
        char c1 = s1.charAt(i);
        char c2 = s2.charAt(i);
        charMap[c1]++;
        charMap[c2]--;
    }
    for (int i = 0; i < charMap.length; i++) {
        if (charMap[i] != 0) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
0
Gpt3D_Clone209_0.java 1 9
Gpt3D_Clone209_0.java 10 22
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.add (num)) {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.contains (num)) {
            unique.add (num);
        } else {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
209
1
Gpt3D_Clone209_1.java 1 9
Gpt3D_Clone209_1.java 10 22
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.add (num)) {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (unique.contains (num)) {
            unique.remove (num);
        } else {
            unique.add (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
210
1
Gpt3D_Clone210_1.java 1 16
Gpt3D_Clone210_1.java 17 35
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        int count = 0;
        for (int j = 0; j < nums.length; j++) {
            if (test == nums[j]) {
                count++;
            }
        }
        if (count == 1) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
210
2
Gpt3D_Clone210_2.java 1 16
Gpt3D_Clone210_2.java 17 33
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    TreeMap<Integer, Integer> tm = new TreeMap<Integer, Integer>();
    for (int i = 0;
    i < nums.length; i ++) {
        tm.put(nums[i], tm.getOrDefault(nums[i], 0) + 1);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        if (tm.get(nums[i]) == 1) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
210
3
Gpt3D_Clone210_3.java 1 16
Gpt3D_Clone210_3.java 17 33
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();
    for (int i = 0;
    i < nums.length; i ++) {
        hm.put(nums[i], hm.getOrDefault(nums[i], 0) + 1);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        if (hm.get(nums[i]) == 1) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
211
0
Gpt3D_Clone211_0.java 1 16
Gpt3D_Clone211_0.java 17 34
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    HashMap<Integer, Integer> hm = new HashMap<> ();
    for (int i = 0;
    i < nums.length; i ++) {
        hm.put (nums [i], i);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (!hm.containsKey (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
212
0
Gpt3D_Clone212_0.java 1 24
Gpt3D_Clone212_0.java 25 57
----------------------------------------

public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        a = true;
    }
    if (i < len && (str.charAt (i) == '.')) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        b = true;
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i ++;
        c = true;
    }
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        d = true;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------

public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-'))    {
        i ++;
    }
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        a = true;
    }
    if (i < len && (str.charAt (i) == '.')) {
        i ++;
    }
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        b = true;
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i ++;
        c = true;
    }
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) {
        i ++;
        if (c) d = true;
    }
    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        d = true;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
215
0
Gpt3D_Clone215_0.java 1 9
Gpt3D_Clone215_0.java 10 21
----------------------------------------

public static int solution (int X, int [] A) {
    Set < Integer > values = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (values.add (A [i])) X --;
        if (X == 0) return i;
    }
    return - 1;
}
----------------------------------------

public static int solution (int X, int [] A) {
    Set < Integer > values = new HashSet < Integer > ();
    int retVal = -1;
    for (int i = 0; i < A.length; i ++) {
        if (values.add (A [i])) X --;
        if (X == 0) retVal = i;
    }
    return retVal;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
216
0
Gpt3D_Clone216_0.java 1 22
Gpt3D_Clone216_0.java 23 49
----------------------------------------

public static int solution (int X, int [] A) {
    int [] count = new int [X];
    for (int i = 0;
    i < A.length; i ++) {
        try {
            count [A [i] - 1] ++;
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            for (int j = 0;
            j < count.length; j ++) {
                if (count [j] == 0) {
                    break;
                }
                if (j == count.length - 1) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public static int solution (int X, int [] A) {
    int [] cnt = new int [X];
    int result = -1;
    int offset = 0;
    for (int i = 0;
    i < A.length; i ++) {
        try {
            cnt [A [i] + offset - 1] ++;
            offset ++;
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            for (int j = 0;
            j < cnt.length; j ++) {
                if (cnt [j] == 0) {
                    break;
                }
                if (j == cnt.length - 1) {
                    result = i;
                }
            }
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
216
1
Gpt3D_Clone216_1.java 1 22
Gpt3D_Clone216_1.java 23 49
----------------------------------------

public static int solution (int X, int [] A) {
    int [] count = new int [X];
    for (int i = 0;
    i < A.length; i ++) {
        try {
            count [A [i] - 1] ++;
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            for (int j = 0;
            j < count.length; j ++) {
                if (count [j] == 0) {
                    break;
                }
                if (j == count.length - 1) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public static int solution (int X, int [] A) {
    Int [] cnt = new Int [X]; 
    Int cntIdx = 0; 
    int result = -1; 
    for (int i = 0;
    i < A.length; i ++) {
        try {
            cnt [cntIdx] = A[i] - 1; 
            cntIdx ++; 
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            for (int j = 0;
            j < cnt.length; j ++) {
                if (cnt [j] == 0) {
                    break;
                }
                if (j == cnt.length - 1) {
                    result = i; 
                } 
            }
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
216
2
Gpt3D_Clone216_2.java 1 22
Gpt3D_Clone216_2.java 23 49
----------------------------------------

public static int solution (int X, int [] A) {
    int [] count = new int [X];
    for (int i = 0;
    i < A.length; i ++) {
        try {
            count [A [i] - 1] ++;
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            for (int j = 0;
            j < count.length; j ++) {
                if (count [j] == 0) {
                    break;
                }
                if (j == count.length - 1) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public static int solution (int X, int [] A) {
    int [] count = new int [X];
    for (int i = 0;
    i < A.length; i ++) {
        try {
            count [A [i] - 1] ++;
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        if (i >= X - 1) {
            int checker = 0;
            for (int j = 0;
            j < count.length; j ++) {
                if (count [j] == 0) {
                    checker = 0;
                    break;
                }
                checker = 1;
            }
            if (checker == 1) {
                    return i;
                }
            }
        }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
0
Gpt3D_Clone219_0.java 1 9
Gpt3D_Clone219_0.java 10 19
----------------------------------------

public int solution (int X, int [] A) {
    HashSet < Integer > hset = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hset.add (A [i]);
        if (hset.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) {
    Hashtable<Integer, Integer> htbl = new Hashtable<Integer, Integer>();
    for (int i = 0; i < A.length; i++) {
        if (A[i] <= X) htbl.put(A[i], A[i]);
        if (htbl.size() == X) return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
1
Gpt3D_Clone219_1.java 1 9
Gpt3D_Clone219_1.java 10 19
----------------------------------------

public int solution (int X, int [] A) {
    HashSet < Integer > hset = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hset.add (A [i]);
        if (hset.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) {
    HashMap<Integer, Integer> hmap = new HashMap<Integer, Integer>();
    for (int i = 0; i < A.length; i++) {
        if (A[i] <= X) hmap.put(A[i], A[i]);
        if (hmap.size() == X) return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
219
2
Gpt3D_Clone219_2.java 1 9
Gpt3D_Clone219_2.java 10 20
----------------------------------------

public int solution (int X, int [] A) {
    HashSet < Integer > hset = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hset.add (A [i]);
        if (hset.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    HashMap < Integer, Boolean> hmap = new HashMap < Integer, Boolean>();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hmap.put(A[i], true);
        if (hmap.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
221
0
Gpt3D_Clone221_0.java 1 22
Gpt3D_Clone221_0.java 23 42
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0; x < size; x ++) {
        int temp = A [x];
        if (temp <= X && check [temp - 1] == 0) {
            check [temp - 1] = 1;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
223
0
Gpt3D_Clone223_0.java 1 16
Gpt3D_Clone223_0.java 17 34
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public float solution (float X, float [] A) {
    Set < Float > set = new HashSet < Float > ();
    float sum1 = 0, sum2 = 0;
    for (float i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (float i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
224
0
Gpt3D_Clone224_0.java 1 8
Gpt3D_Clone224_0.java 9 20
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) {
    Set<Integer> leaves = new HashSet<>();
    for (int i = 0; i < A.length; i++) {
        leaves.add(A[i]);
        if (X <= leaves.size() && leaves.contains(X)) {
            return i;
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
224
1
Gpt3D_Clone224_1.java 1 8
Gpt3D_Clone224_1.java 9 19
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    Map < Integer, Integer > leaves = new HashMap < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.put (A[i], 1);
        if (leaves.containsKey (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
228
0
Gpt3D_Clone228_0.java 1 9
Gpt3D_Clone228_0.java 10 20
----------------------------------------

public int solution (int X, int [] A) {
    HashSet < Integer > hset = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hset.add (A [i]);
        if (hset.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    HashMap < Integer, Integer > hmap = new HashMap < Integer, Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hmap.put(A[i], A[i]); 
        if (hmap.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
231
0
Gpt3D_Clone231_0.java 1 23
Gpt3D_Clone231_0.java 24 42
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) {
    int len = A.length;
    if (X > len) return -1;
    int[] isFilled = new int[X];
    int jumped = 0;
    for (int i = 0; i < len; i++) {
        int x = A[i];
        if (x <= X) {
            if (isFilled[x - 1] == 0) {
                isFilled[x - 1] = 1;
                jumped += 1;
                if (jumped == X) return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
234
0
Gpt3D_Clone234_0.java 1 18
Gpt3D_Clone234_0.java 19 38
----------------------------------------

public int solution (int X, int [] A) {
    int list [] = A;
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List < Integer > arrayList = new ArrayList < Integer > ();
    for (int iii = 0;
    iii < list.length; iii ++) {
        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {
            sum += list [iii];
            if (sum == sumV) {
                return iii;
            }
            arrayList.add (list [iii]);
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int sum = 0;
    int searchedValue = X;
    int sumV = searchedValue * (searchedValue + 1) / 2;
    List<Integer> seenNums = new ArrayList<Integer>();
    for (int iii = 0;
    iii < A.length; iii ++) {
        int currentVal = A[iii];
        if (currentVal <= searchedValue && ! seenNums.contains (currentVal)) {
            sum += currentVal;
            if (sum == sumV) {
                return iii;
            }
            seenNums.add (currentVal);
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
235
0
Gpt3D_Clone235_0.java 1 9
Gpt3D_Clone235_0.java 10 19
----------------------------------------

public int solution (int X, int [] A) {
    HashSet < Integer > hset = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hset.add (A [i]);
        if (hset.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    HashSet < Integer > hset = new HashSet < Integer > ();
    for (int i = 0; i < A.length; i ++) {
        if (A [i] < X) hset.add (A [i]);
        if (hset.size () == X - 1) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
237
0
Gpt3D_Clone237_0.java 1 22
Gpt3D_Clone237_0.java 23 52
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp == X) {
            cmp ++;
            if (cmp == X) {
                time = x;
                break;
            }
        }
        else if (temp < X) {
            if (check [temp - 1] == 0) {
                check [temp - 1] ++;
                cmp ++;
                if (cmp == X) {
                    time = x;
                    break;
                }
            }
        }       
    }
    return time;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
0
Gpt3D_Clone23_0.java 1 9
Gpt3D_Clone23_0.java 10 23
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        Iterator<Balance> i = this.subAccounts.iterator();
        while (i.hasNext())
        {
            Balance subAccount = i.next();
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
1
Gpt3D_Clone23_1.java 1 9
Gpt3D_Clone23_1.java 10 21
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

public double getSum () {
    double result = 0;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    result = result + this.amount;
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
2
Gpt3D_Clone23_2.java 1 9
Gpt3D_Clone23_2.java 10 21
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (int i = 0; i < this.subAccounts.length; i++) {
            Balance subAccount = this.subAccounts[i];
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
23
3
Gpt3D_Clone23_3.java 1 9
Gpt3D_Clone23_3.java 10 21
----------------------------------------

public double getSum () {
    double result = this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

public double getSum () {
    double result = 0;
    result = result + this.amount;
    if (this.subAccounts != null) {
        for (Balance subAccount : this.subAccounts) {
            result = result + subAccount.getSum ();
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
240
2
Gpt3D_Clone240_2.java 1 9
Gpt3D_Clone240_2.java 10 21
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

int solution(int X, int[] A) {
    Set<Integer> leaves = new HashSet<>();
    for (int i = 0; i < A.length; i++) {
        if (A[i] <= X)
            leaves.add(A[i]);
        if (leaves.contains(X) && leaves.size() == X) 
            return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
242
2
Gpt3D_Clone242_2.java 1 9
Gpt3D_Clone242_2.java 10 20
----------------------------------------

public int solution (int X, int [] A) {
    HashSet < Integer > hset = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hset.add (A [i]);
        if (hset.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    HashMap <Integer, Integer> hmap = new HashMap <Integer, Integer> ();
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= X) hmap.put (A [i], i);
        if (hmap.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
244
0
Gpt3D_Clone244_0.java 1 22
Gpt3D_Clone244_0.java 23 42
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    int time = - 1;
    for (int x = 0;
    x < size; x ++) {
        int temp = A [x];
        if (temp <= X) {
            if (check [temp - 1] > 0) {
                continue;
            }
            check [temp - 1] ++;
            cmp ++;
        }
        if (cmp == X) {
            time = x;
            break;
        }
    }
    return time;
}
----------------------------------------

public int solution (int X, int [] A) {
    int size = A.length;
    int [] check = new int [X];
    int cmp = 0;
    for (int x = 0; x < size; x ++) {
        int temp = A [x];
        if (temp <= X && check [temp - 1]++ == 0) {
            cmp ++;
            if (cmp == X) {
				break;;
            }
        }
    }
    if(cmp == X)
        return x;
    else
        return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
245
0
Gpt3D_Clone245_0.java 1 23
Gpt3D_Clone245_0.java 24 44
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return -1;
    }
    int [] isFilled = new int[X];
    int jumped = 0;
    for (int i = 0; i < len; i++){
        int x = A[i];
        if (x <= X && isFilled[x-1] == 0) {
            isFilled[x-1] = 1;
            jumped++;
            if (jumped == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
246
0
Gpt3D_Clone246_0.java 1 16
Gpt3D_Clone246_0.java 17 36
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) {
	Set<Integer> set = new HashSet<Integer>();
	int sum1 = 0, sum2 = 0;
	for (int i = 0; i <= X; i++) {
		sum1 += i;
	}
	for (int i = 0; i < A.length; i++) {
		if (set.contains(A[i])) {
			continue;
		}
		set.add(A[i]);
		sum2 += A[i];
		if (sum1 == sum2) {
			return i;
		}
	}
	return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
246
1
Gpt3D_Clone246_1.java 1 16
Gpt3D_Clone246_1.java 17 36
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) { 
    Set<Integer> set = new HashSet<Integer>(); 
    int sum1 = 0; 
    int sum2 = 0; 
    for (int i = 0; i <= X; i++) { 
        sum1 += i; 
    } 
    for (int i = 0; i < A.length; i++) { 
        if (!set.contains(A[i])) { 
            set.add(A[i]); 
            sum2 += A[i]; 
            if (sum1 == sum2) { 
                return i; 
            } 
        } 
    } 
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
246
2
Gpt3D_Clone246_2.java 1 16
Gpt3D_Clone246_2.java 17 34
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int[] A) {
	Set<Integer> set = new HashSet<Integer>();
	int sum1 = 0, sum2 = 0;
	for (int i = 0; i <= X; i++) {
		sum1 = sum1 + i;
	}
	for (int i = 0; i < A.length; i++) {
		if (set.contains(A[i])) continue;
		set.add(A[i]);
		sum2 = sum2 + A[i];
		if (sum1 == sum2) {
			return i;
		}
	}
	return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
246
3
Gpt3D_Clone246_3.java 1 16
Gpt3D_Clone246_3.java 17 35
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) { 
    Set<Integer> set = new HashSet<Integer>(); 
    int sum1 = 0; 
    int sum2 = 0; 
    for (int i = 0; i <= X; i++) { 
        sum1 += i; 
    } 
    for (int i = 0; i < A.length; i++) { 
        if (set.add(A[i])) { 
            sum2 += A[i]; 
            if (sum1 == sum2) { 
                return i; 
            } 
        } 
    } 
    return -1; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
247
0
Gpt3D_Clone247_0.java 1 9
Gpt3D_Clone247_0.java 10 20
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public long solution (long X, long [] A) {
    Set < Long > leaves = new HashSet < > ();
    for (long i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
247
1
Gpt3D_Clone247_1.java 1 9
Gpt3D_Clone247_1.java 10 20
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public float solution (float X, float [] A) {
    Set < Float > leaves = new HashSet < > ();
    for (float i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
24
0
Gpt3D_Clone24_0.java 1 12
Gpt3D_Clone24_0.java 13 32
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            DataFlavor[] dataFlavors = t.getTransferDataFlavors ();
            for (int i = 0; i < dataFlavors.length; i++) {
                DataFlavor dataFlavor = dataFlavors[i];
                if( dataFlavor.equals (DataFlavor.stringFlavor)) {
                    String str = (String) t.getTransferData (DataFlavor.stringFlavor);
                    importString (c, str);
                    return true;    
                }
            }
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
24
1
Gpt3D_Clone24_1.java 1 12
Gpt3D_Clone24_1.java 13 28
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

public boolean importData (JComponent c, Transferable t){
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            reader = new InputStreamReader ((InputStream) t.getTransferData (DataFlavor.stringFlavor));
            BufferedReader bufferedReader = new BufferedReader (reader);
            String str = bufferedReader.readLine ();
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
24
2
Gpt3D_Clone24_2.java 1 12
Gpt3D_Clone24_2.java 13 26
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    boolean imported = false;
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            imported = importString (c, str);
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return imported;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
24
3
Gpt3D_Clone24_3.java 1 12
Gpt3D_Clone24_3.java 13 26
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            importString (c, str);
            return true;
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return false;
}
----------------------------------------

public boolean importData (JComponent c, Transferable t) {
    boolean imported = false;
    if (canImport (c, t.getTransferDataFlavors ())) {
        try {
            String str = (String) t.getTransferData (DataFlavor.stringFlavor);
            imported = doImportString (c, str);
        } catch (UnsupportedFlavorException ufe) {
        } catch (IOException ioe) {
        }
    }
    return imported;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
0
Gpt3D_Clone252_0.java 1 16
Gpt3D_Clone252_0.java 17 38
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
    sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) {
            continue;
        }
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
1
Gpt3D_Clone252_1.java 1 16
Gpt3D_Clone252_1.java 17 35
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] C) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0;
    int sum2 = 0;
    for (int i = 0;
    i <= X; i++) {
        sum1 += i;
    }
    for (int i = 0;
    i < C.length; i++) {
        sum2 += C [i];
        if (set.contains (C [i])) continue;
        set.add (C [i]);
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
252
2
Gpt3D_Clone252_2.java 1 16
Gpt3D_Clone252_2.java 17 36
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) 
        sum1 += i;
    for (int i = 0;
    i < A.length; i ++) {
        if (!set.contains (A [i])) {
            set.add (A [i]);
            sum2 += A [i];
            if (sum1 == sum2) {
                return i;
            }
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
253
1
Gpt3D_Clone253_1.java 1 9
Gpt3D_Clone253_1.java 10 21
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) {
    Set<Integer> leaves = new HashSet<Integer>();
    for (int i = 0; i < A.length; i++) {
        if (A[i] <= X)
            leaves.add(A[i]);
        if (leaves.contains(X) && leaves.size() == X)
            return i;
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
254
0
Gpt3D_Clone254_0.java 1 15
Gpt3D_Clone254_0.java 16 27
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > emptyPosition = new HashSet < Integer > ();
    for (int i = 1;
    i <= X; i ++) {
        emptyPosition.add (i);
    }
    for (int i = 0;
    i < A.length; i ++) {
        emptyPosition.remove (A [i]);
        if (emptyPosition.size () == 0) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

public int solution (final int X, final int [] A) {
    Set < Integer > presentPosition = new HashSet < Integer > ();
    for (int i = 0; i < A.length; i ++) {
        presentPosition.add (A [i]);
        if (presentPosition.size () == X) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
25
0
Gpt3D_Clone25_0.java 1 13
Gpt3D_Clone25_0.java 14 25
----------------------------------------

protected void cleanup (JComponent c, boolean remove) {
    JTable source = (JTable) c;
    if (remove && rows != null) {
        DefaultTableModel model = (DefaultTableModel) source.getModel ();
        for (int i = rows.length - 1;
        i >= 0; i --) {
            model.removeRow (rows [i]);
        }
    }
    rows = null;
    addCount = 0;
    addIndex = - 1;
}
----------------------------------------

protected void cleanUp(JComponent c, boolean remove) {
   JTable source = (JTable) c;
   if (remove && rows != null) {
      DefaultTableModel model = (DefaultTableModel) source.getModel();
      for (int i = rows.length - 1; i >= 0; i--) {
          model.removeRow(rows[i]);
      }
   }
   rowsUpdate();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
262
0
Gpt3D_Clone262_0.java 1 23
Gpt3D_Clone262_0.java 24 46
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int[X];
    int jumped = 0;
    for (int i = 0;
    i < len; i++) {
        if (A[i] <= X) {
            if (isFilled[A[i] - 1] != 1) {
                isFilled[A[i] - 1] = 1;
                jumped++;
            }
            if (jumped == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
262
1
Gpt3D_Clone262_1.java 1 23
Gpt3D_Clone262_1.java 24 44
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    Arrays.fill (isFilled, 0);
    for (int i = 0;
    i < len; i ++) {
        int x = A [i];
        if (x <= X) {
            if (isFilled [x - 1] == 0) {
                isFilled [x - 1] = 1;
                jumped += 1;
                if (jumped == X) {
                    return i;
                }
            }
        }
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    int len = A.length;
    if (X > len) {
        return - 1;
    }
    int [] isFilled = new int [X];
    int jumped = 0;
    for (int i = 0;
    i < len; i++) {
        if (isFilled[A[i] - 1] != 1) {
            isFilled[A[i] - 1] = 1;
            jumped++;
            if (jumped == X) {
                return i;
            }
        }
    }
    return -1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
263
0
Gpt3D_Clone263_0.java 1 16
Gpt3D_Clone263_0.java 17 38
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        set.add (A [i]);
        sum2 += A [i];
        if (sum1 == sum2) return i;
    }
    return - 1;
}
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > set = new HashSet < Integer > ();
    int sum1 = 0, sum2 = 0;
    for (int i = 0;
    i <= X; i ++) {
        sum1 += i;
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (set.contains (A [i])) continue;
        
        sum2 += A [i];
        if (sum1 == sum2 && A[i] <= X) {
            set.add (A [i]);
            return i;
        }
    }
    return - 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
266
0
Gpt3D_Clone266_0.java 1 9
Gpt3D_Clone266_0.java 10 21
----------------------------------------

public int solution (int X, int [] A) {
    Set < Integer > leaves = new HashSet < > ();
    for (int i = 0;
    i < A.length; i ++) {
        leaves.add (A [i]);
        if (leaves.contains (X) && leaves.size () == X) return i;
    }
    return - 1;
}
----------------------------------------

public int solution(int X, int[] A) { 
	Set<Integer> leaves = new HashSet<>(); 
	for (int i = 0; i < A.length; ++i) { 
		leaves.add(A[i]); 
		if (leaves.size() == X && leaves.contains(X)) { 
			return i; 
		} 
	} 
	return -1; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
270
0
Gpt3D_Clone270_0.java 1 18
Gpt3D_Clone270_0.java 19 38
----------------------------------------

static boolean isImmutable (Object obj) {
    Class < ? > objClass = obj.getClass ();
    Class < ? > superClass = objClass.getSuperclass ();
    if (! Immutable.class.equals (superClass)) {
        return false;
    }
    if (! Modifier.isFinal (objClass.getModifiers ())) {
        return false;
    }
    Field [] objFields = objClass.getDeclaredFields ();
    for (int i = 0;
    i < objFields.length; i ++) {
        if (! Modifier.isFinal (objFields [i].getModifiers ()) || ! isValidFieldType (objFields [i].getType ())) {
            return false;
        }
    }
    return true;
}
----------------------------------------

static boolean isImmutable (Object obj) {
    Class < ? > objClass = obj.getClass ();
    Class < ? > superClass = objClass.getSuperclass ();
    if (!Immutable.class.equals (superClass)) {
        return false;
    }
    if (!Modifier.isFinal(objClass.getModifiers())) {
        return false;
    }
    for (int i = 0;
    i < objClass.getDeclaredFields().length; i++) {
        Field objFields = objClass.getDeclaredFields()[i];
        if (!Modifier.isFinal(objFields.getModifiers()) || !isValidFieldType(objFields.getType())) {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
271
0
Gpt3D_Clone271_0.java 1 11
Gpt3D_Clone271_0.java 12 22
----------------------------------------

private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    SimpleDateFormat dateFormatUtc = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    dateFormatUtc.setTimeZone (TimeZone.getTimeZone ("UTC"));
    SimpleDateFormat dateFormatLocal = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    savedDate = dateFormatLocal.parse (dateFormatUtc.format (savedDate));
    Date dateTimeNow = dateFormatLocal.parse (dateFormatUtc.format (new Date ()));
    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);
    Date expiresDate = new Date (expires);
    System.out.println ("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expiresDate);
    return savedDate.before (expiresDate);
}
----------------------------------------

private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    SimpleDateFormat dateFormatUtc = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    Date dateTimeNow = dateFormatUtc.parse (dateFormatUtc.format (new Date ()));
    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);
    Date expiresDate = new Date (expires);
    savedDate = dateFormatUtc.parse (dateFormatUtc.format (savedDate));
    System.out.println ("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expiresDate);
    return savedDate.before (expiresDate);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
271
1
Gpt3D_Clone271_1.java 1 11
Gpt3D_Clone271_1.java 12 22
----------------------------------------

private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    SimpleDateFormat dateFormatUtc = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    dateFormatUtc.setTimeZone (TimeZone.getTimeZone ("UTC"));
    SimpleDateFormat dateFormatLocal = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    savedDate = dateFormatLocal.parse (dateFormatUtc.format (savedDate));
    Date dateTimeNow = dateFormatLocal.parse (dateFormatUtc.format (new Date ()));
    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);
    Date expiresDate = new Date (expires);
    System.out.println ("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expiresDate);
    return savedDate.before (expiresDate);
}
----------------------------------------

private static boolean hasDateExpired (int days, java.util.Date savedDate) throws ParseException {
    SimpleDateFormat dateFormat = new SimpleDateFormat ("yyyy-MMM-dd HH:mm:ss");
    Date dateTimeNow = dateFormat.parse (dateFormat.format (new Date ()));
    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);
    Date expiresDate = new Date (expires);
    savedDate = dateFormat.parse (dateFormat.format (savedDate));
    System.out.println ("savedDate \t\t" + savedDate + "\nexpiresDate \t" + expiresDate);
    return savedDate.before (expiresDate);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
277
0
Gpt3D_Clone277_0.java 1 10
Gpt3D_Clone277_0.java 11 20
----------------------------------------

boolean isBinaryFile (File f) throws IOException {
    String type = Files.probeContentType (f.toPath ());
    if (type == null) {
        return true;
    } else if (type.startsWith ("text")) {
        return false;
    } else {
        return true;
    }
}
----------------------------------------

boolean isBinaryFile (File f) throws IOException {
    String type = Files.probeContentType (f.toPath ());
    if (type == null || type.startsWith ("text")) {
        return false;
    } else {
        return true;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
278
0
Gpt3D_Clone278_0.java 1 25
Gpt3D_Clone278_0.java 26 46
----------------------------------------

public Key secondMaxKey () {
    if (size () < 2) {
        return null;
    }
    Node max = null;
    Node max_2 = null;
    Node second = first.next;
    if (first.key.compareTo (second.key) > 0) {
        max = first;
        max_2 = second;
    } else {
        max = second;
        max_2 = first;
    }
    for (Node x = second.next;
    x != null; x = x.next) {
        if (x.key.compareTo (max.key) > 0) {
            max_2 = max;
            max = x;
        } else if ((x.key.compareTo (max_2.key) > 0) && (x.key.compareTo (max.key) < 0)) {
            max_2 = x;
        }
    }
    return max_2.key;
}
----------------------------------------

public Key secondMaxKey() {
    if (size() < 2) {
        return null;
    }
    Node max = null;
    Node second = first.next;
    if (first.key.compareTo(second.key) > 0) {
        max = first;
    } else {
        max = second;
    }
    Node max_2 = null;
    for (Node x = second.next; x != null; x = x.next) {
        if ((x.key.compareTo(max.key) > 0) && (x.key.compareTo(max_2.key) > 0)) {
            max_2 = x;
        }
    }
    return max_2.key;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
27
0
Gpt3D_Clone27_0.java 1 9
Gpt3D_Clone27_0.java 10 25
----------------------------------------

static String transpose (String s, int rows, int columns) {
    int n = s.length ();
    if (rows * columns != n) throw new IllegalArgumentException ();
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n - 1; i ++) sb.append (s.charAt (i * columns % (n - 1)));
    sb.append (s.charAt (n - 1));
    return sb.toString ();
}
----------------------------------------

static String transpose (String s, int rows, int columns) {
    int n = s.length ();
    if (rows * columns != n) throw new IllegalArgumentException ();
    StringBuilder sb = new StringBuilder (); 
    int j = 0; 
    for (int i = 0; i < n - 1; i ++){ 
        sb.append (s.charAt (j));
        j += columns;
        if (j >= n)
        j -= (n-1); 
    }
    sb.append (s.charAt (n - 1)); 
    return sb.toString (); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
27
1
Gpt3D_Clone27_1.java 1 9
Gpt3D_Clone27_1.java 10 24
----------------------------------------

static String transpose (String s, int rows, int columns) {
    int n = s.length ();
    if (rows * columns != n) throw new IllegalArgumentException ();
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n - 1; i ++) sb.append (s.charAt (i * columns % (n - 1)));
    sb.append (s.charAt (n - 1));
    return sb.toString ();
}
----------------------------------------

static String transpose (String s, int rows, int columns) {
    int n = s.length ();
    if (rows * columns != n) throw new IllegalArgumentException ();
    StringBuilder sb = new StringBuilder (); 
    int j; 
    for (int i = 0; i < n - 1; i ++){ 
        j = i*columns;
        if (j >= n) j -= (n-1); 
        sb.append (s.charAt (j)); 
    }
    sb.append (s.charAt (n - 1)); 
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
27
3
Gpt3D_Clone27_3.java 1 9
Gpt3D_Clone27_3.java 10 23
----------------------------------------

static String transpose (String s, int rows, int columns) {
    int n = s.length ();
    if (rows * columns != n) throw new IllegalArgumentException ();
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n - 1; i ++) sb.append (s.charAt (i * columns % (n - 1)));
    sb.append (s.charAt (n - 1));
    return sb.toString ();
}
----------------------------------------

static String transpose(String s, int rows, int columns) {
    int n = s.length();
    if (rows * columns != n) {
        throw new IllegalArgumentException();
    }
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < n - 1; i++) {
        sb.append(s.charAt(i * columns % (n - 1)));
    }
    sb.append(s.charAt(n - 1));
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
287
0
Gpt3D_Clone287_0.java 1 14
Gpt3D_Clone287_0.java 15 31
----------------------------------------

public static String [] tokenizer (String text, String [] delims) {
    for (String delim : delims) {
        int i = text.indexOf (delim);
        if (i >= 0) {
            String [] tail = tokenizer (text.substring (i + delim.length ()), delims);
            String [] list = new String [tail.length + 2];
            list [0] = text.substring (0, i);
            list [1] = delim;
            System.arraycopy (tail, 0, list, 2, tail.length);
            return list;
        }
    }
    return new String [] {text};
}
----------------------------------------

public static String [] tokenizer3 (String text, String [] delims) { 
    for (String delim : delims) { 
        int i = text.indexOf (delim); 
        if (i != -1) { 
            int size = delims.length + 2; 
            String [] tail = tokenizer3 (text.substring (i + delim.length ()), delims); 
            String [] list = new String [size]; 
            list [0] = text.substring (0, i); 
            list [1] = delim; 
            System.arraycopy (tail, 0, list, 2, tail.length); 
            return list; 
        } 
    } 
    return new String [] {text}; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
28
0
Gpt3D_Clone28_0.java 1 11
Gpt3D_Clone28_0.java 12 27
----------------------------------------

public Speedo manage (int speed) {
    if (speed < getLowRange ()) {
        onLowTransition ();
        return getLowState ();
    } else if (speed > getHighRange ()) {
        onHighTransition ();
        return getHighState ();
    } else {
        return this;
    }
}
----------------------------------------

public Speedo manage (int speed) {
    if (speed < getLowRange ()) {
        onLowTransition ();
    } else if (speed > getHighRange ()) {
        onHighTransition ();
    } 
    if (speed < getLowRange ()) {
        return getLowState ();
    } else if (speed > getHighRange ()) {
        return getHighState ();
    } else {
        return this;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
28
1
Gpt3D_Clone28_1.java 1 11
Gpt3D_Clone28_1.java 12 22
----------------------------------------

public Speedo manage (int speed) {
    if (speed < getLowRange ()) {
        onLowTransition ();
        return getLowState ();
    } else if (speed > getHighRange ()) {
        onHighTransition ();
        return getHighState ();
    } else {
        return this;
    }
}
----------------------------------------

public Speedo manage (int speed) {
    if (speed < getLowRange()) {
        return processLow(speed);
    } else if (speed > getHighRange()) {
        return processHigh(speed);
    } else {
        return this;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
293
0
Gpt3D_Clone293_0.java 1 16
Gpt3D_Clone293_0.java 17 35
----------------------------------------

public int solution (int N) {
    String binary = Integer.toString (N, 2);
    int largestGap = 0;
    for (int i = 1, gap = 0;
    i < binary.length (); i ++) {
        while (i < binary.length () && binary.charAt (i) == '0') {
            i ++;
            gap ++;
        }
        if (gap > largestGap && i < binary.length ()) {
            largestGap = gap;
        }
        gap = 0;
    }
    return largestGap;
}
----------------------------------------

public int solution (int N) {
    String binary = Integer.toString (N, 2);
    int largestGap = 0;
    int gap = 0;
    int i = 1;
    while (i < binary.length ()) {
        if (binary.charAt (i) == '0') {
            gap ++; 
            i ++;                     
        }
        if (gap > largestGap && i < binary.length ()) {
            largestGap = gap;
        }                                                   
        gap = 0;
    }
    return largestGap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
293
1
Gpt3D_Clone293_1.java 1 16
Gpt3D_Clone293_1.java 17 33
----------------------------------------

public int solution (int N) {
    String binary = Integer.toString (N, 2);
    int largestGap = 0;
    for (int i = 1, gap = 0;
    i < binary.length (); i ++) {
        while (i < binary.length () && binary.charAt (i) == '0') {
            i ++;
            gap ++;
        }
        if (gap > largestGap && i < binary.length ()) {
            largestGap = gap;
        }
        gap = 0;
    }
    return largestGap;
}
----------------------------------------

public int solution (int N) {
    String binary = Integer.toString (N, 2);
    int largestGap = 0;
    int gap = 0;
    for (int i = 1; i < binary.length (); i ++) {
        if (binary.charAt (i) == '0') {
            gap ++;
        }
        if (gap > largestGap && i < binary.length ()) {
            largestGap = gap;
        }
        gap = 0;
    }
    return largestGap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
294
2
Gpt3D_Clone294_2.java 1 10
Gpt3D_Clone294_2.java 11 21
----------------------------------------

public static int solution (Integer number) {
    String binary = Integer.toBinaryString (number);
    String [] gaps = binary.split ("1");
    String biggestGap = "";
    for (int i = 0;
    i < (binary.endsWith ("1") ? gaps.length : gaps.length - 1); i ++) {
        if (gaps [i].contains ("0") && gaps [i].length () > biggestGap.length ()) biggestGap = gaps [i];
    }
    return biggestGap.length ();
}
----------------------------------------

public static int solution (Integer number) {
    String binary = Integer.toBinaryString (number);
    String [] gaps = binary.split ("1");
    String biggestGap = "";
    for (int i = 0; i < gaps.length; i ++) {
        if (gaps [i].contains ("0") && gaps [i].length () > biggestGap.length () && i != gaps.length-1) biggestGap = gaps [i];
    }
    return biggestGap.length ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
298
0
Gpt3D_Clone298_0.java 1 10
Gpt3D_Clone298_0.java 11 26
----------------------------------------

private static int solution (int N) {
    int gap = 0;
    String binaryStr = Integer.toBinaryString (N);
    String [] zeroArrays = binaryStr.split ("1");
    System.out.println (Arrays.toString (zeroArrays));
    for (String zeroArray : zeroArrays) {
        gap = zeroArray.length () > gap ? zeroArray.length () : gap;
    }
    return gap;
}
----------------------------------------

private static int solution (int N) {
    int gap = 0;
    String binaryStr = Integer.toBinaryString (N);
    String [] zeroArrays = binaryStr.split ("1");
    String [] oneArrays = binaryStr.split("0");
    System.out.println (Arrays.toString (zeroArrays) + Arrays.toString (oneArrays));
    for (String zeroArray : zeroArrays) {
        gap = zeroArray.length () > gap ? zeroArray.length () : gap;
    }
    for (String oneArray : oneArrays) {
        gap = oneArray.length () > gap ? oneArray.length () : gap;
    }
    return gap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
298
1
Gpt3D_Clone298_1.java 1 10
Gpt3D_Clone298_1.java 11 26
----------------------------------------

private static int solution (int N) {
    int gap = 0;
    String binaryStr = Integer.toBinaryString (N);
    String [] zeroArrays = binaryStr.split ("1");
    System.out.println (Arrays.toString (zeroArrays));
    for (String zeroArray : zeroArrays) {
        gap = zeroArray.length () > gap ? zeroArray.length () : gap;
    }
    return gap;
}
----------------------------------------

private static int solution (int N) {
    int maxGap = 0;
    String binaryStr = Integer.toBinaryString (N);
    System.out.println ("split using binaryString " + binaryStr);
    String [] zeroArrays = binaryStr.split ("1");
    for (int i=0; i<zeroArrays.length; i++) {
        int currentGap = zeroArrays[i].length;
        if (currentGap > maxGap)
            maxGap = currentGap;
    }
    return maxGap;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
298
2
Gpt3D_Clone298_2.java 1 10
Gpt3D_Clone298_2.java 11 25
----------------------------------------

private static int solution (int N) {
    int gap = 0;
    String binaryStr = Integer.toBinaryString (N);
    String [] zeroArrays = binaryStr.split ("1");
    System.out.println (Arrays.toString (zeroArrays));
    for (String zeroArray : zeroArrays) {
        gap = zeroArray.length () > gap ? zeroArray.length () : gap;
    }
    return gap;
}
----------------------------------------

private static int solution (int N) {
    int result = 0;
    String binaryStr = Integer.toBinaryString (N);
    String [] zeroArrays = binaryStr.split ("1");
    System.out.println (binaryStr);
    for (String zeroArray : zeroArrays) {
        if (zeroArray.length() > result) 
            result = zeroArray.length();
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
299
0
Gpt3D_Clone299_0.java 1 15
Gpt3D_Clone299_0.java 16 33
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

public int solution (int N) {
    int result = 0;
    int temp = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            if (temp > result) result = temp;
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
29
0
Gpt3D_Clone29_0.java 1 12
Gpt3D_Clone29_0.java 13 26
----------------------------------------

char wf () {
    Scanner input = new Scanner (System.in);
    System.out.println ("What is your choice? (x/o)");
    if (input.findInLine (".") != null) {
        choice = input.findInLine (".").charAt (0);
        while (choice != 'x' && choice != 'o') {
            System.out.println ("You must enter x or o!");
            choice = input.findInLine (".").charAt (0);
        }
    }
    return choice;
}
----------------------------------------

char wf() {
    Scanner input = new Scanner (System.in);
    System.out.println ("What is your choice? (x/o)");
    if (input.hasNext()) {
        choice = input.next().charAt (0);
        while (choice != 'x' && choice != 'o') {
            System.out.println ("You must enter x or o!");
            choice = input.next().charAt (0);
        }
    }
    return choice;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
29
1
Gpt3D_Clone29_1.java 1 12
Gpt3D_Clone29_1.java 13 26
----------------------------------------

char wf () {
    Scanner input = new Scanner (System.in);
    System.out.println ("What is your choice? (x/o)");
    if (input.findInLine (".") != null) {
        choice = input.findInLine (".").charAt (0);
        while (choice != 'x' && choice != 'o') {
            System.out.println ("You must enter x or o!");
            choice = input.findInLine (".").charAt (0);
        }
    }
    return choice;
}
----------------------------------------

char wf() {
    Scanner input = new Scanner (System.in);
    System.out.println ("What is your choice? (x/o)");
    if (input.hasNext()) {
        choice = input.nextLine().charAt (0);
        while (choice != 'x' && choice != 'o') {
            System.out.println ("You must enter x or o!");
            choice = input.nextLine().charAt (0);
        }
    }
    return choice;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
2
0
Gpt3D_Clone2_0.java 1 11
Gpt3D_Clone2_0.java 12 28
----------------------------------------

public void copyFolder (File src, File dest) throws IOException {
    try (Stream < Path > stream = Files.walk (src.toPath ())) {
        stream.forEachOrdered (sourcePath -> {
            try {
                Files.copy (sourcePath, src.toPath ().resolve (dest.toPath ().relativize (sourcePath)));
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    }
}
----------------------------------------

public void copyFolder (File src, File dest) throws IOException {
    Stream < Path > stream; 
    try {
        stream = Files.walk (src.toPath ());
        stream.forEachOrdered (sourcePath -> {
            try {
                Files.copy (sourcePath, src.toPath ().resolve (dest.toPath ().relativize (sourcePath)));
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
300
0
Gpt3D_Clone300_0.java 1 15
Gpt3D_Clone300_0.java 16 36
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

public int solution (int N) {
    int result = 0;
    int r = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            r = 0;
            N>>= 1;
            while ((N > 0) && ((N & 1) == 0)) {
                r ++;
                N>>= 1;
            }
            result = Math.max (result, r);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
301
0
Gpt3D_Clone301_0.java 1 15
Gpt3D_Clone301_0.java 16 34
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if (N & 1 == 1) {
            int temp = 0;
            N>>= 1;
            while (N > 0 && (N & 1) != 1) {
                temp++;
                N>>= 1;
            }
            result = Math.max (result, temp); 
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
301
1
Gpt3D_Clone301_1.java 1 15
Gpt3D_Clone301_1.java 16 31
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if ((N & 1) == 1) {
            int temp = 0;
            while ((N>>= 1) > 0 && ((N & 1) != 1)) {
                temp ++;
            }
            result = Math.max (result, temp);
        } else {
            N>>= 1;
        }
    }
    return result;
}
----------------------------------------

public int solution (int N) {
    int result = 0;
    while (N > 0) {
        if (N & 1 == 1) {
            int temp = 0;
            while (N>>= 1 > 0 && (N & 1) != 1) {
                temp++;
            }
            result = Math.max (result, temp);
        }
        N>>= 1;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
303
3
Gpt3D_Clone303_3.java 1 10
Gpt3D_Clone303_3.java 11 22
----------------------------------------

public int loneSum (int a, int b, int c) {
    int sum = 0;
    boolean ab = a != b;
    boolean ac = a != c;
    boolean bc = b != c;
    if (ab && ac) sum += a;
    if (ab && bc) sum += b;
    if (bc && ac) sum += c;
    return sum;
}
----------------------------------------

public int loneSum (int a, int b, int c) {
    int sum = 0;
    boolean ab = a != b;
    boolean ac = a != c;
    boolean bc = b != c;
    if (!ab && !ac) sum += a;
    if (!ab && !bc) sum += b;
    if (!bc && !ac) sum += c;
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
304
0
Gpt3D_Clone304_0.java 1 16
Gpt3D_Clone304_0.java 17 35
----------------------------------------

public static void main (String [] args) {
    InputStream is = StringFromFileFast.class.getResourceAsStream ("file.txt");
    InputStreamReader input = new InputStreamReader (is);
    final int CHARS_PER_PAGE = 5000;
    final char [] buffer = new char [CHARS_PER_PAGE];
    StringBuilder output = new StringBuilder (CHARS_PER_PAGE);
    try {
        for (int read = input.read (buffer, 0, buffer.length);
        read != - 1; read = input.read (buffer, 0, buffer.length)) {
            output.append (buffer, 0, read);
        }
    } catch (IOException ignore) {
    }
    String text = output.toString ();
    System.out.println (text);
}
----------------------------------------

public static void main (String [] args) {
    InputStream is = StringFromFileFast.class.getResourceAsStream ("file.txt");
    InputStreamReader input = new InputStreamReader (is);
    final int CHARS_PER_PAGE = 5000;
    final char [] buffer = new char [CHARS_PER_PAGE];
    StringBuilder output = new StringBuilder (CHARS_PER_PAGE);
    try {
        int read;
        do{
            read = input.read (buffer, 0, buffer.length);
            output.append (buffer, 0, read);
        }while(read != -1);
    } catch (IOException ignore) {
    }
    String text = output.toString ();
    System.out.println (text);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
305
1
Gpt3D_Clone305_1.java 1 10
Gpt3D_Clone305_1.java 11 25
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    try (ByteArrayOutputStream result = new ByteArrayOutputStream ()) {
        byte [] buffer = new byte [1024];
        int length;
        while ((length = inputStream.read (buffer)) != - 1) {
            result.write (buffer, 0, length);
        }
        return result.toString (UTF_8);
    }
}
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    ByteArrayOutputStream result = new ByteArrayOutputStream ();
    try {
        byte [] buffer = new byte [1024];
        int length;
        while ((length = inputStream.read (buffer)) != - 1) {
            result.write (buffer, 0, length);
        }
    } finally {
        result.close ();
    }
    return result.toString (UTF_8);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
305
2
Gpt3D_Clone305_2.java 1 10
Gpt3D_Clone305_2.java 11 21
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    try (ByteArrayOutputStream result = new ByteArrayOutputStream ()) {
        byte [] buffer = new byte [1024];
        int length;
        while ((length = inputStream.read (buffer)) != - 1) {
            result.write (buffer, 0, length);
        }
        return result.toString (UTF_8);
    }
}
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    try (ByteArrayOutputStream result = new ByteArrayOutputStream ()) {
        int length;
        while ((length = inputStream.read ()) != - 1) {
            result.write (length, 0, 1);
        }
        return result.toString (UTF_8);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
305
3
Gpt3D_Clone305_3.java 1 10
Gpt3D_Clone305_3.java 11 21
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    try (ByteArrayOutputStream result = new ByteArrayOutputStream ()) {
        byte [] buffer = new byte [1024];
        int length;
        while ((length = inputStream.read (buffer)) != - 1) {
            result.write (buffer, 0, length);
        }
        return result.toString (UTF_8);
    }
}
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    try (ByteArrayOutputStream result = new ByteArrayOutputStream ()) {
        int data;
        while ((data = inputStream.read ()) != - 1) {
            result.write (data);
        }
        return result.toString (UTF_8);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
307
0
Gpt3D_Clone307_0.java 1 12
Gpt3D_Clone307_0.java 13 30
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    String newLine = System.getProperty ("line.separator");
    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));
    StringBuilder result = new StringBuilder (UTF_8);
    String line;
    boolean flag = false;
    while ((line = reader.readLine ()) != null) {
        result.append (flag ? newLine : "").append (line);
        flag = true;
    }
    return result.toString ();
}
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    String newLine = System.getProperty ("line.separator");
    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));
    StringBuilder result = new StringBuilder (UTF_8);
    String line;
    boolean flag = false;
    while (true) {
        line = reader.readLine ();
        if (line == null) {
            break;
        }
        result.append (flag ? newLine : "").append (line);
        flag = true;
    }
    return result.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
307
1
Gpt3D_Clone307_1.java 1 12
Gpt3D_Clone307_1.java 13 30
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    String newLine = System.getProperty ("line.separator");
    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));
    StringBuilder result = new StringBuilder (UTF_8);
    String line;
    boolean flag = false;
    while ((line = reader.readLine ()) != null) {
        result.append (flag ? newLine : "").append (line);
        flag = true;
    }
    return result.toString ();
}
----------------------------------------

public String inputStreamToString (InputStream inputStream) throws IOException {
    String newLine = System.getProperty ("line.separator");
    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));
    StringBuilder result = new StringBuilder (UTF_8);
    String line;
    boolean flag = false;
    for (;;) {
        line = reader.readLine ();
        if (line == null) {
            break;
        }
        result.append (flag ? newLine : "").append (line);
        flag = true; 
    }
    return result.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
308
0
Gpt3D_Clone308_0.java 1 12
Gpt3D_Clone308_0.java 13 26
----------------------------------------

public static void main (String [] args) {
    String needle = "ABC";
    String haystack = "ABCDSGDABCSAGAABCCCCAAABAABC";
    int numberOfOccurences = 0;
    int index = haystack.indexOf (needle);
    while (index != - 1) {
        numberOfOccurences ++;
        haystack = haystack.substring (index + needle.length ());
        index = haystack.indexOf (needle);
    }
    System.out.println ("" + numberOfOccurences);
}
----------------------------------------

public static void main (String [] args) {
    String needle = "ABC";
    String haystack = "ABCDSGDABCSAGAABCCCCAAABAABC";
    int numberOfOccurences = 0;
    int index = haystack.indexOf(needle, 0); 
    while (index != -1) 
    {
        numberOfOccurences++; 
        index = haystack.indexOf(needle, index + needle.length());
    }
    System.out.println ("" + numberOfOccurences);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
309
0
Gpt3D_Clone309_0.java 1 23
Gpt3D_Clone309_0.java 24 51
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        if (counts.get (i) == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, counts.get (i) + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Number of occurences: " + minVal);
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 2, 3, 3, 2, 2, 4, 4, 5, 4};
    Map < Integer, Integer > counts = new HashMap < > ();
    for (Integer i : array) {
        Integer count = counts.get (i);
        if (count == null) {
            counts.put (i, 1);
        } else {
            counts.put (i, count + 1);
        }
    }
    List < Integer > cs = new ArrayList < Integer > (counts.values ());
    Collections.sort (cs);
    int minVal = cs.get (0);
    List < Integer > minElements = new ArrayList < > ();
    for (Entry < Integer, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () == minVal) {
            minElements.add (entry.getKey ());
        }
    }
    int count = 1;
    for (Integer i : minElements) {
        System.out.println ("Element: " + i + " Occurrence No. " +count+": " + minVal);
        count++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
310
0
Gpt3D_Clone310_0.java 1 17
Gpt3D_Clone310_0.java 18 35
----------------------------------------

public static void CountbyChar (String s) {
    HashMap < Character, Integer > letterCountMap = new HashMap < Character, Integer > ();
    char [] c = s.toCharArray ();
    for (int i = 0;
    i < c.length; i ++) {
        Integer count = 0;
        if (letterCountMap.containsKey (c [i])) {
            count = letterCountMap.get (c [i]) + 1;
        } else {
            count = 1;
        }
        letterCountMap.put (c [i], count);
    }
    for (Map.Entry < String, String > entry : letterCountMap.entrySet ()) {
        System.out.println (entry.getValue () + "( for" + entry.getKey () + " )");
    }
}
----------------------------------------

public static void CountbyChar (String s) {
    HashMap <String, Integer> letterCountMap = new HashMap <String, Integer> ();
    char [] c = s.toCharArray ();
    for (int i = 0; i < c.length; i ++) {
        Integer count = 0;
        if (letterCountMap.containsKey(String.valueOf(c[i]))) {
            count = letterCountMap.get(String.valueOf(c[i])) + 1;
        } else {
            count = 1;
        }
        letterCountMap.put(String.valueOf(c[i]), count);
    }
    for (Map.Entry <String, Integer> entry : letterCountMap.entrySet()) {
        System.out.println (entry.getValue () + "( for" + entry.getKey () + " )");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
310
1
Gpt3D_Clone310_1.java 1 17
Gpt3D_Clone310_1.java 18 34
----------------------------------------

public static void CountbyChar (String s) {
    HashMap < Character, Integer > letterCountMap = new HashMap < Character, Integer > ();
    char [] c = s.toCharArray ();
    for (int i = 0;
    i < c.length; i ++) {
        Integer count = 0;
        if (letterCountMap.containsKey (c [i])) {
            count = letterCountMap.get (c [i]) + 1;
        } else {
            count = 1;
        }
        letterCountMap.put (c [i], count);
    }
    for (Map.Entry < String, String > entry : letterCountMap.entrySet ()) {
        System.out.println (entry.getValue () + "( for" + entry.getKey () + " )");
    }
}
----------------------------------------

public static void CountbyChar (String s) {
    HashMap <Character, Integer> letterCountMap = new HashMap <Character, Integer> ();
    for (int i = 0; i < s.length(); i ++) {
        Integer count = 0;
        if (letterCountMap.containsKey(s.charAt(i))) {
            count = letterCountMap.get(s.charAt(i)) + 1;
        } else {
            count = 1;
        }
        letterCountMap.put (s.charAt(i), count);
    }
    for (Map.Entry <String, Integer> entry : letterCountMap.entrySet ()) {
        System.out.println (entry.getValue() + "( for" + entry.getKey() + " )");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
314
0
Gpt3D_Clone314_0.java 1 9
Gpt3D_Clone314_0.java 10 21
----------------------------------------

public void run () {
    for (int i = 0;
    ; i ++) {
        if (i % 1000 == 0) {
            System.out.printf ("get: %d\n", i);
        }
        Map < K, String > m2 = new HashMap < > (map);
    }
}
----------------------------------------

public void run () {
    int i = 0;
    while (true) {
        if (i % 1000 == 0) {
            System.out.printf ("get: %d\n", i);
        }
        Map < K, String > m2 = new HashMap < > (map);
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
315
0
Gpt3D_Clone315_0.java 1 20
Gpt3D_Clone315_0.java 21 37
----------------------------------------

public static void main (String [] args) {
    Scanner kb = new Scanner (System.in);
    String name;
    int age;
    char bloodGroup;
    float height;
    System.out.println ("Enter Your Name");
    name = kb.nextLine ();
    System.out.println ("Enter Your Age");
    age = kb.nextInt ();
    System.out.println ("Enter Your BloodGroup : A/B/O only");
    bloodGroup = kb.next ().charAt (0);
    System.out.println ("Enter Your Height in Meters");
    height = kb.nextFloat ();
    kb.close ();
    System.out.println ("Name : " + name);
    System.out.println ("Age : " + age);
    System.out.println ("BloodGroup : " + bloodGroup);
    System.out.println ("Height : " + height + " m");
}
----------------------------------------

public static void main (String [] args) {
    Scanner kb = new Scanner (System.in);
    String name;
    int age;
    char bloodGroup;
    System.out.println ("Enter Your Name");
    name = kb.nextLine ();
    System.out.println ("Enter Your Age");
    age = kb.nextInt ();
    System.out.println ("Enter Your BloodGroup : A/B/O only");
    bloodGroup = kb.next ().charAt (0);
    kb.close ();
    System.out.println ("Name : " + name);
    System.out.println ("Age : " + age);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
317
0
Gpt3D_Clone317_0.java 1 14
Gpt3D_Clone317_0.java 15 29
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

public void deleteRecursive (File path) { 
    File [] c = path.listFiles (); 
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isFile ()) {
            file.delete ();
        } else {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file); 
        }
    }
    path.delete ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
319
0
Gpt3D_Clone319_0.java 1 14
Gpt3D_Clone319_0.java 15 31
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file.delete ();
        } else {
            file.delete ();
        }
    }
    path.delete ();
}
----------------------------------------

public void deleteRecursive (File path) {
    File [] c = path.listFiles ();
    System.out.println ("Cleaning out folder:" + path.toString ());
    for (File file : c) {
        if (file.isDirectory ()) {
            System.out.println ("Deleting file:" + file.toString ());
            deleteRecursive (file);
            file = null;
        } else {
            file = null;
        }
    }
    path = null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
0
Gpt3D_Clone31_0.java 1 7
Gpt3D_Clone31_0.java 8 16
----------------------------------------

public void run () {
    System.out.println (ARRAY_ELEMENTS [index]);
    index ++;
    if (index >= ARRAY_ELEMENTS.length) {
        utilTimer.cancel ();
    }
}
----------------------------------------

public void run () {
    System.out.println (ARRAY_ELEMENTS [index]);
    index --;
    if (index < 0) {
        utilTimer.cancel ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
31
1
Gpt3D_Clone31_1.java 1 7
Gpt3D_Clone31_1.java 8 16
----------------------------------------

public void run () {
    System.out.println (ARRAY_ELEMENTS [index]);
    index ++;
    if (index >= ARRAY_ELEMENTS.length) {
        utilTimer.cancel ();
    }
}
----------------------------------------

public void run () {
    System.out.println (ARRAY_ELEMENTS [index]);
    index -= 2;
    if (index < 0) {
        utilTimer.cancel ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
0
Gpt3D_Clone322_0.java 1 21
Gpt3D_Clone322_0.java 22 38
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println ("Here");
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            e.printStackTrace ();
            console.nextLine ();
        } finally {
            if (hoursNotOk) {
                System.out.println (", please re-enter the hours again:");
            } else {
                System.out.println ("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            console.nextLine ();
            System.out.println ("Here, please re-enter the hours again:");
        }
    } while (hoursNotOk);
    System.out.println ("**hours input accepted**");
    return hours;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
322
1
Gpt3D_Clone322_1.java 1 21
Gpt3D_Clone322_1.java 22 37
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            System.out.println ("Here");
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            e.printStackTrace ();
            console.nextLine ();
        } finally {
            if (hoursNotOk) {
                System.out.println (", please re-enter the hours again:");
            } else {
                System.out.println ("**hours input accepted**");
            }
        }
    } while (hoursNotOk);
    return hours;
}
----------------------------------------

public static int getHours () {
    int hours = 0;
    boolean hoursNotOk = true;
    do {
        try {
            hours = console.nextInt ();
            hoursNotOk = false;
        } catch (Exception e) {
            console.nextLine ();
        }
    } while (hoursNotOk);
    System.out.println ("**hours input accepted**");
    return hours;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
323
0
Gpt3D_Clone323_0.java 1 24
Gpt3D_Clone323_0.java 25 56
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String [] [] array = new String [7] [];
    array [0] = new String [] {"continents", "Asia", "Europe", "Africa", "Australia", "South America", "North America"};
    array [1] = new String [] {"profession", "teacher", "doctor", "lawyer"};
    array [2] = new String [] {"brand", "apple", "samsung"};
    array [3] = new String [] {"name", "lisa", "peter", "sam", "jack"};
    array [4] = new String [] {"profession", "engineer", "Professor", "Dentist", "Driver"};
    array [5] = new String [] {"sex", "value", "male", "female"};
    array [6] = new String [] {"exp", "value", "1", "2", "3", "4"};
    int index = sc.nextInt ();
    String [] tempReference = array [index - 1];
    for (int i = index - 1;
    i < array.length - 1; i ++) {
        array [i] = array [i + 1];
    }
    array [array.length - 1] = tempReference;
    for (String [] tempArray : array) {
        for (String s : tempArray) {
            System.out.print (s + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String [] [] array = new String [7] [];
    array [0] = new String [] {"continents", "Asia", "Europe", "Africa", "Australia", "South America", "North America"};
    array [1] = new String [] {"profession", "teacher", "doctor", "lawyer"};
    array [2] = new String [] {"brand", "apple", "samsung"};
    array [3] = new String [] {"name", "lisa", "peter", "sam", "jack"};
    array [4] = new String [] {"profession", "engineer", "Professor", "Dentist", "Driver"};
    array [5] = new String [] {"sex", "value", "male", "female"};
    array [6] = new String [] {"exp", "value", "1", "2", "3", "4"};
    int index = sc.nextInt ();
    int numRows = array.length; 
    String[][] tempReference = new String[numRows][]; 
    for (int i = 0; i < numRows; i++) { 
        if (i >= index - 1 && i < numRows - 1) {
            tempReference[i] = array[i+1];
            array[i] = array[i+1];
         } else {
            tempReference[i] = array[index - 1]; 
            array[i] = array[index - 1];
         }      
    }
    array[numRows - 1] = tempReference[numRows - 1]; 
    for (String[] tempArray : array) {
        for (String s : tempArray) {
            System.out.print(s + " ");
        }
        System.out.println();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
323
1
Gpt3D_Clone323_1.java 1 24
Gpt3D_Clone323_1.java 25 56
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String [] [] array = new String [7] [];
    array [0] = new String [] {"continents", "Asia", "Europe", "Africa", "Australia", "South America", "North America"};
    array [1] = new String [] {"profession", "teacher", "doctor", "lawyer"};
    array [2] = new String [] {"brand", "apple", "samsung"};
    array [3] = new String [] {"name", "lisa", "peter", "sam", "jack"};
    array [4] = new String [] {"profession", "engineer", "Professor", "Dentist", "Driver"};
    array [5] = new String [] {"sex", "value", "male", "female"};
    array [6] = new String [] {"exp", "value", "1", "2", "3", "4"};
    int index = sc.nextInt ();
    String [] tempReference = array [index - 1];
    for (int i = index - 1;
    i < array.length - 1; i ++) {
        array [i] = array [i + 1];
    }
    array [array.length - 1] = tempReference;
    for (String [] tempArray : array) {
        for (String s : tempArray) {
            System.out.print (s + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String [] [] array = new String [7] [];
    array [0] = new String [] {"continents", "Asia", "Europe", "Africa", "Australia", "South America", "North America"};
    array [1] = new String [] {"profession", "teacher", "doctor", "lawyer"};
    array [2] = new String [] {"brand", "apple", "samsung"};
    array [3] = new String [] {"name", "lisa", "peter", "sam", "jack"};
    array [4] = new String [] {"profession", "engineer", "Professor", "Dentist", "Driver"};
    array [5] = new String [] {"sex", "value", "male", "female"};
    array [6] = new String [] {"exp", "value", "1", "2", "3", "4"};
    int index = sc.nextInt ();
    int numRows = array.length; 
    String[] tempReference = new String[numRows]; 
    for (int i = 0; i < numRows; i++) { 
        if (i >= index - 1 && i < numRows - 1) {
            tempReference[i] = array[i+1][0];
            array[i] = array[i+1];
         } else {
            tempReference[i] = array[index - 1][0]; 
            array[i] = array[index - 1];
         }      
    }
    array[numRows - 1] = tempReference; 
    for (String[] tempArray : array) {
        for (String s : tempArray) {
            System.out.print(s + " ");
        }
        System.out.println();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
0
Gpt3D_Clone324_0.java 1 11
Gpt3D_Clone324_0.java 12 27
----------------------------------------

public static void main (String [] args) {
    int numberofDays;
    int sharePoints;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Number of days in the period: ");
    numberofDays = keyboard.nextInt ();
    System.out.print ("Share points on the first day: ");
    sharePoints = keyboard.nextInt ();
    numberofDays = validator (numberofDays, keyboard);
    outPutTablePrinter (numberofDays, sharePoints);
}
----------------------------------------

public static void main (String [] args) {
    int numberofDays;
    int sharePoints;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Number of days in the period: ");
    numberofDays = keyboard.nextInt ();
    if (numberofDays < 1 || numberofDays > 30) {
        System.out.print("Enter the valid value (1-30):");
        numberofDays = keyboard.nextInt();
    }
    System.out.print ("Share points on the first day: ");
    sharePoints = keyboard.nextInt ();
    outPutTablePrinter (numberofDays, sharePoints);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
1
Gpt3D_Clone324_1.java 1 11
Gpt3D_Clone324_1.java 12 27
----------------------------------------

public static void main (String [] args) {
    int numberofDays;
    int sharePoints;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Number of days in the period: ");
    numberofDays = keyboard.nextInt ();
    System.out.print ("Share points on the first day: ");
    sharePoints = keyboard.nextInt ();
    numberofDays = validator (numberofDays, keyboard);
    outPutTablePrinter (numberofDays, sharePoints);
}
----------------------------------------

public static void main (String [] args) {
    int numberofDays;
    int sharePoints;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Number of days in the period: ");
    numberofDays = keyboard.nextInt ();
    System.out.print ("Share points on the first day: ");
    sharePoints = keyboard.nextInt ();
    if (numberofDays < 1 || numberofDays > 30) {
        System.out.print("Enter the valid value (1-30):");
        numberofDays = keyboard.nextInt();
    }
    outPutTablePrinter (numberofDays, sharePoints);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
2
Gpt3D_Clone324_2.java 1 11
Gpt3D_Clone324_2.java 12 21
----------------------------------------

public static void main (String [] args) {
    int numberofDays;
    int sharePoints;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Number of days in the period: ");
    numberofDays = keyboard.nextInt ();
    System.out.print ("Share points on the first day: ");
    sharePoints = keyboard.nextInt ();
    numberofDays = validator (numberofDays, keyboard);
    outPutTablePrinter (numberofDays, sharePoints);
}
----------------------------------------

public static void main (String [] args) {
    int numberofDays;
    int sharePoints;
    Scanner keyboard = new Scanner (System.in);
    userInputReader (keyboard);
    numberofDays = validator (numberofDays, keyboard);
    outPutTablePrinter (numberofDays, sharePoints);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
324
3
Gpt3D_Clone324_3.java 1 11
Gpt3D_Clone324_3.java 12 21
----------------------------------------

public static void main (String [] args) {
    int numberofDays;
    int sharePoints;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Number of days in the period: ");
    numberofDays = keyboard.nextInt ();
    System.out.print ("Share points on the first day: ");
    sharePoints = keyboard.nextInt ();
    numberofDays = validator (numberofDays, keyboard);
    outPutTablePrinter (numberofDays, sharePoints);
}
----------------------------------------

public static void main (String [] args) {
    int numberofDays;
    int sharePoints;
    Scanner keyboard = new Scanner (System.in);
    userInputReader (numberofDays, sharePoints, keyboard);
    numberofDays = validator (numberofDays, keyboard);
    outPutTablePrinter (numberofDays, sharePoints);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
325
0
Gpt3D_Clone325_0.java 1 19
Gpt3D_Clone325_0.java 20 37
----------------------------------------

public int read (char [] cbuf, int off, int len) throws IOException {
    int read = super.read (cbuf, off, len);
    if (read == - 1) {
        return - 1;
    }
    int pos = off - 1;
    for (int readPos = off;
    readPos < off + read; readPos ++) {
        if (read == '@') {
            continue;
        } else {
            pos ++;
        }
        if (pos < readPos) {
            cbuf [pos] = cbuf [readPos];
        }
    }
    return pos - off + 1;
}
----------------------------------------

public int read (char [] cbuf, int off, int len) throws IOException {
    int read = super.read (cbuf, off, len);
    if (read == - 1) {
        return - 1;
    }
    int pos = off;
    for (int readPos = off; readPos < off + read; readPos ++) {
        if (read == '@') {
            continue;
        } else {
            cbuf [pos] = cbuf [readPos];
            pos++;
        }
    }
    return pos - off;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
325
2
Gpt3D_Clone325_2.java 1 19
Gpt3D_Clone325_2.java 20 35
----------------------------------------

public int read (char [] cbuf, int off, int len) throws IOException {
    int read = super.read (cbuf, off, len);
    if (read == - 1) {
        return - 1;
    }
    int pos = off - 1;
    for (int readPos = off;
    readPos < off + read; readPos ++) {
        if (read == '@') {
            continue;
        } else {
            pos ++;
        }
        if (pos < readPos) {
            cbuf [pos] = cbuf [readPos];
        }
    }
    return pos - off + 1;
}
----------------------------------------

public int read (char [] cbuf, int off, int len) throws IOException {
    int read = super.read (cbuf, off, len);
    if (read == - 1) {
        return - 1;
    }
    int pos = off - 1;
    for (int readPos = off;
    readPos < off + read; readPos ++) {
        if (read != '@') {
            cbuf [++ pos] = cbuf [readPos];
        }
    }
    return pos - off + 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
327
0
Gpt3D_Clone327_0.java 1 10
Gpt3D_Clone327_0.java 11 22
----------------------------------------

public void mouseMoved (MouseEvent e) {
    xpos = getX ();
    if (xpos < 0) {
        polyrot --;
    } else if (xpos > 0) {
        polyrot ++;
    }
    repaint ();
    break;
}
----------------------------------------

public void mouseMoved (MouseEvent e) {
    int xpos = getX ();
    if (xpos < 0) {
        polyrot--;
    } else if (xpos > 0) {
        polyrot++;
    }
    repaint();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
327
2
Gpt3D_Clone327_2.java 1 10
Gpt3D_Clone327_2.java 11 21
----------------------------------------

public void mouseMoved (MouseEvent e) {
    xpos = getX ();
    if (xpos < 0) {
        polyrot --;
    } else if (xpos > 0) {
        polyrot ++;
    }
    repaint ();
    break;
}
----------------------------------------

public void mouseMoved (MouseEvent e) {
    int xpos = getX ();
    if (xpos < 0) {
        polyrot--;
    } else {
        polyrot++;
    }
    repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
2
Gpt3D_Clone328_2.java 1 8
Gpt3D_Clone328_2.java 9 20
----------------------------------------

public static void close (Statement...statements) {
    for (Statement stmt : statements) {
        try {
            if (stmt != null) stmt.close ();
        } catch (SQLException se) {
        }
    }
}
----------------------------------------

public static void close (Statement...params) {
    for (Statement stmt : params) {
        if (stmt != null) {
            try {
                stmt.close ();
            } catch (SQLException err) {
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
328
3
Gpt3D_Clone328_3.java 1 8
Gpt3D_Clone328_3.java 9 18
----------------------------------------

public static void close (Statement...statements) {
    for (Statement stmt : statements) {
        try {
            if (stmt != null) stmt.close ();
        } catch (SQLException se) {
        }
    }
}
----------------------------------------

public static void close (Statement...stmts) {
    for (Statement stmt : stmts) {
        if (stmt != null) try {
            stmt.close ();
        } catch (SQLException se) {
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
0
Gpt3D_Clone331_0.java 1 15
Gpt3D_Clone331_0.java 16 36
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        int count = 1;
        if (map.containsKey(val)) {
            count = map.get(val) + 1;
        }
        map.put (val, count);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
1
Gpt3D_Clone331_1.java 1 15
Gpt3D_Clone331_1.java 16 36
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (int i=0; i<arr.length; i++) {
        if(map.containsKey(arr[i])) {
            map.put(arr[i], map.get(arr[i]) + 1);
        } else {
            map.put(arr[i], 1);
        }
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
2
Gpt3D_Clone331_2.java 1 15
Gpt3D_Clone331_2.java 16 36
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        int count = 0;
        if (map.containsKey(val)) {
            count = map.get(val);
        }
        map.put (val, ++count);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 0) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
331
3
Gpt3D_Clone331_3.java 1 15
Gpt3D_Clone331_3.java 16 36
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        if(map.containsKey(val)) {
            map.put(val, map.get(val) + 1);
        } else {
            map.put(val, 1);
        }
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
333
0
Gpt3D_Clone333_0.java 1 21
Gpt3D_Clone333_0.java 22 41
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

public static void main (String...a) {
    System.out.println ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        if (ar [i] > 0) {
            char ch = (char) i;
            System.out.print (ch);
            if (ar [i] != 1) System.out.print (ar [i]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
0
Gpt3D_Clone334_0.java 1 21
Gpt3D_Clone334_0.java 22 49
----------------------------------------

public static void main (String [] args) throws IOException {
    String ch;
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter the Statement:");
    ch = br.readLine ();
    int count = 0, len = 0;
    do {
        try {
            char name [] = ch.toCharArray ();
            len = name.length;
            count = 0;
            for (int j = 0;
            j < len; j ++) {
                if ((name [0] == name [j]) && ((name [0] >= 65 && name [0] <= 91) || (name [0] >= 97 && name [0] <= 123))) count ++;
            }
            if (count != 0) System.out.println (name [0] + " " + count + " Times");
            ch = ch.replace ("" + name [0], "");
        } catch (Exception ex) {
        }
    } while (len != 1);
}
----------------------------------------

public static void Main (String [] args) throws IOException {
    char ch;
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.print (" Enter the statement:");
    ch = br.readLine ().charAt(0);
    int count = 0, length = 0;
    do {
        try {
            char [] name = String.valueOf(ch).toCharArray();
            length = name.length;
            count = 0;
            for (int j = 0;
            j < length; j ++) {
                if ((name [0] >= 65 && name [0] <= 91) || (name [0] >= 97 && name [0] <= 123)) count++;
            }
            if (count != 0) System.out.println (name [0] + " " + count + " Times");
            for (int k = 0; k < length; k++) {
               if (name[k] == name[0]) {
                   name[k] = ' ';
               }
            }
            ch = String.valueOf(name).replaceAll(" ", "").charAt(0);
        } catch (Exception ex){
        }
    } while (length != 1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
334
1
Gpt3D_Clone334_1.java 1 21
Gpt3D_Clone334_1.java 22 46
----------------------------------------

public static void main (String [] args) throws IOException {
    String ch;
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter the Statement:");
    ch = br.readLine ();
    int count = 0, len = 0;
    do {
        try {
            char name [] = ch.toCharArray ();
            len = name.length;
            count = 0;
            for (int j = 0;
            j < len; j ++) {
                if ((name [0] == name [j]) && ((name [0] >= 65 && name [0] <= 91) || (name [0] >= 97 && name [0] <= 123))) count ++;
            }
            if (count != 0) System.out.println (name [0] + " " + count + " Times");
            ch = ch.replace ("" + name [0], "");
        } catch (Exception ex) {
        }
    } while (len != 1);
}
----------------------------------------

public static void Main (String [] args) throws IOException {
    char ch;
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter the statement:");
    ch = br.readLine ().charAt(0);
    int count = 0, length = 0;
    do {
        try {
            char [] name = String.valueOf(ch).toCharArray();
            length = name.length;
            count = 0;
            for (int j = 0;
            j < length; j ++) {
                if ((name [0] == name [j]) && ((name [0] >= 65 && name [0] <= 91) || (name [0] >= 97 && name [0] <= 123))) count++;
            }
            if (count != 0) System.out.println (name [0] + " " + count + " Times");
            String chstr = String.valueOf(ch);
            String result = chstr.replace ("" + name [0], "");
            ch = result.charAt (0);
        } catch (Exception ex){
        }
    } while (length != 1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
0
Gpt3D_Clone336_0.java 1 15
Gpt3D_Clone336_0.java 16 37
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        if(map.containsKey (val)) {
            int count = map.get (val);
            map.put (val, count + 1);
        } else {
            map.put (val, 1);
        }
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
1
Gpt3D_Clone336_1.java 1 15
Gpt3D_Clone336_1.java 16 36
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        if(map.containsKey (val)) {
            map.put (val, map.get (val) + 1);
        } else {
            map.put (val, 1);
        }
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
336
2
Gpt3D_Clone336_2.java 1 15
Gpt3D_Clone336_2.java 16 32
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    Hashtable < Character, Integer > map = new Hashtable < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Enumeration < Character > entry = map.keys (); entry.hasMoreElements ();) {
        Character key = entry.nextElement ();
        Object value = map.get (key);
        if (value != null && (Integer) value > 1) {
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
337
0
Gpt3D_Clone337_0.java 1 24
Gpt3D_Clone337_0.java 25 53
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0; 
    int countO = 0; 
    int countSpace = 0; 
    int countDot = 0; 
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA = countA + 1;
                break;
            case 'o' :
            case 'O' :
                countO = countO + 1;
                break;
            case ' ' :
                countSpace = countSpace + 1;
                break;
            case '.' :
                countDot = countDot + 1;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
338
1
Gpt3D_Clone338_1.java 1 21
Gpt3D_Clone338_1.java 22 40
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] += 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            System.out.print (ch + "" + ar [i]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
339
0
Gpt3D_Clone339_0.java 1 15
Gpt3D_Clone339_0.java 16 33
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        char c = s1.charAt (i);
        if (! hm.containsKey(c)) {
            hm.put (c, (Integer) 1);
        } else {
            hm.put (c, hm.get (c) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
339
1
Gpt3D_Clone339_1.java 1 15
Gpt3D_Clone339_1.java 16 33
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        if (! hm.containsKey (s1.charAt (i))) {
            hm.put (s1.charAt (i), (Integer) 1);
        } else {
            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();
    System.out.println ("Enter an String:");
    Scanner sc = new Scanner (System.in);
    String s1 = sc.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        Character c = Character.valueOf (s1.charAt (i));
        if (! hm.containsKey (c)) {
            hm.put (c, (Integer) 1);
        } else {
            hm.put (c, hm.get (c) + 1);
        }
    }
    System.out.println ("The Charecters are:" + hm);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
340
0
Gpt3D_Clone340_0.java 1 15
Gpt3D_Clone340_0.java 16 37
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    Map < Character, Integer > charMap = new HashMap<Character, Integer>();
    for (char c : arr) {
        if (charMap.containsKey (c)) {
            Integer count = charMap.get(c) + 1;
            charMap.put(c, count);
        } else {
            charMap.put(c, 1);
        }
    }
    for (Entry < Character, Integer > entry : charMap.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
340
1
Gpt3D_Clone340_1.java 1 15
Gpt3D_Clone340_1.java 16 37
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        if(map.containsKey(val)) {
            Integer count = map.get(val) + 1;
            map.put(val, count);
        } else {
            map.put(val, 1);
        }
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
340
2
Gpt3D_Clone340_2.java 1 15
Gpt3D_Clone340_2.java 16 36
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (int i = 0; i < arr.length; i++) {
        int count = 0;
        if (map.containsKey (arr[i])) {
            count = map.get (arr[i]);
        }
        map.put (arr[i], count + 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
340
3
Gpt3D_Clone340_3.java 1 15
Gpt3D_Clone340_3.java 16 37
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (int i = 0; i < arr.length; i++) {
        if (!map.containsKey (arr[i])) {
            map.put (arr[i], 1);
        }
        else {
            map.put (arr[i], map.get (arr[i]) + 1);
        }
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
342
0
Gpt3D_Clone342_0.java 1 21
Gpt3D_Clone342_0.java 22 40
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] += 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            System.out.print (ch + "" + ar [i]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
343
1
Gpt3D_Clone343_1.java 1 24
Gpt3D_Clone343_1.java 25 47
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
343
2
Gpt3D_Clone343_2.java 1 24
Gpt3D_Clone343_2.java 25 44
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d", "A: ", countA, "O: ", countO);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
346
0
Gpt3D_Clone346_0.java 1 21
Gpt3D_Clone346_0.java 22 40
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)]++;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            System.out.print (ch + "" + ar [i]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
349
1
Gpt3D_Clone349_1.java 1 10
Gpt3D_Clone349_1.java 11 23
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        InputStream is = new BufferedInputStream (new FileInputStream (file));
        XMLDecoder xd = new XMLDecoder (is);
        model = (DefaultTableModel) xd.readObject ();
        table.setModel (model);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        InputStream is = new FileInputStream (file);
        XMLDecoder xd = new XMLDecoder (is);
        Object retrievedModel = xd.readObject ();
        model = (DefaultTableModel) retrievedModel;
        table.setModel (model);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
349
2
Gpt3D_Clone349_2.java 1 10
Gpt3D_Clone349_2.java 11 22
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        InputStream is = new BufferedInputStream (new FileInputStream (file));
        XMLDecoder xd = new XMLDecoder (is);
        model = (DefaultTableModel) xd.readObject ();
        table.setModel (model);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try (FileInputStream fis = new FileInputStream(file);
        BufferedInputStream bis = new BufferedInputStream(fis);
        XMLDecoder xd = new XMLDecoder(bis)){
        model = (DefaultTableModel) xd.readObject ();
        table.setModel (model);
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
34
0
Gpt3D_Clone34_0.java 1 9
Gpt3D_Clone34_0.java 10 21
----------------------------------------

boolean isPrime (int x) {
    for (int i = 2;
    i * i <= x; i ++) {
        if (x % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

boolean isPrime (int x) {
    int i = 2;
    while (i * i <= x) {
        if (x % i == 0) {
            return false;
        }
        i = i + 1;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
34
1
Gpt3D_Clone34_1.java 1 9
Gpt3D_Clone34_1.java 10 23
----------------------------------------

boolean isPrime (int x) {
    for (int i = 2;
    i * i <= x; i ++) {
        if (x % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

boolean isPrimeOrOdd (int x) {
    for (int i = 2;
    i * i <= x; i ++) {
        if (x % i == 0) {
            return false;
        } 
        else if (x % 2 == 1) { 
            return true;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
353
0
Gpt3D_Clone353_0.java 1 20
Gpt3D_Clone353_0.java 21 38
----------------------------------------

protected void sublayout (int maxWidth, int maxHeight) {
    int currX = 0;
    int currY = 0;
    Field currField;
    currField = this.getField (0);
    switch (ScreenConfig.getInstance ().getScreen ()) {
        case ScreenConfig.SCREEN_320_240 :
            currX = 5;
            currY = 3;
            break;
        case ScreenConfig.SCREEN_480_360 :
        case ScreenConfig.SCREEN_480_320 :
            currX = 5;
            currY = 1;
            break;
    }
    this.setPositionChild (currField, currX, currY);
    this.layoutChild (currField, currField.getPreferredWidth (), currField.getPreferredHeight ());
    setExtent (this.getPreferredWidth (), this.getPreferredHeight ());
}
----------------------------------------

protected void sublayout (int maxWidth, int maxHeight) {
    int currX = 0;
    int currY = 0;
    Field currField;
    currField = this.getField (0);
    if (ScreenConfig.getInstance ().getScreen () == ScreenConfig.SCREEN_320_240) {
        currX = 5;
        currY = 3;
    } else if (ScreenConfig.getInstance ().getScreen () == ScreenConfig.SCREEN_480_360 || ScreenConfig.getInstance ().getScreen () == ScreenConfig.SCREEN_480_320) {
        currX = 5;
        currY = 1;
    }
    this.setPositionChild (currField, currX, currY);
    this.layoutChild (currField, currField.getPreferredWidth (), currField.getPreferredHeight ());
    setExtent (this.getPreferredWidth (), this.getPreferredHeight ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
353
1
Gpt3D_Clone353_1.java 1 20
Gpt3D_Clone353_1.java 21 38
----------------------------------------

protected void sublayout (int maxWidth, int maxHeight) {
    int currX = 0;
    int currY = 0;
    Field currField;
    currField = this.getField (0);
    switch (ScreenConfig.getInstance ().getScreen ()) {
        case ScreenConfig.SCREEN_320_240 :
            currX = 5;
            currY = 3;
            break;
        case ScreenConfig.SCREEN_480_360 :
        case ScreenConfig.SCREEN_480_320 :
            currX = 5;
            currY = 1;
            break;
    }
    this.setPositionChild (currField, currX, currY);
    this.layoutChild (currField, currField.getPreferredWidth (), currField.getPreferredHeight ());
    setExtent (this.getPreferredWidth (), this.getPreferredHeight ());
}
----------------------------------------

protected void sublayout (int maxWidth, int maxHeight) {
    int currX = 0;
    int currY = 0;
    Field currField;
    currField = this.getField (0);
    if (ScreenConfig.getInstance ().getScreen () == ScreenConfig.SCREEN_320_240) {
        currX = 5;
        currY = 3;
    } else {
        currX = 5;
        currY = 1;
    }
    this.setPositionChild (currField, currX, currY);
    this.layoutChild (currField, currField.getPreferredWidth (), currField.getPreferredHeight ());
    setExtent (this.getPreferredWidth (), this.getPreferredHeight ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
354
0
Gpt3D_Clone354_0.java 1 22
Gpt3D_Clone354_0.java 23 44
----------------------------------------

public static void main (String [] args) {
    double [] [] data = {{97, 36, 79}, {94, 74, 60}, {68, 76, 58}, {64, 87, 56}, {68, 27, 73}, {74, 99, 42}, {7, 93, 87}, {51, 69, 40}, {38, 23, 33}, {57, 86, 31}};
    double data1 [] = new double [data.length];
    double data2 [] = new double [data.length];
    double data3 [] = new double [data.length];
    for (int x = 0;
    x < data.length; x ++) {
        for (int y = 0;
        y < data [x].length; y ++) {
            if (y == 0) data1 [x] = data [x] [y];
            else if (y == 1) data2 [x] = data [x] [y];
            else if (y == 2) data3 [x] = data [x] [y];
        }
    }
    for (int i = 0;
    i < data1.length; i ++) {
        System.out.print (data1 [i] + " ");
        System.out.print (data2 [i] + " ");
        System.out.print (data3 [i] + " ");
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
	double [] [] data = {{97, 36, 79}, {94, 74, 60}, {68, 76, 58}, {64, 87, 56}, {68, 27, 73}, {74, 99, 42}, {7, 93, 87}, {51, 69, 40}, {38, 23, 33}, {57, 86, 31}};
	double data1 [] = new double [data.length];
	double data2 [] = new double [data.length];
	double data3 [] = new double [data.length];
	for (int x = 0; 
		x < data.length; x++) {
			data1[x] = data[x][0];
			data2[x] = data[x][1];
			data3[x] = data[x][2];
	}
	for (int i = 0;
		i < data1.length; i++) {
			System.out.print(data1[i] + " ");
			System.out.print(data2[i] + " ");
			System.out.print(data3[i] + " ");
			System.out.println();
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
354
2
Gpt3D_Clone354_2.java 1 22
Gpt3D_Clone354_2.java 23 41
----------------------------------------

public static void main (String [] args) {
    double [] [] data = {{97, 36, 79}, {94, 74, 60}, {68, 76, 58}, {64, 87, 56}, {68, 27, 73}, {74, 99, 42}, {7, 93, 87}, {51, 69, 40}, {38, 23, 33}, {57, 86, 31}};
    double data1 [] = new double [data.length];
    double data2 [] = new double [data.length];
    double data3 [] = new double [data.length];
    for (int x = 0;
    x < data.length; x ++) {
        for (int y = 0;
        y < data [x].length; y ++) {
            if (y == 0) data1 [x] = data [x] [y];
            else if (y == 1) data2 [x] = data [x] [y];
            else if (y == 2) data3 [x] = data [x] [y];
        }
    }
    for (int i = 0;
    i < data1.length; i ++) {
        System.out.print (data1 [i] + " ");
        System.out.print (data2 [i] + " ");
        System.out.print (data3 [i] + " ");
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
	double [] [] data = {{97, 36, 79}, {94, 74, 60}, {68, 76, 58}, {64, 87, 56}, {68, 27, 73}, {74, 99, 42}, {7, 93, 87}, {51, 69, 40}, {38, 23, 33}, {57, 86, 31}};
	double data1 [] = new double [data.length];
	double data2 [] = new double [data.length];
	double data3 [] = new double [data.length];
	for (int x = 0; 
		x < data.length; x++) {
			data1[x] = data[x][0];
			data2[x] = data[x][1];
			data3[x] = data[x][2];
			System.out.print(data1[x] + " ");
			System.out.print(data2[x] + " ");
			System.out.print(data3[x] + " ");
			System.out.println();
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
355
0
Gpt3D_Clone355_0.java 1 40
Gpt3D_Clone355_0.java 41 110
----------------------------------------

private static void printPath (int [] [] mat, int i, int j) {
    if (mat.length == 0 || mat [0].length == 0) {
        System.out.println ("Empty matrix");
        return;
    }
    System.out.println ("(" + i + "," + j + ")");
    int rightValue = i >= 0 && i < mat.length - 1 && mat [i] [j] < mat [i + 1] [j] ? mat [i + 1] [j] : mat [i] [j];
    int belowValue = j >= 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j + 1] ? mat [i] [j + 1] : mat [i] [j];
    int aboveValue = i > 0 && i < mat.length - 1 && mat [i] [j] < mat [i - 1] [j] ? mat [i - 1] [j] : mat [i] [j];
    int leftValue = j > 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j - 1] ? mat [i] [j - 1] : mat [i] [j];
    if (rightValue > leftValue) {
        if (rightValue > belowValue) {
            if (rightValue > aboveValue) {
                printPath (mat, i + 1, j);
            } else {
                printPath (mat, i, j + 1);
            }
        } else {
            if (belowValue > aboveValue) {
                printPath (mat, i - 1, j);
            } else {
                printPath (mat, i, j + 1);
            }
        }
    } else {
        if (leftValue > belowValue) {
            if (leftValue > aboveValue) {
                printPath (mat, i - 1, j);
            } else {
                printPath (mat, i, j + 1);
            }
        } else {
            if (belowValue > aboveValue) {
                printPath (mat, i - 1, j);
            } else {
                printPath (mat, i, j + 1);
            }
        }
    }
}
----------------------------------------

private static void printPath (int [] [] mat, int i, int j) {
    if (mat.length == 0 || mat [0].length == 0) {
        System.out.println ("Empty matrix");
        return;
    }
    System.out.println ("(" + i + "," + j + ")");
    int rightValue = i >= 0 && i < mat.length - 1 && mat [i] [j] < mat [i + 1] [j] ? mat [i + 1] [j] : mat [i] [j];
    int belowValue = j >= 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j + 1] ? mat [i] [j + 1] : mat [i] [j];
    int aboveValue = i > 0 && i < mat.length - 1 && mat [i] [j] < mat [i - 1] [j] ? mat [i - 1] [j] : mat [i] [j];
    int leftValue = j > 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j - 1] ? mat [i] [j - 1] : mat [i] [j];
    int newValue = 0;
    if (rightValue > leftValue) {
        if (rightValue > belowValue) {
            if (rightValue > aboveValue) {
                printPath (mat, i + 1, j);
            } 
            else {  
                newValue = Math.max(leftValue, belowValue);
                if (aboveValue == newValue) {
                    printPath (mat, i, j - 1);
                } else {
                    printPath (mat, i, j + 1);
                }
            }
        } 
        else {
            if (belowValue > aboveValue) {
                printPath (mat, i - 1, j);
            } 
            else {
                newValue = Math.max(leftValue, rightValue);
                if (aboveValue == newValue) {
                    printPath (mat, i, j - 1);
                } else {
                    printPath (mat, i, j + 1);
                }
            }
        }
    }
    else {
        if (leftValue > belowValue) {
            if (leftValue > aboveValue) {
                printPath (mat, i - 1, j);
            } 
            else {
                newValue = Math.max(rightValue, belowValue);
                if (aboveValue == newValue) {
                    printPath (mat, i, j - 1);
                } else {
                    printPath (mat, i, j + 1);
                }
            }
        } 
        else {
            if (belowValue > aboveValue) {
                printPath (mat, i - 1, j);
            } 
            else {
                newValue = Math.max(rightValue, leftValue);
                if (aboveValue == newValue) {
                    printPath (mat, i, j - 1);
                } else {
                    printPath (mat, i, j + 1);
                }
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
355
1
Gpt3D_Clone355_1.java 1 40
Gpt3D_Clone355_1.java 41 109
----------------------------------------

private static void printPath (int [] [] mat, int i, int j) {
    if (mat.length == 0 || mat [0].length == 0) {
        System.out.println ("Empty matrix");
        return;
    }
    System.out.println ("(" + i + "," + j + ")");
    int rightValue = i >= 0 && i < mat.length - 1 && mat [i] [j] < mat [i + 1] [j] ? mat [i + 1] [j] : mat [i] [j];
    int belowValue = j >= 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j + 1] ? mat [i] [j + 1] : mat [i] [j];
    int aboveValue = i > 0 && i < mat.length - 1 && mat [i] [j] < mat [i - 1] [j] ? mat [i - 1] [j] : mat [i] [j];
    int leftValue = j > 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j - 1] ? mat [i] [j - 1] : mat [i] [j];
    if (rightValue > leftValue) {
        if (rightValue > belowValue) {
            if (rightValue > aboveValue) {
                printPath (mat, i + 1, j);
            } else {
                printPath (mat, i, j + 1);
            }
        } else {
            if (belowValue > aboveValue) {
                printPath (mat, i - 1, j);
            } else {
                printPath (mat, i, j + 1);
            }
        }
    } else {
        if (leftValue > belowValue) {
            if (leftValue > aboveValue) {
                printPath (mat, i - 1, j);
            } else {
                printPath (mat, i, j + 1);
            }
        } else {
            if (belowValue > aboveValue) {
                printPath (mat, i - 1, j);
            } else {
                printPath (mat, i, j + 1);
            }
        }
    }
}
----------------------------------------

private static void printPath (int [] [] mat, int i, int j) {
    if (mat.length == 0 || mat [0].length == 0) {
        System.out.println ("Empty matrix");
        return;
    }
    System.out.println ("(" + i + "," + j + ")");
    int rightValue = i >= 0 && i < mat.length - 1 && mat [i] [j] < mat [i + 1] [j] ? mat [i + 1] [j] : mat [i] [j];
    int belowValue = j >= 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j + 1] ? mat [i] [j + 1] : mat [i] [j];
    int aboveValue = i > 0 && i < mat.length - 1 && mat [i] [j] < mat [i - 1] [j] ? mat [i - 1] [j] : mat [i] [j];
    int leftValue = j > 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j - 1] ? mat [i] [j - 1] : mat [i] [j];
    if (rightValue > leftValue) {
        if (rightValue > belowValue) {
            if (rightValue > aboveValue) {
                printPath (mat, i + 1, j);
            } 
            else {
                if (aboveValue > leftValue && aboveValue > belowValue) {
                    printPath (mat, i, j - 1);
                }
                else {
                    printPath (mat, i, j + 1);
              }
            }
        }
        else {
            if (belowValue > aboveValue) {
                printPath (mat, i - 1, j);
            } 
            else {
                if (aboveValue > leftValue && aboveValue > rightValue) {
                    printPath (mat, i, j - 1);
                }
                else {
                    printPath (mat, i, j + 1);
                }
            }
       }
    }
    else {
        if (leftValue > belowValue) {
            if (leftValue > aboveValue) {
                printPath (mat, i - 1, j);
            } 
            else {
                if (aboveValue > rightValue && aboveValue > belowValue) {
                    printPath (mat, i, j - 1);
                }
                else {
                    printPath (mat, i, j + 1);
                }
            }
        } 
        else {
            if (belowValue > aboveValue) {
                printPath (mat, i - 1, j);
            } 
            else {
                if (aboveValue > rightValue && aboveValue > leftValue) {
                    printPath (mat, i, j - 1);
                }
                else {
                    printPath (mat, i, j + 1);
                }
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
359
0
Gpt3D_Clone359_0.java 1 25
Gpt3D_Clone359_0.java 26 64
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int t = 4;
    int count = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            count ++;
        }
    }
    int [] B = new int [count];
    int [] C = new int [A.length - count];
    for (int i = 0, j = 0, k = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [j] = A [i];
            System.out.println ("B = " + B [j]);
            j ++;
        } else {
            C [k] = A [i];
            System.out.println ("C = " + C [k]);
            k ++;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int t = 4;
    int count = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            count ++;
        }
    }
    int [] B = new int [count];
    int [] C = new int [A.length - count];
    for (int i = 0, j = 0, k = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [j] = A [i];
			System.out.println("B = "+B[j]);
            j++;
        } else {
            C [k] = A [i];
			System.out.println("C = "+C[k]);
            k++;
        }
    }
	System.out.println("Array B:");
	for(int l = 0; l < B.length; l++) {
		System.out.println(B[l]);
	}
	
	System.out.println();
	
	System.out.println("Array C:");
	for(int m = 0; m < C.length; m++) {
		System.out.println(C[m]);
	}
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
0
Gpt3D_Clone361_0.java 1 19
Gpt3D_Clone361_0.java 20 36
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

public static void main (String args []) {
    int max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    Scanner sc = new Scanner (System.in);
    System.out.println("Enter the number of elements: ");
    int n = sc.nextInt();
    int[] arr = new int[n];
    System.out.println("Enter the elements: ");
    for (int i= 0; i < arr.length; i++) {
        arr[i] = sc.nextInt();
        if (arr[i] > max) max = arr[i];
        else if (arr[i] < min) min = arr[i];
    }
    System.out.println("Highest Value in array: " + max);
    System.out.println("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
361
1
Gpt3D_Clone361_1.java 1 19
Gpt3D_Clone361_1.java 20 36
----------------------------------------

public static void main (String args []) {
    int n, max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
    System.out.println ("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [sc.nextInt ()];
    System.out.println ("Enter the elements: ");
    for (int i = 0;
    i < arr.length; i ++) {
        int next = sc.nextInt ();
        arr [i] = next;
    }
    for (int j = 0;
    j < arr.length; j ++) {
        if (arr [j] > max) max = arr [j];
        else if (arr [j] < min) min = arr [j];
    }
    System.out.println ("Highest Value in array: " + max);
    System.out.println ("Smallest Value in array: " + min);
}
----------------------------------------

public static void main (String args []) {
    int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;
    System.out.println("Enter the number of elements: ");
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    System.out.println("Enter the elements: ");
    for (int i= 0; i < arr.length; i++) {
        arr[i] = sc.nextInt();
        if (arr[i] > max) max = arr[i];
        else if (arr[i] < min) min = arr[i];
    }
    System.out.println("Highest Value in array: " + max);
    System.out.println("Smallest Value in array: " + min);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
363
0
Gpt3D_Clone363_0.java 1 13
Gpt3D_Clone363_0.java 14 28
----------------------------------------

public static void main (String [] args) {
    CustomClassLoader loader = new CustomClassLoader ();
    try {
        Class < ? > c = loader.findClass ("sample.Sample");
        Object o = c.newInstance ();
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
    } catch (InstantiationException e) {
        e.printStackTrace ();
    } catch (IllegalAccessException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    CustomClassLoader loader = new CustomClassLoader ();
    try {
        Class < ? > c = loader.findClass ("sample.Sample");
        Object o = c.newInstance ();
    } catch (ClassNotFoundException e) {
        System.out.print("Class not Found");
    } catch (InstantiationException e) {
        System.out.println("Error on instantiation");
    } catch (IllegalAccessException e) {
        System.out.println("Illegal access detected");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
364
0
Gpt3D_Clone364_0.java 1 10
Gpt3D_Clone364_0.java 11 22
----------------------------------------

public static int TestTryFinallyBlock () {
    int i = 0;
    try {
        i = 10;
        return i;
    } finally {
        i = 40;
        System.out.println ("local: " + i);
    }
}
----------------------------------------

public static int TestTryFinallyBlock() {
    int i = 0;
    try {
        i = 10;
    } finally {
        System.out.println("local: " + i);
    }
    i = 40;
    return i;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
0
Gpt3D_Clone366_0.java 1 20
Gpt3D_Clone366_0.java 21 44
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

public static void main (String...args) {
    List<int[]> array = new ArrayList<int[]>();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0; i < n; i++) {
        int[] list = new int[m];
        array.add(list);
        for (int j = 0; j < m; j++) {
            list[j] = input.nextInt();
        }
    }
    out.println("Result:");
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            out.println(array.get(i)[j]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
1
Gpt3D_Clone366_1.java 1 20
Gpt3D_Clone366_1.java 21 41
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

public static void main (String[] args) { 
    ArrayList<ArrayList<Integer>> array = new ArrayList<ArrayList<Integer>>(); 
    Scanner input = new Scanner(System.in); 
    System.out.println("Enter n:"); 
    int n = input.nextInt(); 
    System.out.println("Enter m:"); 
    int m = input.nextInt(); 
    System.out.println("Enter the values:"); 
    for (int i = 0; i < n; i++) {
         ArrayList<Integer> list = new ArrayList<Integer>(); 
         array.add(list); 
        for (int j = 0; j < m; j++) {
            list.add(input.nextInt()); 
        } 
    } 
    System.out.println("Result:"); 
    System.out.println(array);
    
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
366
2
Gpt3D_Clone366_2.java 1 20
Gpt3D_Clone366_2.java 21 40
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------

public static void main (String... args) { 
    List<List<Integer>> array = new ArrayList<>(); 
    Scanner input = new Scanner (System.in); 
    System.out.print ("Enter n:"); 
    int n = input.nextInt(); 
    System.out.print ("Enter m:"); 
    int m = input.nextInt(); 
    System.out.print ("Enter the values:"); 
    for (int i = 0; i < n; i++) { 
        List<Integer> list = new ArrayList<>(); 
        array.add(list); 
        for (int j = 0; j < m; j++) { 
            list.add(input.nextInt());
        }
    } 
    System.out.println("Result:"); 
    System.out.println(array);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
370
0
Gpt3D_Clone370_0.java 1 9
Gpt3D_Clone370_0.java 10 19
----------------------------------------

public void run () {
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (! saidHello.get ()) {
        }
        System.out.println ("World!");
        saidHello.set (false);
    }
}
----------------------------------------

public void run() { 
    for (int i = 0; i < sayThisManyTimes; i++) {
        do {
            System.out.println("World!");
            saidHello.set(false);
        } while (!saidHello.get());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
371
0
Gpt3D_Clone371_0.java 1 15
Gpt3D_Clone371_0.java 16 32
----------------------------------------

public void move () {
    y += ya;
    x += xa;
    if (x < 0) {
        x = 0;
    } else if (x + 30 > game.getWidth ()) {
        x = game.getWidth () - 30;
    }
    if (y < 0) {
        y = 0;
    } else if (collision ()) {
        onGround = true;
        y = game.ground.getBounds ().y - d;
    }
}
----------------------------------------

public void move () {
    y += ya;
    x += xa;
    if (x <= 0) {
        x = 0;
    } else if (x + 30 >= game.getWidth ()) {
        x = game.getWidth () - 30;
    }
    if (y <= 0) {
        y = 0;
    } else if (collision()) {
        onGround = true;
        y = game.ground.getBounds ().y - d;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
373
0
Gpt3D_Clone373_0.java 1 10
Gpt3D_Clone373_0.java 11 24
----------------------------------------

public static void main (String [] args) throws IOException {
    Path source = Paths.get ("/path/to/source/dir");
    Path destination = Paths.get ("/path/to/dest/dir");
    List < Path > sources = Files.walk (source).collect (toList ());
    List < Path > destinations = sources.stream ().map (source :: relativize).map (destination :: resolve).collect (toList ());
    for (int i = 0;
    i < sources.size (); i ++) {
        Files.copy (sources.get (i), destinations.get (i));
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    Path source = Paths.get ("/path/to/source/dir");
    Path destination = Paths.get ("/path/to/dest/dir");
    List < Path > sourcePaths = Files.walk (source).collect (toList ());
    List < Path > destinationPaths = new ArrayList < > ();
    for (Path path : sourcePaths) {
        destinationPaths.add (destination.resolve (source.relativize (path)));
    }
    for (int i = 0; i < sourcePaths.size (); i ++) {
        Files.copy (sourcePaths.get (i), destinationPaths.get (i));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
374
0
Gpt3D_Clone374_0.java 1 9
Gpt3D_Clone374_0.java 10 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        subComboBox.setModel (new DefaultComboBoxModel ((String []) o));
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        DefaultComboBoxModel dcm = new DefaultComboBoxModel();
        String[] strings = (String[]) o;
        for(int i = 0; i < strings.length; i++){
            dcm.addElement(strings[i]);
        }
        subComboBox.setModel (dcm);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
374
2
Gpt3D_Clone374_2.java 1 9
Gpt3D_Clone374_2.java 10 25
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        subComboBox.setModel (new DefaultComboBoxModel ((String []) o));
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        String[] subItemArray = new String[o.length];
        for (int i = 0; i < o.length; i++) {
            
            subItemArray[i] = (String) o[i];
        }
        subComboBox.setModel (new DefaultComboBoxModel (subItemArray));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
374
3
Gpt3D_Clone374_3.java 1 9
Gpt3D_Clone374_3.java 10 21
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        subComboBox.setModel (new DefaultComboBoxModel ((String []) o));
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        Vector<String> vector = new Vector<String>((String []) o);
        subComboBox.setModel (new DefaultComboBoxModel (vector));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
375
0
Gpt3D_Clone375_0.java 1 33
Gpt3D_Clone375_0.java 34 58
----------------------------------------

public void run () {
    {
        System.out.println ("New Communication Thread Started");
        try {
            PrintWriter out = new PrintWriter (clientSocket.getOutputStream (), true);
            BufferedReader in = new BufferedReader (new InputStreamReader (clientSocket.getInputStream ()));
            String inputLine;
            while ((inputLine = in.readLine ()) != null) {
                System.out.println ("Received: " + inputLine);
                try {
                    long pauseCommand = Long.parseLong (inputLine);
                    pause = pauseCommand;
                    out.println ("OK, pausing for " + inputLine + " ms");
                } catch (NumberFormatException e) {
                }
                if (inputLine.equals ("BYE")) {
                    out.println ("OK, bye!");
                    break;
                }
                if (inputLine.equals ("STOP")) {
                    out.println ("OK, stopping!");
                    System.exit (1);
                }
            }
            out.close ();
            in.close ();
            clientSocket.close ();
        } catch (IOException e) {
            System.err.println ("Problem with Communication Server");
            System.exit (1);
        }
    }
}
----------------------------------------

public void run () {
    {
        System.out.println ("New Communication Thread Started");
        try {
            PrintWriter out = new PrintWriter (clientSocket.getOutputStream (), true);
            BufferedReader in = new BufferedReader (new InputStreamReader (clientSocket.getInputStream ()));
            String inputLine;
            while ((inputLine = in.readLine ()) != null) {
                System.out.println ("Received: " + inputLine);
                if (inputLine.equals ("BYE")) {
                    out.println ("OK, bye!");
                    break;
                }
            }
            out.close ();
            in.close ();
            clientSocket.close ();
        } catch (IOException e) {
            System.err.println ("Problem with Communication Server");
            System.exit (1);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
0
Gpt3D_Clone378_0.java 1 18
Gpt3D_Clone378_0.java 19 38
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if (action == MOVE && indices != null) {
        DefaultListModel model = (DefaultListModel) source.getModel();
        for (int i = indices.length - 1; i >= 0; i--) {
            model.remove(indices[i]);
        }
    }
    if (addCount > 0) {
        for (int i = 0; i < indices.length; i++) {
            if (indices[i] > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = -1;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
378
1
Gpt3D_Clone378_1.java 1 18
Gpt3D_Clone378_1.java 19 38
----------------------------------------

protected void exportDone (JComponent c, Transferable data, int action) {
    if ((action == MOVE) && (indices != null)) {
        DefaultListModel model = (DefaultListModel) source.getModel ();
        for (int i = indices.length - 1;
        i >= 0; i --) model.remove (indices [i]);
    }
    if (addCount > 0) {
        for (int i = 0;
        i < indices.length; i ++) {
            if (indices [i] > addIndex) {
                indices [i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = - 1;
    addCount = 0;
}
----------------------------------------

protected void exportDone(JComponent c, Transferable data, int action) {
    if (action == MOVE && indices != null) {
        DefaultListModel model = (DefaultListModel)source.getModel();
        for (int i = indices.length - 1; i >= 0; i--) {
            model.remove(indices[i]);
        }
    }
    if (addCount > 0) {
        for (int i = 0; i < indices.length; i++) {
            if (indices[i] > addIndex) {
                indices[i] += addCount;
            }
        }
    }
    indices = null;
    addIndex = Integer.MIN_VALUE;
    addCount = 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
37
0
Gpt3D_Clone37_0.java 1 9
Gpt3D_Clone37_0.java 10 20
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    ArrayList < Integer > l = new ArrayList < Integer > (10);
    for (int i = 0;
    i < 10; i ++) l.add (sc.nextInt ());
    Collections.shuffle (l);
    for (int j = 0;
    j < 10; j ++) System.out.println (l.get (j));
}
----------------------------------------

public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    List<Integer> list = new ArrayList<>(10);
    for(int i = 0; i < 10; i++)
        list.add(sc.nextInt());
    Collections.shuffle(list);
    for(int j = 0; j < 10; j++)
        System.out.println(list.get(j));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
381
0
Gpt3D_Clone381_0.java 1 17
Gpt3D_Clone381_0.java 18 36
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length; i ++) {
        for (int j = i + 1;
        j < input.length; j ++) {
            if (input [i] > input [j]) {
                int tmp = input [i];
                input [i] = input [j];
                input [j] = tmp;
            }
        }
    }
    System.out.println ("Slow sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;  
    i < input.length; i ++) {
        for (int j = i + 1; 
        j > 0; j--) {
            if (input[i] > input[j]) {
                int tmp = input[i];
                input[i] = input[j];
                input[j] = tmp;
            }
        }
    }
    System.out.println ("Slow sorting is done and the result is :");
    for (int i=input.length-1; i>=0; i--) {
        System.out.print (input[i] + ",");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
382
0
Gpt3D_Clone382_0.java 1 17
Gpt3D_Clone382_0.java 18 34
----------------------------------------

public void sort (int [] input) {
    for (int i = 0;
    i < input.length - 1; i ++) {
        int k = i + 1;
        int nxtVal = input [k];
        while (input [k - 1] > nxtVal) {
            input [k] = input [k - 1];
            k --;
            if (k == 0) break;
        }
        input [k] = nxtVal;
    }
    System.out.println ("Medium sorting is done and the result is :");
    for (int i : input) {
        System.out.print (i + ",");
    }
}
----------------------------------------

public void sort (int [] input) {
     for (int i = 0; i < input.length - 1; i ++) {
         int nxtVal = input[i+1];
         int j = i;
         while (j > 0 && input[j-1] > nxtVal) {
             input[j] = input[j-1];
             j--;
         }
         input[j] = nxtVal;
     }
     System.out.println("Medium sorting is done and the result is :");
     for (int i : input) {
         System.out.print(i + ",");
     }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
383
0
Gpt3D_Clone383_0.java 1 19
Gpt3D_Clone383_0.java 20 45
----------------------------------------

private void sort (int [] input, int startIndx, int endIndx) {
    int endIndexOrig = endIndx;
    int startIndexOrig = startIndx;
    if (startIndx >= endIndx) return;
    int pavitVal = input [endIndx];
    while (startIndx <= endIndx) {
        while (input [startIndx] < pavitVal) startIndx ++;
        while (input [endIndx] > pavitVal) endIndx --;
        if (startIndx <= endIndx) {
            int tmp = input [startIndx];
            input [startIndx] = input [endIndx];
            input [endIndx] = tmp;
            startIndx ++;
            endIndx --;
        }
    }
    sort (input, startIndexOrig, endIndx);
    sort (input, startIndx, endIndexOrig);
}
----------------------------------------

private void sort (int [] input, int startIndx, int endIndx) {
    int endIndexOrig = endIndx;
    int startIndexOrig = startIndx;
    if (startIndx >= endIndx) return;
    int pivotVal = input [endIndx];
    while (startIndx < endIndx) {
        while (input [startIndx] < pivotVal) startIndx ++;
        while (input [endIndx] > pivotVal) endIndx --;
        if (startIndx < endIndx) {
            int tmp = input [startIndx];
            input [startIndx] = input [endIndx];
            input [endIndx] = tmp;
            startIndx ++;
            endIndx --;
        }
    }
    if (startIndx > startIndexOrig) {
        sort (input, startIndexOrig, startIndx - 1);
    } 
    if (endIndx < endIndexOrig) {
        sort (input, endIndx + 1, endIndexOrig);
    }
    
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
387
0
Gpt3D_Clone387_0.java 1 8
Gpt3D_Clone387_0.java 9 19
----------------------------------------

public int compare (String o1, String o2) {
    System.out.println ("Compare(" + o1 + "," + o2 + ")");
    char [] a1 = o1.toCharArray ();
    Arrays.sort (a1);
    char [] a2 = o2.toCharArray ();
    Arrays.sort (a2);
    return new String (a1).compareTo (new String (a2));
}
----------------------------------------

public int compare (String o1, String o2) {
    System.out.println ("Compare(" + o1 + "," + o2 + ")");
    char [] a1 = o1.toCharArray ();
    char [] a2 = o2.toCharArray ();
    Arrays.sort (a1);
    Arrays.sort (a2);
    return a1.length - a2.length;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
387
1
Gpt3D_Clone387_1.java 1 8
Gpt3D_Clone387_1.java 9 19
----------------------------------------

public int compare (String o1, String o2) {
    System.out.println ("Compare(" + o1 + "," + o2 + ")");
    char [] a1 = o1.toCharArray ();
    Arrays.sort (a1);
    char [] a2 = o2.toCharArray ();
    Arrays.sort (a2);
    return new String (a1).compareTo (new String (a2));
}
----------------------------------------

public int compare (String o1, String o2) {
    System.out.println ("Compare(" + o1 + "," + o2 + ")");
    char [] a1 = o1.toCharArray ();
    char [] a2 = o2.toCharArray ();
    a1 = Arrays.sort (a1);
    a2 = Arrays.sort (a2);
    return new String (a1).compareTo (new String (a2));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
38
2
Gpt3D_Clone38_2.java 1 11
Gpt3D_Clone38_2.java 12 25
----------------------------------------

public static void shuffleArray (int [] array) {
    List < Integer > list = new ArrayList < > ();
    for (int i : array) {
        list.add (i);
    }
    Collections.shuffle (list);
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

public static void shuffleArray (int [] array) {
    Map < Integer, Integer > map = new HashMap < > ();
    for (int i : array) {
        map.put (i, i);
    }
    List < Integer > list = new ArrayList < > (map.values ());
    Collections.shuffle (list);
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
391
0
Gpt3D_Clone391_0.java 1 9
Gpt3D_Clone391_0.java 10 21
----------------------------------------

public static final void printArray (int [] arr) {
    System.out.print ("[");
    for (int i = 0;
    i < arr.length; i ++) {
        if (i == arr.length - 1) System.out.print (arr [i]);
        else System.out.print (arr [i] + ", ");
    }
    System.out.println ("]");
}
----------------------------------------

public static final void printArray (int [] arr) {
    int i = 0;
    System.out.print ("[");
    while (i < arr.length) {
        if (i == arr.length - 1) System.out.print (arr [i]);
        else System.out.print (arr [i] + ", ");
        i++;
    }
    System.out.println ("]");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
392
1
Gpt3D_Clone392_1.java 1 15
Gpt3D_Clone392_1.java 16 34
----------------------------------------

public static int mode (int [] [] arr) {
    List < Integer > list = new ArrayList < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        for (int j = 0;
        j < arr [i].length; j ++) {
            list.add (arr [i] [j]);
        }
    }
    int [] vector = new int [list.size ()];
    for (int i = 0;
    i < vector.length; i ++) {
        vector [i] = list.get (i);
    }
}
----------------------------------------

public static int mode (int [] [] arr) {
    Set < Integer > set = new HashSet < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        for (int j = 0;
        j < arr [i].length; j ++) {
            set.add (arr [i] [j]);
        }
    }
    int [] vector = new int [set.size ()];
    int index = 0;
        Iterator < Integer > iterator = set.iterator ();
    while (iterator.hasNext ()) {
        vector [index] = iterator.next ();
        index ++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
392
2
Gpt3D_Clone392_2.java 1 15
Gpt3D_Clone392_2.java 16 29
----------------------------------------

public static int mode (int [] [] arr) {
    List < Integer > list = new ArrayList < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        for (int j = 0;
        j < arr [i].length; j ++) {
            list.add (arr [i] [j]);
        }
    }
    int [] vector = new int [list.size ()];
    for (int i = 0;
    i < vector.length; i ++) {
        vector [i] = list.get (i);
    }
}
----------------------------------------

public static int mode (int [][] arr) {
    ArrayList<Integer> list = new ArrayList<Integer> ();
    for (int i = 0; i < arr.length; i++) {
        for (int j = 0; j < arr[i].length; j++)
            list.add(arr[i][j]);
    }
    Integer [] vector = list.toArray (new Integer [list.size ()]);
    for (int i = 0;
    i < vector.length; i++) {
        vector[i] = list.get (i);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
393
0
Gpt3D_Clone393_0.java 1 20
Gpt3D_Clone393_0.java 21 43
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    String runningString = "" + currentChar;
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString = runningString + currentChar;
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString;
            }
        } else {
            runningString = "" + s.charAt (i);
        }
    }
    return longestString;
}
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;
    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    StringBuilder runningString = new StringBuilder();
    runningString.append(currentChar);
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString.append(currentChar);
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString.toString();
            }
        } else {
            runningString = new StringBuilder(String.valueOf(s.charAt(i)));
        }
    }
    return longestString;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
397
0
Gpt3D_Clone397_0.java 1 24
Gpt3D_Clone397_0.java 25 43
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("GridBagLayout Demo");
    frame.setLayout (new GridBagLayout ());
    JLabel label = new JLabel ("Demo Label");
    JTextField textField = new JTextField ("Demo Text");
    JComboBox comboBox = new JComboBox (new String [] {"hello", "goodbye", "foo"});
    GridBagConstraints cons = new GridBagConstraints ();
    cons.insets = new Insets (10, 10, 10, 10);
    frame.add (label, cons);
    cons.gridx = 1;
    cons.weightx = 1;
    cons.weighty = 1;
    cons.insets = new Insets (10, 0, 10, 10);
    cons.fill = GridBagConstraints.HORIZONTAL;
    frame.add (textField, cons);
    cons.gridx = 2;
    cons.weightx = 0;
    cons.weighty = 0;
    cons.insets = new Insets (10, 0, 10, 10);
    cons.fill = GridBagConstraints.NONE;
    frame.add (comboBox, cons);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
    JFrame frame = new JFrame ("GridBagLayout Demo");
    frame.setLayout (new GridBagLayout ());
    JLabel label = new JLabel ("Demo Label");
    JTextField textField = new JTextField ("Demo Text");
    JComboBox comboBox = new JComboBox (new String [] {"hello", "goodbye", "foo"});
    GridBagConstraints cons = new GridBagConstraints ();
    cons.insets = new Insets (10, 10, 10, 10);
    frame.add (label, cons);
    cons.gridx = 0;
    cons.insets = new Insets (10, 0, 10, 0);
    frame.add (textField, cons);
    cons.gridx = 1;
    frame.add (comboBox, cons);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
397
1
Gpt3D_Clone397_1.java 1 24
Gpt3D_Clone397_1.java 25 42
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("GridBagLayout Demo");
    frame.setLayout (new GridBagLayout ());
    JLabel label = new JLabel ("Demo Label");
    JTextField textField = new JTextField ("Demo Text");
    JComboBox comboBox = new JComboBox (new String [] {"hello", "goodbye", "foo"});
    GridBagConstraints cons = new GridBagConstraints ();
    cons.insets = new Insets (10, 10, 10, 10);
    frame.add (label, cons);
    cons.gridx = 1;
    cons.weightx = 1;
    cons.weighty = 1;
    cons.insets = new Insets (10, 0, 10, 10);
    cons.fill = GridBagConstraints.HORIZONTAL;
    frame.add (textField, cons);
    cons.gridx = 2;
    cons.weightx = 0;
    cons.weighty = 0;
    cons.insets = new Insets (10, 0, 10, 10);
    cons.fill = GridBagConstraints.NONE;
    frame.add (comboBox, cons);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

 public static void main (String [] args) {
    JFrame frame = new JFrame ("GridBagLayout Demo");
    frame.setLayout (new GridBagLayout ());
    JLabel label = new JLabel ("Demo Label");
    JTextField textField = new JTextField ("Demo Text");
    JComboBox comboBox = new JComboBox (new String [] {"hello", "goodbye", "foo"});
    GridBagConstraints cons = new GridBagConstraints ();
    cons.insets = new Insets (10, 10, 10, 10);
    frame.add (label, cons);
    cons.gridx = 0;
    frame.add (textField, cons);
    cons.gridx = 1;
    frame.add (comboBox, cons);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
39
1
Gpt3D_Clone39_1.java 1 8
Gpt3D_Clone39_1.java 9 17
----------------------------------------

public static void shuffle (int [] array) {
    if (random == null) random = new Random ();
    int count = array.length;
    for (int i = count;
    i > 1; i --) {
        swap (array, i - 1, random.nextInt (i));
    }
}
----------------------------------------

public static void shuffle (int [] array) {
    if (random == null) random = new Random ();
    int count = array.length;
    while(count > 1) {
        swap (array, --count, random.nextInt (count));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
3
0
Gpt3D_Clone3_0.java 1 18
Gpt3D_Clone3_0.java 19 48
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).forEach (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) Files.createDirectory (d);
                    return;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public static void copyFolder(Path src, Path dest){
    try{
        Files.walk(src).forEach(s -> {
            try {       
                Path d = dest.resolve(src.relativize(s));
                if(Files.isDirectory(s)){
                    if(!Files.exists(d)){
                       Files.createDirectories(d);
                    }
                    return;
                }
                Files.find(s, Integer.MAX_VALUE, (p,attr) -> attr.isRegularFile())
                     .forEach(path -> {
                        try{
                            Path dPath = dest.resolve(src.relativize(path));
                            Files.copy(path, dPath);
                        } catch (IOException e){
                            e.printStackTrace();
                        }
                    });
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch(Exception ex){
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
3
1
Gpt3D_Clone3_1.java 1 18
Gpt3D_Clone3_1.java 19 40
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).forEach (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) Files.createDirectory (d);
                    return;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).map (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) Files.createDirectory (d);
                    return true;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
                return false;
            }
            return false;
        }).filter (b -> b).count ();
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
401
0
Gpt3D_Clone401_0.java 1 17
Gpt3D_Clone401_0.java 18 37
----------------------------------------

public final void contextDestroyed (ServletContextEvent sce) {
    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();
    Enumeration < Driver > drivers = DriverManager.getDrivers ();
    while (drivers.hasMoreElements ()) {
        Driver driver = drivers.nextElement ();
        if (driver.getClass ().getClassLoader () == cl) {
            try {
                log.info ("Deregistering JDBC driver {}", driver);
                DriverManager.deregisterDriver (driver);
            } catch (SQLException ex) {
                log.error ("Error deregistering JDBC driver {}", driver, ex);
            }
        } else {
            log.trace ("Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader", driver);
        }
    }
}
----------------------------------------

public final void contextDestroyed (ServletContextEvent sce) {
    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();
    Enumeration < Driver > drivers = DriverManager.getDrivers ();
    while (drivers.hasMoreElements ()) {
        Driver driver = drivers.nextElement ();
        if (driver.getClass ().getClassLoader () == cl) {
            try {
                System.out.println ("Deregistering JDBC driver" + driver);
                DriverManager.deregisterDriver (driver);
            } catch (SQLException ex) {
                System.err.println ("Error deregistering JDBC driver" + driver);
                ex.printStackTrace();
            }
        } else {
            System.out.println ("Not deregistering JDBC driver" + driver + "as it does not belong to this webapp's ClassLoader");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
0
Gpt3D_Clone404_0.java 1 20
Gpt3D_Clone404_0.java 21 46
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Application Name");
    JPanel iconPanel = new JPanel ();
    JPanel grid = new JPanel (new FlowLayout ());
    JButton firewallButton = new JButton ("Firewall");
    JButton networkButton = new JButton ("Network");
    JButton printerButton = new JButton ("Printer");
    frame.add (iconPanel);
    iconPanel.add (firewallButton);
    iconPanel.add (networkButton);
    iconPanel.add (printerButton);
    grid.setBackground (Color.GREEN);
    frame.setLayout (new GridLayout (1, 2, 3, 3));
    frame.add (grid);
    frame.add (iconPanel);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.setTitle("Application Name");
    JPanel iconPanel = new JPanel ();
    JPanel grid = new JPanel (new FlowLayout ());
    JButton firewallButton = new JButton ();
    firewallButton.setName("Firewall");
    JButton networkButton = new JButton ();
    networkButton.setName("Network");
    JButton printerButton = new JButton ();
    printerButton.setName("Printer");
    frame.add (iconPanel);
    iconPanel.add (firewallButton);
    iconPanel.add (networkButton);
    iconPanel.add (printerButton);
    grid.setBackground (Color.GREEN);
    frame.setLayout (new GridLayout (1, 2, 3, 3));
    frame.add (grid);
    frame.add (iconPanel);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
404
1
Gpt3D_Clone404_1.java 1 20
Gpt3D_Clone404_1.java 21 45
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Application Name");
    JPanel iconPanel = new JPanel ();
    JPanel grid = new JPanel (new FlowLayout ());
    JButton firewallButton = new JButton ("Firewall");
    JButton networkButton = new JButton ("Network");
    JButton printerButton = new JButton ("Printer");
    frame.add (iconPanel);
    iconPanel.add (firewallButton);
    iconPanel.add (networkButton);
    iconPanel.add (printerButton);
    grid.setBackground (Color.GREEN);
    frame.setLayout (new GridLayout (1, 2, 3, 3));
    frame.add (grid);
    frame.add (iconPanel);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Application Name");
    JPanel iconPanel = new JPanel ();
    JPanel grid = new JPanel (new FlowLayout ());
    JButton firewallButton = new JButton ();
    firewallButton.setText("Firewall");
    JButton networkButton = new JButton ();
    networkButton.setText("Network");
    JButton printerButton = new JButton ();
    printerButton.setText("Printer");
    frame.add (iconPanel);
    iconPanel.add (firewallButton);
    iconPanel.add (networkButton);
    iconPanel.add (printerButton);
    grid.setBackground (Color.GREEN);
    frame.setLayout (new GridLayout (1, 2, 3, 3));
    frame.add (grid);
    frame.add (iconPanel);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
417
0
Gpt3D_Clone417_0.java 1 32
Gpt3D_Clone417_0.java 33 68
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

public String getName(String value) {
    boolean negative = value.startsWith("-");
    if (negative) value = value.substring(1);
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name = processor.getName(value);
    if ("".equals(name)) {
        name = ZERO_TOKEN;
    }
    else if (negative) {
        name = MINUS.concat(SEPARATOR).concat(name);
    }
    if (!(null == decimalValue || "".equals(decimalValue))) {
        StringBuilder sb = new StringBuilder(name);
        sb.append(SEPARATOR).append(UNION_AND).append(SEPARATOR);
        if (decimalValue.matches("^[0]+$")) {
            sb.append("zero").append(SEPARATOR);
        } else {
            for (String decimal : decimalValue.split("")) {
                if (decimal.equals("0"))
                    sb.append("zero").append(SEPARATOR);
                else
                    sb.append(processor.getName(decimal)).append(SEPARATOR);
            }
        }
        sb.append(SCALE.getName(-decimalValue.length()));
        name = sb.toString();
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
417
1
Gpt3D_Clone417_1.java 1 32
Gpt3D_Clone417_1.java 33 65
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

public String getName(String value) {
    boolean negative = false;
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring(1);
    }
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name = processor.getName(value);
    if ("".equals(name)) {
        name = ZERO_TOKEN;
    }
    else if (negative) {
        name = MINUS.concat(SEPARATOR).concat(name);
    }
    if (!(null == decimalValue || "".equals(decimalValue))) {
        StringBuilder sb = new StringBuilder(name);
        sb.append(SEPARATOR).append(UNION_AND).append(SEPARATOR);
        for (int i = 0; i < decimalValue.length(); i++) {
            if (decimalValue.charAt(i) == '0') sb.append("zero").append(SEPARATOR);
            else sb.append(processor.getName(decimalValue)).append(SEPARATOR);
        }
        sb.append(SCALE.getName(-decimalValue.length()));
        name = sb.toString();
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
41
0
Gpt3D_Clone41_0.java 1 10
Gpt3D_Clone41_0.java 11 22
----------------------------------------

public static void shuffle (Object [] a) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        int r = i + (int) (Math.random () * (n - i));
        Object swap = a [r];
        a [r] = a [i];
        a [i] = swap;
    }
}
----------------------------------------

public static void shuffle (Object[] a){
  int n = a.length;
  for(int i=0; i < n; i++){
    int r = (i + (int) (Math.random() * (n - i)));
    Object temp = new Object();
    temp = a[r];
    a[r] = a[i];
    a[i] = temp;
  }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
0
Gpt3D_Clone424_0.java 1 23
Gpt3D_Clone424_0.java 24 51
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if (name.isEmpty ()) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || decimalValue.isEmpty ())) {
        name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
    }
    return name;
}
----------------------------------------

public String getName (String value) {
    boolean negative = false; 
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf ("."); 
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name;
    if (negative){
        name = processor.getName (value).concat (SEPARATOR).concat (MINUS);
    } else {
        name = processor.getName (value); 
        if (name.isEmpty()) {
            name = ZERO_TOKEN;
        }  
    }
    if (! (null == decimalValue || decimalValue.isEmpty ())) {
        name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
424
1
Gpt3D_Clone424_1.java 1 23
Gpt3D_Clone424_1.java 24 51
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if (name.isEmpty ()) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || decimalValue.isEmpty ())) {
        name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
    }
    return name;
}
----------------------------------------

public String getName (String value) {
    boolean negative = false; 
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf ("."); 
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name;
    if (negative){
        name = MINUS.concat (SEPARATOR).concat (processor.getName(value));
    } else {
        name = processor.getName (value); 
        if (name.isEmpty()) {
            name = ZERO_TOKEN;
        }  
    }
    if (! (null == decimalValue || decimalValue.isEmpty ())) {
        name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
425
0
Gpt3D_Clone425_0.java 1 20
Gpt3D_Clone425_0.java 21 42
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int offset = NO_VALUE;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 100;
    if (number < 10) {
        offset = (number % 10) - 1;
    } else if (number < 20) {
        offset = (number % 20) - 1;
    }
    if (offset != NO_VALUE && offset < TOKENS.length) {
        buffer.append (TOKENS [offset]);
    }
    return buffer.toString ();
}
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int offset = NO_VALUE;
    int number;
    if (value.length () > 3) {
        number = Integer.valueOf (value.substring (value.length () - 3), 10);
    } else {
        number = Integer.parseInt(value);
    }
    number %= 100;
    if (number < 10) {
        offset = (number % 10) + 1;
    } else if (number < 20) {
        offset = (number % 20) + 1;
    }
    if (offset != NO_VALUE && offset < TOKENS.length) {
        buffer.append (SUFFIX).append(TOKENS [offset]);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
42
0
Gpt3D_Clone42_0.java 1 41
Gpt3D_Clone42_0.java 42 84
----------------------------------------

public static void main (String [] args) {
    int number = 2345;
    number = Math.min (3999, Math.max (1, number));
    String asRomanNumerals = "";
    String [] RN = {"I", "V", "X", "L", "C", "D", "M"};
    int i = 0;
    while (number > 0) {
        switch (number % 10) {
            case 1 :
                asRomanNumerals = RN [i] + asRomanNumerals;
                break;
            case 2 :
                asRomanNumerals = RN [i] + RN [i] + asRomanNumerals;
                break;
            case 3 :
                asRomanNumerals = RN [i] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 4 :
                asRomanNumerals = RN [i] + RN [i + 1] + asRomanNumerals;
                break;
            case 5 :
                asRomanNumerals = RN [i + 1] + asRomanNumerals;
                break;
            case 6 :
                asRomanNumerals = RN [i + 1] + RN [i] + asRomanNumerals;
                break;
            case 7 :
                asRomanNumerals = RN [i + 1] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 8 :
                asRomanNumerals = RN [i + 1] + RN [i] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 9 :
                asRomanNumerals = RN [i] + RN [i + 2] + asRomanNumerals;
                break;
        }
        number = (int) number / 10;
        i += 2;
    }
    System.out.println (asRomanNumerals);
}
----------------------------------------

public static void main (String [] args) {
    int number = 2345;
    number = Math.min (3999, Math.max (1, number));
    StringBuilder asRomanNumerals = new StringBuilder();
    String [] RN = {"I", "V", "X", "L", "C", "D", "M"};
    int i = 0;
    while (number > 0) {
        switch (number % 10) {
            case 1 :
                asRomanNumerals.insert(0, RN [i]);
                break;
            case 2 :
                asRomanNumerals.insert(0, RN [i] + RN [i]);
                break;
            case 3 :
                asRomanNumerals.insert(0, RN [i] + RN [i] + RN [i]);
                break;
            case 4 :
                asRomanNumerals.insert(0, RN [i] + RN [i + 1]);
                break;
            case 5 :
                asRomanNumerals.insert(0, RN [i + 1]);
                break;
            case 6 :
                asRomanNumerals.insert(0, RN [i + 1] + RN [i]);
                break;
            case 7 :
                asRomanNumerals.insert(0, RN [i + 1] + RN [i] + RN [i]);
                break;
            case 8 :
                asRomanNumerals.insert(0, RN [i + 1] + RN [i] + RN [i] + RN [i]);
                break;
            case 9 :
                asRomanNumerals.insert(0, RN [i] + RN [i + 2]);
                break;
        }
        number = (int) number / 10;
        i += 2;
    }
    System.out.println (asRomanNumerals.toString());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
42
1
Gpt3D_Clone42_1.java 1 41
Gpt3D_Clone42_1.java 42 84
----------------------------------------

public static void main (String [] args) {
    int number = 2345;
    number = Math.min (3999, Math.max (1, number));
    String asRomanNumerals = "";
    String [] RN = {"I", "V", "X", "L", "C", "D", "M"};
    int i = 0;
    while (number > 0) {
        switch (number % 10) {
            case 1 :
                asRomanNumerals = RN [i] + asRomanNumerals;
                break;
            case 2 :
                asRomanNumerals = RN [i] + RN [i] + asRomanNumerals;
                break;
            case 3 :
                asRomanNumerals = RN [i] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 4 :
                asRomanNumerals = RN [i] + RN [i + 1] + asRomanNumerals;
                break;
            case 5 :
                asRomanNumerals = RN [i + 1] + asRomanNumerals;
                break;
            case 6 :
                asRomanNumerals = RN [i + 1] + RN [i] + asRomanNumerals;
                break;
            case 7 :
                asRomanNumerals = RN [i + 1] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 8 :
                asRomanNumerals = RN [i + 1] + RN [i] + RN [i] + RN [i] + asRomanNumerals;
                break;
            case 9 :
                asRomanNumerals = RN [i] + RN [i + 2] + asRomanNumerals;
                break;
        }
        number = (int) number / 10;
        i += 2;
    }
    System.out.println (asRomanNumerals);
}
----------------------------------------

public static void main (String [] args) {
    int number = 2345;
    number = Math.min (3999, Math.max (1, number));
    StringBuilder asRomanNumerals = new StringBuilder();
    String [] RN = {"I", "V", "X", "L", "C", "D", "M"};
    int i = 0;
    while (number > 0) {
        switch (number % 10) {
            case 1 :
                asRomanNumerals.append(RN [i]);
                break;
            case 2 :
                asRomanNumerals.append(RN [i] + RN [i]);
                break;
            case 3 :
                asRomanNumerals.append(RN [i] + RN [i] + RN [i]);
                break;
            case 4 :
                asRomanNumerals.append(RN [i] + RN [i + 1]);
                break;
            case 5 :
                asRomanNumerals.append(RN [i + 1]);
                break;
            case 6 :
                asRomanNumerals.append(RN [i + 1] + RN [i]);
                break;
            case 7 :
                asRomanNumerals.append(RN [i + 1] + RN [i] + RN [i]);
                break;
            case 8 :
                asRomanNumerals.append(RN [i + 1] + RN [i] + RN [i] + RN [i]);
                break;
            case 9 :
                asRomanNumerals.append(RN [i] + RN [i + 2]);
                break;
        }
        number = (int) number / 10;
        i += 2;
    }
    System.out.println (asRomanNumerals.reverse().toString());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
432
0
Gpt3D_Clone432_0.java 1 26
Gpt3D_Clone432_0.java 27 61
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

public String getName(String value) {
  StringBuilder buffer = new StringBuilder();
  String high, low;
  if (value.length() < getPartDivider()) {
    high = "";
    low = value;
  } else {
    int index = value.length() - getPartDivider();
    high = value.substring(0, index);
    low = value.substring(index);
  }
  String highName = "";
  String lowName = "";
  try {
    if (getHighProcessor() != null)
      highName = getHighProcessor().getName(high);
    if (getLowProcessor() != null)
      lowName = getLowProcessor().getName(low);
  } catch (Exception e) {
    e.printStackTrace();
  }
  if (!"".equals(highName)) {
    buffer.append(highName);
    buffer.append(SEPARATOR);
    buffer.append(getToken());
    if (!"".equals(lowName))
      buffer.append(SEPARATOR);
  }
  if (!"".equals(lowName))
    buffer.append(lowName);
  return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
432
1
Gpt3D_Clone432_1.java 1 26
Gpt3D_Clone432_1.java 27 57
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

public String getName(String value) {
  StringBuilder buffer = new StringBuilder();
  String high, low;
  if (value.length() < getPartDivider()) {
    high = "";
    low = value;
  } else {
    int index = value.length() - getPartDivider();
    high = value.substring(0, index);
    low = value.substring(index);
  }
  String highName = "";
  if (getHighProcessor() != null)
    highName = getHighProcessor().getName(high);
  String lowName = "";
  if (getLowProcessor() != null)
    lowName = getLowProcessor().getName(low);
  if (!"".equals(highName)) {
    buffer.append(highName);
    buffer.append(SEPARATOR);
    buffer.append(getToken());
    if (!"".equals(lowName))
      buffer.append(SEPARATOR);
  }
  if (!"".equals(lowName))
    buffer.append(lowName);
  return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
43
0
Gpt3D_Clone43_0.java 1 12
Gpt3D_Clone43_0.java 13 27
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    int i = 0;
    do {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
        i ++;
    } while (i < nums.length);
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
43
1
Gpt3D_Clone43_1.java 1 12
Gpt3D_Clone43_1.java 13 27
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    int i = 0;
    while (i < nums.length) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
        i ++;
    }
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
43
2
Gpt3D_Clone43_2.java 1 12
Gpt3D_Clone43_2.java 13 25
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

public int sum13(int[] nums) {
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] == 13) {
            i++;
        } else {
            sum += nums[i];
        }
    }
    return sum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
441
0
Gpt3D_Clone441_0.java 1 22
Gpt3D_Clone441_0.java 23 46
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};
    String [] strValues = new String [] {"0", "1.30", "0001.00", "3.141592"};
    for (long val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (String strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append ((char) ((Math.random () * 10) + '0'));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

public static void main (String...args) {
    processor = new DefaultProcessor ();
    int [] values = new int [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Integer.MAX_VALUE, Integer.MIN_VALUE};
    double [] strValues = new double [] {"0", "1.30", "0001.00", "3.141592"};
    for (int val : values) {
        System.out.println (val + " = " + processor.getName (val));
    }
    for (double strVal : strValues) {
        System.out.println (strVal + " = " + processor.getName (strVal));
    }
    StringBuilder bigNumber = new StringBuilder ();
    for (int d = 0;
    d < 66; d ++) {
        bigNumber.append (Math.floor(Math.random () * 10));
    }
    bigNumber.append (".");
    for (int d = 0;
    d < 26; d ++) {
        bigNumber.append (Math.floor(Math.random () * 10));
    }
    System.out.println (bigNumber.toString () + " = " + processor.getName (bigNumber.toString ()));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
443
0
Gpt3D_Clone443_0.java 1 23
Gpt3D_Clone443_0.java 24 51
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if (value == "") {
        number = 0;
    } else if (value.length () > 4) {
        String substring = value.substring (value.length () - 4);
        number = Integer.parseInt (substring, 10);
    } else {
        number = Integer.parseInt (value, 10);
    }
    number = number % 1000;
    if (number >= 100) {
        String name = unitProcessor.getName (number / 100);
        buffer.append (name);
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String result = tensProcessor.getName (number % 100);
    if (! "".equals (result) && number >= 100) {
        buffer.append (SEPARATOR);
    }
    buffer.append (result);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
443
1
Gpt3D_Clone443_1.java 1 23
Gpt3D_Clone443_1.java 24 51
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        String substr = value.substring (value.length () - 4);
        number = Integer.parseInt (substr, 10);
    } else {
        number = Integer.parseInt (value, 10);
    }
    number = number % 1000;
    if (number >= 100) {
        String unitName = unitProcessor.getName (number / 100);
        buffer.append (unitName);
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && number >= 100) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
443
2
Gpt3D_Clone443_2.java 1 23
Gpt3D_Clone443_2.java 24 48
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if (value.length () <= 4) {
        number = Integer.valueOf (value, 10);
    } else {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    }
    if (number >= 100) {
        buffer.append (tensProcessor.getName (number % 100));
        buffer.append (SEPARATOR);
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    } else {
        String tensName = tensProcessor.getName (number % 100);
        if (! "".equals (tensName)) {
            buffer.append (tensName);
            buffer.append (SEPARATOR);
        }
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
443
3
Gpt3D_Clone443_3.java 1 23
Gpt3D_Clone443_3.java 24 45
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if ("".equals (value)) {
        number = 0;
    } else if (value.length () > 4) {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    } else {
        number = Integer.valueOf (value, 10);
    }
    number %= 1000;
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
    }
    String tensName = tensProcessor.getName (number % 100);
    if (! "".equals (tensName) && (number >= 100)) {
        buffer.append (SEPARATOR);
    }
    buffer.append (tensName);
    return buffer.toString ();
}
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    int number;
    if (value.equals ("")) {
        number = 0;
    } else {
        number = Integer.valueOf (value.substring (value.length () - 4), 10);
    }
    if (number >= 100) {
        buffer.append (unitProcessor.getName (number / 100));
        buffer.append (SEPARATOR);
        buffer.append (SCALE.getName (EXPONENT));
        buffer.append (SEPARATOR);
        String tensName = tensProcessor.getName (number % 100);
        if (! "".equals (tensName)) {
            buffer.append (tensName);
        }
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
0
Gpt3D_Clone447_0.java 1 26
Gpt3D_Clone447_0.java 27 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

public String generateName (String value) {
    StringBuilder buffer = new StringBuilder(); 
    String high, low;
    if (value.length() < getPartDivider()) {
        low = value;
        high = "";
    } else {
        int index = value.length() - getPartDivider();
        high = value.substring(0, index);
        low = value.substring(index);
    }
    String highName = getHighProcessor().generateName(high);
    String lowName = getLowProcessor().generateName(low);
    if(!highName.equals("")) {
        buffer.append(highName).append(SEPARATOR).append(getToken()); 
        if (!lowName.equals("")) {
            buffer.append(SEPARATOR);
        }
    }
    if(!lowName.equals("")) {
        buffer.append(lowName);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
447
1
Gpt3D_Clone447_1.java 1 26
Gpt3D_Clone447_1.java 27 52
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder(); 
    String high, low;
    if (value.length() < getPartDivider()) {
        low = value;
        high = "";
    } else {
        int index = value.length() - getPartDivider();
        high = value.substring(0, index);
        low = value.substring(index);
    }
    String highName = getHighProcessor().getName(high);
    String lowName = getLowProcessor().getName(low);
    if(!highName.equals("")) {
        buffer.append(highName).append(SEPARATOR).append(getToken()); 
        if (!lowName.equals("")) {
            buffer.append(SEPARATOR);
        }
    }
    if(!lowName.equals("")) {
        buffer.append(lowName);
    }
    return buffer.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
449
0
Gpt3D_Clone449_0.java 1 26
Gpt3D_Clone449_0.java 27 54
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () < getPartDivider ()) {
        high = "";
        low = value;
    } else {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! "".equals (highName)) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! "".equals (lowName)) {
            buffer.append (SEPARATOR);
        }
    }
    if (! "".equals (lowName)) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

public String getName (String value) {
    StringBuilder buffer = new StringBuilder ();
    String high, low;
    if (value.length () > getPartDivider ()) {
        int index = value.length () - getPartDivider ();
        high = value.substring (0, index);
        low = value.substring (index);
    } else {
        high = "";
        low = value;
    }
    String highName = getHighProcessor ().getName (high);
    String lowName = getLowProcessor ().getName (low);
    if (! highName.equals ("")) {
        buffer.append (highName);
        buffer.append (SEPARATOR);
        buffer.append (getToken ());
        if (! lowName.equals ("")) {
            buffer.append (SEPARATOR);
        }
    }
    if (! lowName.equals ("")) {
        buffer.append (lowName);
    }
    return buffer.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
1
Gpt3D_Clone451_1.java 1 32
Gpt3D_Clone451_1.java 33 70
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

public String getName(String value) {
    boolean negative = false;
    if (value.startsWith("-")) {
        negative = true;
        value = value.substring(1);
    }
    int decimals = value.indexOf(".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring(decimals + 1);
        value = value.substring(0, decimals);
    }
    String name = processor.getName(value);
    if ("".equals(name)) { 
        name = ZERO_TOKEN;  
    }
    else if (negative) {
        name = MINUS.concat(SEPARATOR).concat(name);
    } 
    if(null == decimalValue || "".equals(decimalValue)) {
        return name;
    } 
    else {
        String[] parts = decimalValue.split("");
        int length = parts.length;
        for(int i = 0; i < length; i++) {
            if (parts[i].equals("0")) {
                name = name.concat(SEPARATOR).concat(UNION_AND).concat(SEPARATOR).concat("zero").concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
            } else {
                name = name.concat(SEPARATOR).concat(UNION_AND).concat(SEPARATOR).concat(processor.getName(decimalValue)).concat(SEPARATOR).concat(SCALE.getName(-decimalValue.length()));
            }
        }
    }  
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
451
2
Gpt3D_Clone451_2.java 1 32
Gpt3D_Clone451_2.java 33 65
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    String decimalValue = null;
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String name = processor.getName (value);
    if ("".equals (name)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (name);
    }
    if (! (null == decimalValue || "".equals (decimalValue))) {
        String zeroDecimalValue = "";
        for (int i = 0;
        i < decimalValue.length (); i ++) {
            zeroDecimalValue = zeroDecimalValue + "0";
        }
        if (decimalValue.equals (zeroDecimalValue)) {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat ("zero").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        } else {
            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
        }
    }
    return name;
}
----------------------------------------

public String getName (String value) {
    boolean negative = false;
    String decimalValue = null;
    String name;
    if (value.startsWith ("-")) {
        negative = true;
        value = value.substring (1);
    }
    int decimals = value.indexOf (".");
    if (0 <= decimals) {
        decimalValue = value.substring (decimals + 1);
        value = value.substring (0, decimals);
    }
    String valueName = processor.getName (value);
    if ("".equals (valueName)) {
        name = ZERO_TOKEN;
    } else if (negative) {
        name = MINUS.concat (SEPARATOR).concat (valueName);
    } else {
        name = valueName;
    }
    if (decimalValue != null) {
        if (decimalValue.length () == 0) {
            decimalValue = "zero";
        } else {
            decimalValue = processor.getName (decimalValue);
        }
        name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (decimalValue).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));
    }
    return name;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
452
0
Gpt3D_Clone452_0.java 1 15
Gpt3D_Clone452_0.java 16 34
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    for (int i = 0;
    i < len; i ++) {
        sop (args [i] + " ");
    }
    sop ("\n\t");
    while (len > 0) sop (args [args.length - len --] + " ");
    sopl ("");
}
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    while (len > 0) {
        sop (args [args.length - len --] + " ");
    }
    sop ("\n\t");
    for (int i = 0;
    i < len; i ++) {
        sop (args [i] + " ");
    }
    sopl ("");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
452
1
Gpt3D_Clone452_1.java 1 15
Gpt3D_Clone452_1.java 16 33
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    for (int i = 0;
    i < len; i ++) {
        sop (args [i] + " ");
    }
    sop ("\n\t");
    while (len > 0) sop (args [args.length - len --] + " ");
    sopl ("");
}
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    for (int i = 0; i < len; i ++) {
        sop (args [i]);
    }
    sop ("\n\t");
    while (len > 0) {
        sop (args [args.length - len --]);
    }
    sopl ("");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
453
0
Gpt3D_Clone453_0.java 1 13
Gpt3D_Clone453_0.java 14 33
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    int j;
    for (int i = 0;
    i <= len; i ++) {
        for (j = 0; j <= i; j ++) System.out.print ("*");
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    for (int i = 0;
    i <= len; i ++) {
        for (int j = 0; j <= i; j ++) System.out.print ("*");
        System.out.println ("");
    }
    int k = 0; 
    while (k <= len) {
        for (int l = 0; l <= k; l++) System.out.print ("*");
        System.out.println ("");
        k++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
453
1
Gpt3D_Clone453_1.java 1 13
Gpt3D_Clone453_1.java 14 31
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    int j;
    for (int i = 0;
    i <= len; i ++) {
        for (j = 0; j <= i; j ++) System.out.print ("*");
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    int j = 0;
    for (int i = 0;
    i <= len; i ++) {
        while (j <= i) {
            System.out.print ("*");
            j++;
        }
        System.out.println ("");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
456
1
Gpt3D_Clone456_1.java 1 15
Gpt3D_Clone456_1.java 16 35
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
            executorService.execute (() -> {
                Object obj = expensiveObjects.poll();
                System.out.println (obj);
            });
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
456
2
Gpt3D_Clone456_2.java 1 15
Gpt3D_Clone456_2.java 16 29
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main(String[] args) throws InterruptedException {
    BlockingQueue<Object> expensiveObjects = new LinkedBlockingQueue<>();
    expensiveObjects.put(new Object());
    expensiveObjects.put(new Object());
    expensiveObjects.put(new Object());
    expensiveObjects.put(new Object());
    for (int i = 0; i < 4; i++) {
        MyRunnable mr = new MyRunnable(expensiveObjects);
        mr.run();
    }
    System.out.println("Final: " + outputCount.get());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
457
1
Gpt3D_Clone457_1.java 1 10
Gpt3D_Clone457_1.java 11 29
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    AtomicInteger counter = new AtomicInteger ();
    ExecutorService pool = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; ++ i) {
        pool.execute (new MyTask (counter));
    }
    pool.shutdown ();
    pool.awaitTermination (1, TimeUnit.HOURS);
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    AtomicInteger counter = new AtomicInteger ();
    ExecutorService pool = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; ++ i) {
        pool.submit (new MyTask (counter));
    }
    while (!pool.isTerminated()) {
        pool.shutdown ();
        try {
            pool.awaitTermination (1, TimeUnit.HOURS);
        } catch (InterruptedException e) {
            System.err.println(e);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
457
2
Gpt3D_Clone457_2.java 1 10
Gpt3D_Clone457_2.java 11 29
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    AtomicInteger counter = new AtomicInteger ();
    ExecutorService pool = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; ++ i) {
        pool.execute (new MyTask (counter));
    }
    pool.shutdown ();
    pool.awaitTermination (1, TimeUnit.HOURS);
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    AtomicInteger counter = new AtomicInteger ();
    ExecutorService pool = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; ++ i) {
        pool.execute (new MyTask (counter));
    }
    while (!pool.isTerminated()) {
        pool.shutdown ();
        try {
            pool.awaitTermination (1, TimeUnit.HOURS);
        } catch (InterruptedException e) {
            System.err.println(e);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
458
0
Gpt3D_Clone458_0.java 1 15
Gpt3D_Clone458_0.java 16 32
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.add (Object1);
    expensiveObjects.add (Object2);
    expensiveObjects.add (Object3);
    expensiveObjects.add (Object4);
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final answer: " + outputCount.get ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
458
1
Gpt3D_Clone458_1.java 1 15
Gpt3D_Clone458_1.java 16 32
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    expensiveObjects.put (new Object ());
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (5, TimeUnit.SECONDS);
    System.out.println ("Final: " + outputCount.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    BlockingQueue < Object > expensiveObjects = new LinkedBlockingQueue < > ();
    expensiveObjects.offer (new Object ());
    expensiveObjects.offer (Object1);
    expensiveObjects.offer (Object2);
    expensiveObjects.offer (Object3);
    ExecutorService executorService = Executors.newFixedThreadPool (4);
    for (int i = 0;
    i < 4; i ++) {
        executorService.execute (new MyRunnable (expensiveObjects));
    }
    executorService.shutdown ();
    executorService.awaitTermination (6, TimeUnit.SECONDS);
    System.out.println ("Final output: " + outputCount.get ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
459
0
Gpt3D_Clone459_0.java 1 18
Gpt3D_Clone459_0.java 19 39
----------------------------------------

public void run () {
    while (true) {
        try {
            Object expensiveObject = expensiveObjects.take ();
            String output = task ();
            expensiveObjects.put (expensiveObject);
            if (output != null) {
                int counter = outputCount.getAndIncrement ();
                System.out.println (counter);
                if (counter >= 100) {
                    break;
                }
            }
        } catch (InterruptedException e) {
            System.out.println ("Error!");
        }
    }
}
----------------------------------------

public void running () {
    while (true) {
        try {
            Object expensiveObject = expensiveObjects.poll ();
            if (expensiveObject == null) {
                break;
            }
            String output = task ();
            int counter = outputCount.getAndIncrement ();
            System.out.println (counter);
            if (output != null && counter >= 100) {
                break;
            }
            expensiveObjects.offer (expensiveObject);
        } catch (InterruptedException e) {
            System.out.println ("Error!");
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
459
1
Gpt3D_Clone459_1.java 1 18
Gpt3D_Clone459_1.java 19 37
----------------------------------------

public void run () {
    while (true) {
        try {
            Object expensiveObject = expensiveObjects.take ();
            String output = task ();
            expensiveObjects.put (expensiveObject);
            if (output != null) {
                int counter = outputCount.getAndIncrement ();
                System.out.println (counter);
                if (counter >= 100) {
                    break;
                }
            }
        } catch (InterruptedException e) {
            System.out.println ("Error!");
        }
    }
}
----------------------------------------

public void execute() {
    try {
        while (true) {
            Object expensiveObject = expensiveObjects.take ();
            if (task () != null) {
                int counter = outputCount.getAndIncrement ();
                System.out.println (counter);
                if (counter >= 100) {
                    break;
                }
            }
            expensiveObjects.put (expensiveObject);
        }
    } catch (InterruptedException e) {
        System.out.println ("Error!");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
461
0
Gpt3D_Clone461_0.java 1 15
Gpt3D_Clone461_0.java 16 30
----------------------------------------

public byte [] hash (String password, byte [] salt) {
    Validate.notNull (password, "Password must not be null");
    Validate.notNull (salt, "Salt must not be null");
    try {
        final byte [] passwordBytes = password.getBytes ("UTF-8");
        final byte [] all = ArrayUtils.addAll (passwordBytes, salt);
        SHA3.DigestSHA3 md = new SHA3.Digest512 ();
        md.update (all);
        return md.digest ();
    } catch (UnsupportedEncodingException e) {
        final String message = String.format ("Caught UnsupportedEncodingException e: <%s>", e.getMessage ());
        LOGGER.error (message);
    }
    return new byte [0];
}
----------------------------------------

public byte [] hash (String password, byte [] salt) {
    Validate.notNull (password, "Password must not be null");
    Validate.notNull (salt, "Salt must not be null");
    try {
        final byte [] all = ArrayUtils.addAll (password.getBytes ("UTF-8"), salt);
        SHA3.DigestSHA3 md = new SHA3.Digest512 ();
        md.update (all);
        return md.digest ();
    } catch (UnsupportedEncodingException e) {
        LOGGER.error ("Caught UnsupportedEncodingException e: <{}>", e.getMessage ());
    }
    return new byte [0];
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
462
0
Gpt3D_Clone462_0.java 1 17
Gpt3D_Clone462_0.java 18 42
----------------------------------------

public boolean isExpectedPassword (final String password, final byte [] salt, final byte [] hash) {
    Validate.notNull (password, "Password must not be null");
    Validate.notNull (salt, "Salt must not be null");
    Validate.notNull (hash, "Hash must not be null");
    try {
        final byte [] passwordBytes = password.getBytes ("UTF-8");
        final byte [] all = ArrayUtils.addAll (passwordBytes, salt);
        SHA3.DigestSHA3 md = new SHA3.Digest512 ();
        md.update (all);
        final byte [] digest = md.digest ();
        return Arrays.equals (digest, hash);
    } catch (UnsupportedEncodingException e) {
        final String message = String.format ("Caught UnsupportedEncodingException e: <%s>", e.getMessage ());
        LOGGER.error (message);
    }
    return false;
}
----------------------------------------

public boolean isExpectedPassword (final String password, final byte [] salt, final byte [] hash) {
    Validate.notNull (password, "Password must not be null");
    Validate.notNull (salt, "Salt must not be null");
    Validate.notNull (hash, "Hash must not be null");
    try {
        final byte [] passwordBytes = password.getBytes ("UTF-8");
        final byte [] all = ArrayUtils.addAll (passwordBytes, salt);
        SHA3.DigestSHA3 md = new SHA3.Digest512 ();
        md.update (all);
        final byte [] digest = md.digest ();
        MessageDigest md2 = MessageDigest.getInstance ("SHA-512");
        md2.update (all);
        final byte [] digest2 = md2.digest ();
        return (Arrays.equals (digest, hash) || Arrays.equals (digest2, hash));
    } catch (UnsupportedEncodingException e) {
        final String message = String.format ("Caught UnsupportedEncodingException e: <%s>", e.getMessage ());
        LOGGER.error (message);
    } catch (NoSuchAlgorithmException e) {
        final String message = String.format ("Caught NoSuchAlgorithmException e: <%s>", e.getMessage ());
        LOGGER.error (message);
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
466
1
Gpt3D_Clone466_1.java 1 15
Gpt3D_Clone466_1.java 16 34
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    for (int year = 1901, last_year = 2000;
    year <= last_year; year ++) {
        for (int month = 1, last_month = 12;
        month <= last_month; month ++) {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
        }
    }
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

public static void main (String [] argv) {
    int counter = 0;
    int year = 1901, last_year = 2000;
    while (year <= last_year) {
        int month = 1, last_month = 12;
        while (month <= last_month) {
            Date d = new GregorianCalendar (year, month - 1, 1).getTime ();
            if (d.getDay () == 0) {
                counter ++;
                System.out.println (String.valueOf (counter) + " " + d);
            }
            month ++;
        }
        year ++;
    }
    System.out.println ("Total sunday in XX century: " + counter);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
0
Gpt3D_Clone468_0.java 1 9
Gpt3D_Clone468_0.java 10 20
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByName ("localhost");
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByName ("yahoo.com");
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
1
Gpt3D_Clone468_1.java 1 9
Gpt3D_Clone468_1.java 10 20
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByName ("localhost");
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByName ("google.com");
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
2
Gpt3D_Clone468_2.java 1 9
Gpt3D_Clone468_2.java 10 17
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
468
3
Gpt3D_Clone468_3.java 1 9
Gpt3D_Clone468_3.java 10 17
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
469
0
Gpt3D_Clone469_0.java 1 9
Gpt3D_Clone469_0.java 10 23
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    byte [] localhost = {127, 0, 0, 1};
    byte [] remotehost = {(byte) 173, (byte) 194, 32, 38};
    
    inet = InetAddress.getByAddress (localhost);
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (remotehost);
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
469
1
Gpt3D_Clone469_1.java 1 9
Gpt3D_Clone469_1.java 10 20
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getLocalHost ();
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByName ("google.com");
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
469
2
Gpt3D_Clone469_2.java 1 9
Gpt3D_Clone469_2.java 10 20
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

public static void main (String [] args) throws UnknownHostException, IOException {
    InetAddress inet;
    inet = InetAddress.getByName ("127.0.0.1");
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
    inet = InetAddress.getByName ("173.194.32.38");
    System.out.println ("Sending Ping Request to " + inet);
    System.out.println (inet.isReachable (5000) ? "Host is reachable" : "Host is NOT reachable");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
471
0
Gpt3D_Clone471_0.java 1 11
Gpt3D_Clone471_0.java 12 24
----------------------------------------

private String capitalize (String s) {
    if (s == null || s.length () == 0) {
        return "";
    }
    char first = s.charAt (0);
    if (Character.isUpperCase (first)) {
        return s;
    } else {
        return Character.toUpperCase (first) + s.substring (1);
    }
}
----------------------------------------

private String capitalize3 (String s) {
    if (s == null || s.length () == 0) {
        return "";
    }
    char first = s.charAt (0);
    if (Character.isLowerCase (first)) {
        return Character.toUpperCase (first) + s.substring (1);
    } else {
        return s;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
471
1
Gpt3D_Clone471_1.java 1 11
Gpt3D_Clone471_1.java 12 25
----------------------------------------

private String capitalize (String s) {
    if (s == null || s.length () == 0) {
        return "";
    }
    char first = s.charAt (0);
    if (Character.isUpperCase (first)) {
        return s;
    } else {
        return Character.toUpperCase (first) + s.substring (1);
    }
}
----------------------------------------

private String capitalize (String s) {
    if (s == null || s.length () == 0) {
        return "";
    }
    
    char first;
    if (Character.isUpperCase (first = s.charAt (0))) {
        return s;
    } else {
        return Character.toUpperCase (first) + s.substring (1);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
472
0
Gpt3D_Clone472_0.java 1 9
Gpt3D_Clone472_0.java 10 21
----------------------------------------

public void run () {
    JFrame frame2 = new JFrame ("Frame 2");
    frame2.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame2.getContentPane ().add (new JLabel ("Hello in frame 2"));
    frame2.pack ();
    frame2.setLocation (200, 200);
    frame2.setVisible (true);
    isThereReallyEDT ();
}
----------------------------------------

public void run2 () {
    JFrame frame2 = new JFrame ("Frame 2");
    frame2.getContentPane ().add (new JLabel ("Hello in frame 2"));
    frame2.pack ();
    frame2.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame2.setLocation (200, 200);
    isThereReallyEDT ();
    frame2.setVisible (true);
  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
473
0
Gpt3D_Clone473_0.java 1 16
Gpt3D_Clone473_0.java 17 36
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    Path pp = Paths.get (sourceDirPath);
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Stream < Path > paths = Files.walk (pp)) {
        paths.filter (path -> ! Files.isDirectory (path)).forEach (path -> {
            ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
            try {
                zs.putNextEntry (zipEntry);
                Files.copy (path, zs);
                zs.closeEntry ();
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

public static void pack (String sourceDirPath, String zipFilePath) throws IOException {
    Path p = Files.createFile (Paths.get (zipFilePath));
    Path pp = Paths.get (sourceDirPath);
    try (ZipOutputStream zs = new ZipOutputStream (Files.newOutputStream (p)); Iterable < Path > paths = () -> Files.walk (pp).iterator ()) {
        paths.forEach (path -> {
            try {
                if (! Files.isDirectory (path)) {
                    ZipEntry zipEntry = new ZipEntry (pp.relativize (path).toString ());
                    zs.putNextEntry (zipEntry);
                    Files.copy (path, zs);
                    zs.closeEntry ();
                }  
            } catch (IOException e) {
                System.err.println (e);
            }
        });
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
475
0
Gpt3D_Clone475_0.java 1 14
Gpt3D_Clone475_0.java 15 32
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File folder = new File (srcFolder);
    if (folder.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        for (String fileName : folder.list ()) {
            if (path.equals ("")) {
                addFileToZip (folder.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path + "/" + folder.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

private void addFolderToZip (String path, String srcFolder, ZipOutputStream zip) throws IOException {
    File directory = new File (srcFolder);
    if (directory.list ().length == 0) {
        addFileToZip (path, srcFolder, zip, true);
    } else {
        String[] files = directory.list ();
        for (String fileName : files) {
            if (path.isEmpty ()) {
                addFileToZip (directory.getName (), srcFolder + "/" + fileName, zip, false);
            } else {
                addFileToZip (path +  "/" + directory.getName (), srcFolder + "/" + fileName, zip, false);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
476
0
Gpt3D_Clone476_0.java 1 12
Gpt3D_Clone476_0.java 13 24
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D gg = (Graphics2D) g;
    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Font font = new Font ("Arial", Font.PLAIN, 15);
    String string = "Time (s)";
    FontMetrics metrics = g.getFontMetrics (font);
    int width = metrics.stringWidth (string);
    int height = metrics.getHeight ();
    gg.setFont (font);
    drawRotate (gg, getWidth (), (getHeight () + width) / 2, 270, string);
}
----------------------------------------

public void paintComponent (Graphics g) {
    Graphics2D gg = (Graphics2D) g;
    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Font font = new Font ("Arial", Font.PLAIN, 15);
    FontMetrics metrics = g.getFontMetrics (font);
    int height = metrics.getHeight ();
    gg.setFont (font);
    String string = "Time (s)";
    drawRotate (gg, getWidth (), (getHeight () + height) / 2, 270, string);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
478
0
Gpt3D_Clone478_0.java 1 12
Gpt3D_Clone478_0.java 13 23
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D gg = (Graphics2D) g;
    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Font font = new Font ("Arial", Font.PLAIN, 15);
    String string = "Time (s)";
    FontMetrics metrics = g.getFontMetrics (font);
    int width = metrics.stringWidth (string);
    int height = metrics.getHeight ();
    gg.setFont (font);
    drawRotate (gg, getWidth (), (getHeight () + width) / 2, 270, string);
}
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D gg = (Graphics2D) g;
    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    String string = "Time (s)";
    FontMetrics metrics = g.getFontMetrics (new Font ("Arial", Font.PLAIN, 15));
    int height = metrics.getHeight ();
    drawRotate (gg, getWidth (), (getHeight () + metrics.stringWidth (string)) / 2, 270, string);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
478
1
Gpt3D_Clone478_1.java 1 12
Gpt3D_Clone478_1.java 13 22
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D gg = (Graphics2D) g;
    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Font font = new Font ("Arial", Font.PLAIN, 15);
    String string = "Time (s)";
    FontMetrics metrics = g.getFontMetrics (font);
    int width = metrics.stringWidth (string);
    int height = metrics.getHeight ();
    gg.setFont (font);
    drawRotate (gg, getWidth (), (getHeight () + width) / 2, 270, string);
}
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D gg = (Graphics2D) g;
    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    String string = "Time (s)";
    int width = g.getFontMetrics (new Font ("Arial", Font.PLAIN, 15)).stringWidth (string);
    drawRotate (gg, getWidth (), (getHeight () + width) / 2, 270, string);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
47
0
Gpt3D_Clone47_0.java 1 16
Gpt3D_Clone47_0.java 17 34
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root.next;
    int taken = 0, limit = 2;
    while (fast != null) {
        if (slow == fast) return true;
        taken ++;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
        fast = fast.next;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
489
1
Gpt3D_Clone489_1.java 1 24
Gpt3D_Clone489_1.java 25 59
----------------------------------------

int computeHeight () {
    int maxHeight = 0;
    int [] heights = new int [parent.length];
    for (int vertex = 0;
    vertex < n; vertex ++) {
        if (heights [vertex] != 0) continue;
        int height = 0;
        for (int i = vertex;
        i != - 1; i = parent [i]) {
            if (heights [i] != 0) {
                height += heights [i];
                break;
            }
            height ++;
        }
        maxHeight = Math.max (maxHeight, height);
        for (int i = vertex;
        i != - 1; i = parent [i]) {
            if (heights [i] != 0) break;
            heights [i] = height --;
        }
    }
    return maxHeight;
}
----------------------------------------

int computeHeight () {
    int maxHeight = 0;
    int [] heights = new int [parent.length];
    for (int vertex = 0;
    vertex < n; vertex ++) {
        if (heights [vertex] != 0) {
            continue;
        }
        
        int height = 0;
        int temp = vertex;
        while (temp != - 1) {
            if (heights [temp] != 0) {
                height += heights [temp];
                break;
            }
            
            height ++;
            temp = parent [temp];
        }
        
        maxHeight = Math.max (maxHeight, height);
        while (temp != - 1) {
            if (heights [temp] != 0) {
                break;
            }
            
            heights [temp] = height --;
            temp = parent [temp];
        }
    }
    return maxHeight;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
48
0
Gpt3D_Clone48_0.java 1 16
Gpt3D_Clone48_0.java 17 34
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0;
 
    while (fast.next != null) {
        taken ++;
        fast = fast.next;
        if (slow == fast) return true;
        if (taken == 2) {
            taken = 0;
            slow = fast; 
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
48
1
Gpt3D_Clone48_1.java 1 16
Gpt3D_Clone48_1.java 17 32
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
    int taken = 0, limit = 2;
    while (fast.next != null) {
        fast = fast.next;
        taken ++;
        if (slow == fast) return true;
        if (taken == limit) {
            taken = 0;
            limit <<= 1;
            slow = fast;
        }
    }
    return false;
}
----------------------------------------

public static boolean hasLoop (Node root) {
    if (root == null) return false;
    Node slow = root, fast = root;
 
    while (fast.next != null) {
        fast = fast.next;
        if (slow == fast) return true;
 
        if (slow == fast.next) {
            slow = fast; 
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
490
0
Gpt3D_Clone490_0.java 1 10
Gpt3D_Clone490_0.java 11 22
----------------------------------------

static public void main (String [] argv) {
    System.out.println ("start");
    new C0 ();
    try {
        System.out.println ("retrieve item: " + nested.innerItem);
    } catch (Exception e) {
        System.out.println ("failed to retrieve item: " + e.toString ());
    }
    System.out.println ("finish");
}
----------------------------------------

static public void main (String [] argv) {
    System.out.println ("start");
    C0 obj = new C0 ();
    try {
        System.out.println ("retrieve item: " + obj.nested.innerItem);
    } catch (Exception e) {
        System.out.println ("failed to retrieve item: " + e.toString ());
    }
    System.out.println ("finish");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
490
1
Gpt3D_Clone490_1.java 1 10
Gpt3D_Clone490_1.java 11 22
----------------------------------------

static public void main (String [] argv) {
    System.out.println ("start");
    new C0 ();
    try {
        System.out.println ("retrieve item: " + nested.innerItem);
    } catch (Exception e) {
        System.out.println ("failed to retrieve item: " + e.toString ());
    }
    System.out.println ("finish");
}
----------------------------------------

static public void main (String [] argv) {
    System.out.println ("start");
    C0 obj = new C0 ();
    try {
        System.out.println ("retrieve item: " + obj.getNested().getInnerItem());
    } catch (Exception e) {
        System.out.println ("failed to retrieve item: " + e.toString ());
    }
    System.out.println ("finish");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
490
2
Gpt3D_Clone490_2.java 1 10
Gpt3D_Clone490_2.java 11 22
----------------------------------------

static public void main (String [] argv) {
    System.out.println ("start");
    new C0 ();
    try {
        System.out.println ("retrieve item: " + nested.innerItem);
    } catch (Exception e) {
        System.out.println ("failed to retrieve item: " + e.toString ());
    }
    System.out.println ("finish");
}
----------------------------------------

public static void main (String [] argv){
    System.out.println ("start");
    C0 c0Object = new C0 ();
    try {
        System.out.println ("retrieve item: " + nested.innerItem);
    } catch (Exception e){
        System.out.println ("failed to retrieve item: " + e.toString());
    }
    System.out.println ("finish");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
490
3
Gpt3D_Clone490_3.java 1 10
Gpt3D_Clone490_3.java 11 22
----------------------------------------

static public void main (String [] argv) {
    System.out.println ("start");
    new C0 ();
    try {
        System.out.println ("retrieve item: " + nested.innerItem);
    } catch (Exception e) {
        System.out.println ("failed to retrieve item: " + e.toString ());
    }
    System.out.println ("finish");
}
----------------------------------------

static void main (String [] argv) {
    System.out.println ("start");
    try {
        C0 c0Object = new C0 ();
        System.out.println ("retrieve item: " + nested.innerItem);
    } catch (Exception e) {
        System.out.println ("failed to retrieve item: " + e.toString ());
    }
    System.out.println ("finish");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
491
0
Gpt3D_Clone491_0.java 1 9
Gpt3D_Clone491_0.java 10 22
----------------------------------------

public synchronized void run () {
    try {
        while (true) {
            System.out.println (info);
            wait ();
        }
    } catch (Exception e) {
    }
}
----------------------------------------

public void run () {
    try {
        while (true) {
            synchronized (this) {
                System.out.println (info);
                wait ();
            }
        }
    } catch (Exception e) {
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
491
1
Gpt3D_Clone491_1.java 1 9
Gpt3D_Clone491_1.java 10 22
----------------------------------------

public synchronized void run () {
    try {
        while (true) {
            System.out.println (info);
            wait ();
        }
    } catch (Exception e) {
    }
}
----------------------------------------

public void run() {
    synchronized (this) {
        try {
            while (true) {
                System.out.println (info);
                wait ();
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
493
0
Gpt3D_Clone493_0.java 1 20
Gpt3D_Clone493_0.java 21 42
----------------------------------------

public static void main (String [] args) {
    int n = 15;
    int [] [] pascal = new int [n + 1] [];
    pascal [1] = new int [1 + 2];
    pascal [1] [1] = 1;
    for (int i = 2;
    i <= n; i ++) {
        pascal [i] = new int [i + 2];
        for (int j = 1;
        j < pascal [i].length - 1; j ++) pascal [i] [j] = pascal [i - 1] [j - 1] + pascal [i - 1] [j];
    }
    for (int i = 1;
    i <= n; i ++) {
        for (int j = 1;
        j < pascal [i].length - 1; j ++) {
            System.out.print (pascal [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int n = 15;
    int [] [] pascal = new int [n + 1] [];
    pascal [1] = new int [1 + 2];
    pascal [1] [1] = 1;
    int i;
    int j;
    for (i = 2; i <= n; i ++) {
        pascal [i] = new int [i + 2];
        for (j = 1; j < pascal [i].length - 1; j ++) {
            pascal [i] [j] = pascal [i - 1] [j - 1] + pascal [i - 1] [j];
        }
    }
    for (i = 1; i <= n; i ++) {
        for (j = 1; j < pascal [i].length - 1; j ++) {
            System.out.print (pascal [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
494
0
Gpt3D_Clone494_0.java 1 10
Gpt3D_Clone494_0.java 11 22
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX = - 1 * deltaX;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY = - 1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX *= -1;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY *= -1;
    }
    x += deltaX;
    y += deltaY;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
494
3
Gpt3D_Clone494_3.java 1 10
Gpt3D_Clone494_3.java 11 22
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX = - 1 * deltaX;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY = - 1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX *= -1;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY *= -1;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
495
1
Gpt3D_Clone495_1.java 1 10
Gpt3D_Clone495_1.java 11 22
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX = - 1 * deltaX;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY = - 1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

public void move(Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX *= -1;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY *= -1;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
495
2
Gpt3D_Clone495_2.java 1 10
Gpt3D_Clone495_2.java 11 22
----------------------------------------

public void move (Container container) {
    if (x >= canvasWidth || x <= 0) {
        deltaX = - 1 * deltaX;
    }
    if (y >= canvasHeight || y <= 0) {
        deltaY = - 1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

public void move (Canvas canvas) {
    if (x >= canvas.width || x <= 0) {
        deltaX = - 1 * deltaX;
    }
    if (y >= canvas.height || y <= 0) {
        deltaY = - 1 * deltaY;
    }
    x += deltaX;
    y += deltaY;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
497
0
Gpt3D_Clone497_0.java 1 21
Gpt3D_Clone497_0.java 22 44
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Window window = this.getWindow ();
    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
    txtMessage = (TextView) findViewById (R.id.txtMesssage);
    Button buttonOne = (Button) findViewById (R.id.block1);
    Button buttonTwo = (Button) findViewById (R.id.block2);
    Button buttonThree = (Button) findViewById (R.id.block3);
    Button buttonFour = (Button) findViewById (R.id.block4);
    Button buttonFive = (Button) findViewById (R.id.block5);
    Button buttonSix = (Button) findViewById (R.id.block6);
    buttonOne.setOnClickListener (this);
    buttonTwo.setOnClickListener (this);
    buttonThree.setOnClickListener (this);
    buttonFour.setOnClickListener (this);
    buttonFive.setOnClickListener (this);
    buttonSix.setOnClickListener (this);
}
----------------------------------------

protected void onCreate (Bundle savedState) {
    super.onCreate (savedState);
    setContentView (R.layout.activity_main);
    Window window = this.getWindow ();
    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
    TextView txtMessage = findViewById (R.id.txtMesssage);
    Button but1 = findViewById (R.id.block1);
    Button but2 = findViewById (R.id.block2);
    Button but3 = findViewById (R.id.block3);
    Button but4 = findViewById (R.id.block4);
    Button but5 = findViewById (R.id.block5);
    Button but6 = findViewById (R.id.block6);
    but1.setOnClickListener (this);
    but2.setOnClickListener (this);
    but3.setOnClickListener (this);
    but4.setOnClickListener (this);
    but5.setOnClickListener (this);
    but6.setOnClickListener (this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
497
1
Gpt3D_Clone497_1.java 1 21
Gpt3D_Clone497_1.java 22 44
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Window window = this.getWindow ();
    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
    txtMessage = (TextView) findViewById (R.id.txtMesssage);
    Button buttonOne = (Button) findViewById (R.id.block1);
    Button buttonTwo = (Button) findViewById (R.id.block2);
    Button buttonThree = (Button) findViewById (R.id.block3);
    Button buttonFour = (Button) findViewById (R.id.block4);
    Button buttonFive = (Button) findViewById (R.id.block5);
    Button buttonSix = (Button) findViewById (R.id.block6);
    buttonOne.setOnClickListener (this);
    buttonTwo.setOnClickListener (this);
    buttonThree.setOnClickListener (this);
    buttonFour.setOnClickListener (this);
    buttonFive.setOnClickListener (this);
    buttonSix.setOnClickListener (this);
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView (R.layout.activity_main);
    Window window = this.getWindow ();
    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
    TextView txtMessage = findViewById(R.id.txtMesssage);
    Button block1 = findViewById(R.id.block1);
    Button block2 = findViewById(R.id.block2);
    Button block3 = findViewById(R.id.block3);
    Button block4 = findViewById(R.id.block4);
    Button block5 = findViewById(R.id.block5);
    Button block6 = findViewById(R.id.block6);
    block1.setOnClickListener (this);
    block2.setOnClickListener (this);
    block3.setOnClickListener (this);
    block4.setOnClickListener (this);
    block5.setOnClickListener (this);
    block6.setOnClickListener (this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
497
2
Gpt3D_Clone497_2.java 1 21
Gpt3D_Clone497_2.java 22 38
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Window window = this.getWindow ();
    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
    txtMessage = (TextView) findViewById (R.id.txtMesssage);
    Button buttonOne = (Button) findViewById (R.id.block1);
    Button buttonTwo = (Button) findViewById (R.id.block2);
    Button buttonThree = (Button) findViewById (R.id.block3);
    Button buttonFour = (Button) findViewById (R.id.block4);
    Button buttonFive = (Button) findViewById (R.id.block5);
    Button buttonSix = (Button) findViewById (R.id.block6);
    buttonOne.setOnClickListener (this);
    buttonTwo.setOnClickListener (this);
    buttonThree.setOnClickListener (this);
    buttonFour.setOnClickListener (this);
    buttonFive.setOnClickListener (this);
    buttonSix.setOnClickListener (this);
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Window window = this.getWindow ();
    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
    txtMessage = (TextView) findViewById (R.id.txtMesssage);
    Button buttonTwo = (Button) findViewById (R.id.block2);
    Button buttonFour = (Button) findViewById (R.id.block4);
    Button buttonSix = (Button) findViewById (R.id.block6);
    buttonTwo.setOnClickListener (this);
    buttonFour.setOnClickListener (this);
    buttonSix.setOnClickListener (this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
497
3
Gpt3D_Clone497_3.java 1 21
Gpt3D_Clone497_3.java 22 38
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Window window = this.getWindow ();
    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
    txtMessage = (TextView) findViewById (R.id.txtMesssage);
    Button buttonOne = (Button) findViewById (R.id.block1);
    Button buttonTwo = (Button) findViewById (R.id.block2);
    Button buttonThree = (Button) findViewById (R.id.block3);
    Button buttonFour = (Button) findViewById (R.id.block4);
    Button buttonFive = (Button) findViewById (R.id.block5);
    Button buttonSix = (Button) findViewById (R.id.block6);
    buttonOne.setOnClickListener (this);
    buttonTwo.setOnClickListener (this);
    buttonThree.setOnClickListener (this);
    buttonFour.setOnClickListener (this);
    buttonFive.setOnClickListener (this);
    buttonSix.setOnClickListener (this);
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.id.activity_main);
    Window window = this.getWindow ();
    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
    txtMessage = (TextView) findViewById (R.id.txtMesssage);
    Button buttonOne = (Button) findViewById (R.id.block1);
    Button buttonThree = (Button) findViewById (R.id.block3);
    Button buttonFive = (Button) findViewById (R.id.block5);
    buttonOne.setOnClickListener (this);
    buttonThree.setOnClickListener (this);
    buttonFive.setOnClickListener (this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
498
0
Gpt3D_Clone498_0.java 1 13
Gpt3D_Clone498_0.java 14 33
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == 0) {
        try {
            Bitmap cameraBitmap;
            cameraBitmap = BitmapFactory.decodeFile (myFilesDir + "/temp.jpg");
            Bitmap.createBitmap (cameraBitmap);
            ivPhoto.setImageBitmap (cameraBitmap);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == 0) {
        try {
            Bitmap cameraBitmap;
            cameraBitmap = BitmapFactory.decodeFile (myFilesDir + "/temp.jpg");
            Bitmap circleBitmap = Bitmap.createBitmap (cameraBitmap.getWidth (), cameraBitmap.getHeight (), Bitmap.Config.ARGB_8888);
            Paint paint = new Paint ();
            Canvas c = new Canvas (circleBitmap);
            c.drawCircle (cameraBitmap.getWidth ()/2, cameraBitmap.getHeight ()/2, cameraBitmap.getWidth ()/2, paint);
            paint.setXfermode (new PorterDuffXfermode (PorterDuff.Mode.SRC_IN));
            c.drawBitmap (cameraBitmap, 0, 0, paint);
            ivPhoto.setImageBitmap (circleBitmap);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
506
0
Gpt3D_Clone506_0.java 1 14
Gpt3D_Clone506_0.java 15 30
----------------------------------------

public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (! isImageExist (strfilename)) {
        image = ImageIO.read (new File ("NOIMAGE.jpg"));
    } else {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (isImageExist (strfilename)) {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    } else {
        image = ImageIO.read (new File ("NOIMAGE.jpg"));
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
506
1
Gpt3D_Clone506_1.java 1 14
Gpt3D_Clone506_1.java 15 29
----------------------------------------

public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (! isImageExist (strfilename)) {
        image = ImageIO.read (new File ("NOIMAGE.jpg"));
    } else {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

public void displayImage(String strfilename, JLabel JLlabel) {
    ImageIcon icon = null;
    if (!isImageExist(strfilename)) {
        icon = new ImageIcon(new File("NOIMAGE.jpg").getAbsolutePath());
    } else {
        try {
            icon = new ImageIcon(ImageIO.read(new File(strfilename + ".jpg")));
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }
    JLlabel.setIcon(icon);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
506
2
Gpt3D_Clone506_2.java 1 14
Gpt3D_Clone506_2.java 15 28
----------------------------------------

public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (! isImageExist (strfilename)) {
        image = ImageIO.read (new File ("NOIMAGE.jpg"));
    } else {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (isImageExist (strfilename)) {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            image = ImageIO.read (new File ("NOIMAGE.jpg"));
        }
    } 
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
508
0
Gpt3D_Clone508_0.java 1 11
Gpt3D_Clone508_0.java 12 22
----------------------------------------

public void run () {
    WhiteSpace ws = new WhiteSpace ();
    Container gui = ws.getGui ();
    JFrame f = new JFrame ("White (OK Red) Space");
    f.add (gui);
    f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
    f.setLocationByPlatform (true);
    f.setResizable (false);
    f.pack ();
    f.setVisible (true);
}
----------------------------------------

public void run () {
    WhiteSpace ws = new WhiteSpace ();
    Container gui = ws.getGui ();
    JFrame f = new JFrame ("White (Blue Red) Space");
    f.add (gui);
    f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
    f.setSize(400, 300);
    f.setVisible (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
50
0
Gpt3D_Clone50_0.java 1 17
Gpt3D_Clone50_0.java 18 38
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("\t\tPlease enter the maximum: ");
    int max = input.nextInt ();
    System.out.print ("\t\tPlease enter the minimum: ");
    int min = input.nextInt ();
    System.out.print ("enter: ");
    Scanner lineInput = new Scanner (System.in);
    String word = lineInput.nextLine ();
    String [] lengthword = word.split ("\\s+");
    int countwords = lengthword.length;
    if (countwords <= max && countwords >= min) {
        System.out.println ("YAY!!!!!!!!! YOU'RE WTHIN THE RAAAANGE!!!!!!!!!!!!!!!!!!!!!!!");
    } else {
        System.out.println ("Ohh!!!!!!!!! YOU'RE Not in RAAAANGE!!!!!!!!!!!!!!!!!!!!!!!");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("\t\tPlease enter the maximum: ");
    int max = input.nextInt ();
    System.out.print ("\t\tPlease enter the minimum: ");
    int min = input.nextInt ();
    System.out.print ("enter: ");
    Scanner lineInput = new Scanner (System.in);
    int countwords = 0;
    while (lineInput.hasNext()) {
      lineInput.next();
      countwords++;
    }
    if (countwords <= max && countwords >= min) {
        System.out.println ("YAY!!!!!!!!! YOU'RE WTHIN THE RAAAANGE!!!!!!!!!!!!!!!!!!!!!!!");
    } else {
        System.out.println ("Ohh!!!!!!!!! YOU'RE Not in RAAAANGE!!!!!!!!!!!!!!!!!!!!!!!");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
511
0
Gpt3D_Clone511_0.java 1 10
Gpt3D_Clone511_0.java 11 22
----------------------------------------

public static boolean isBetween (int currentMonth, int currentDay, int fromMonth, int fromDay, int untilMonth, int untilDay) {
    MonthDay current = MonthDay.of (currentMonth, currentDay);
    MonthDay from = MonthDay.of (fromMonth, fromDay);
    MonthDay until = MonthDay.of (untilMonth, untilDay);
    if (from.compareTo (until) <= 0) {
        return from.compareTo (current) <= 0 && current.compareTo (until) <= 0;
    } else {
        return current.compareTo (until) <= 0 || current.compareTo (from) >= 0;
    }
}
----------------------------------------

public static boolean isBetween (int cMonth, int cDay, int fMonth, int fDay, int uMonth, int uDay) {
    MonthDay c = MonthDay.of(cMonth, cDay);
    MonthDay f = MonthDay.of(fMonth, fDay);
    MonthDay u = MonthDay.of(uMonth, uDay);
    if(f.compareTo(u) <= 0) {
        return (f.compareTo(c) <= 0) && (c.compareTo(u) <= 0);
    } else {
        return (c.compareTo(u)<=0) || (c.compareTo(f)>=0);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
513
0
Gpt3D_Clone513_0.java 1 9
Gpt3D_Clone513_0.java 10 20
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    size = Integer.parseInt ((String) box.getSelectedItem ());
    if (e.getStateChange () == ItemEvent.SELECTED) {
        for (i = 1; i <= size; i ++) {
            System.out.print (" " + i);
        }
        System.out.println ();
    }
}
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    int num = Integer.parseInt ((String) box.getSelectedItem ());
    if (e.getStateChange () == ItemEvent.SELECTED) {
        for (int k = 1; k <= num; k ++) {
            System.out.print (" " + k);
        }
        System.out.println ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
515
0
Gpt3D_Clone515_0.java 1 10
Gpt3D_Clone515_0.java 11 24
----------------------------------------

public int add (Distance newDistance) {
    int newDistanceFeet = newDistance.getFeet ();
    int newDistanceInches = newDistance.getInches ();
    int sumInches = newDistanceInches + this.getInches ();
    int sumFeet = newDistanceFeet + this.getFeet ();
    sumInches += (sumInches % 12);
    sumFeet += (sumInches / 12);
    this.setFeet (sumFeet);
    this.setInches (sumInches);
}
----------------------------------------

public int add (Distance newDistance) {
    int newDistanceFeet = newDistance.getFeet ();
    int newDistanceInches = newDistance.getInches ();
    int sumInches = newDistanceInches + this.getInches ();
    int sumFeet = newDistanceFeet + this.getFeet ();
    if (sumInches > 12) {
        sumFeet = sumFeet + (sumInches % 12);
        sumInches = 12;
    }
    this.setFeet (sumFeet);
    this.setInches (sumInches);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
515
1
Gpt3D_Clone515_1.java 1 10
Gpt3D_Clone515_1.java 11 24
----------------------------------------

public int add (Distance newDistance) {
    int newDistanceFeet = newDistance.getFeet ();
    int newDistanceInches = newDistance.getInches ();
    int sumInches = newDistanceInches + this.getInches ();
    int sumFeet = newDistanceFeet + this.getFeet ();
    sumInches += (sumInches % 12);
    sumFeet += (sumInches / 12);
    this.setFeet (sumFeet);
    this.setInches (sumInches);
}
----------------------------------------

public int add (Distance newDistance) {
    int newDistanceFeet = newDistance.getFeet ();
    int newDistanceInches = newDistance.getInches ();
    int sumInches = newDistanceInches + this.getInches ();
    int sumFeet = newDistanceFeet + this.getFeet ();
    while (sumInches >= 12) {
        sumFeet++;
        sumInches -= 12;
    }
    this.setFeet (sumFeet);
    this.setInches (sumInches);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
0
Gpt3D_Clone517_0.java 1 10
Gpt3D_Clone517_0.java 11 23
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    int count = o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    int numNegatives = o_tc1.getOutput (y);
    System.out.println (numNegatives);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
517
1
Gpt3D_Clone517_1.java 1 10
Gpt3D_Clone517_1.java 11 23
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    o_tc.getOutput (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    o_tc1.getOutput (y);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    CodilityTest o_tc = new CodilityTest ();
    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};
    int [] y = new int [0];
    o_tc.setInput (x);
    int count = o_tc.getNumNegatives (x);
    System.out.println (count);
    CodilityTest o_tc1 = new CodilityTest ();
    int numNegatives = o_tc1.getNumNegatives (y);
    System.out.println (numNegatives);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
519
0
Gpt3D_Clone519_0.java 1 22
Gpt3D_Clone519_0.java 23 47
----------------------------------------

public void inOrder () {
    if (m_root == null) {
        return;
    }
    Stack < BSTNode > myStack = new Stack < BSTNode > ();
    BSTNode current = m_root;
    while (current != null) {
        myStack.push (current);
        current = current.getLeft ();
    }
    while (! myStack.isEmpty ()) {
        current = (BSTNode) myStack.pop ();
        System.out.print (current.getInfo () + " ");
        if (current.getRight () != null) {
            current = current.getRight ();
            while (current != null) {
                myStack.push (current);
                current = current.getLeft ();
            }
        }
    }
}
----------------------------------------

public void inOrder3 () {
    if (m_root == null) {
        return;
    }
    boolean notDone = true;
    Stack < BSTNode > nodeStack = new Stack < BSTNode > ();
    BSTNode curNode = m_root;
    while (notDone) {
        if (curNode != null) {
            nodeStack.push (curNode);
            curNode = curNode.getLeft ();
        } else {
            if (! nodeStack.isEmpty ()) {
                curNode = (BSTNode) nodeStack.pop ();
                System.out.print (curNode.getInfo () + " ");
                curNode = curNode.getRight ();
            } else {
                notDone = false;
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
520
0
Gpt3D_Clone520_0.java 1 9
Gpt3D_Clone520_0.java 10 24
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int read = raf.read (data);
    raf.close ();
    if (read == data.length) return data;
    else return Arrays.copyOf (data, read);
}
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = null;
    try {
        raf = new RandomAccessFile (f, "r");
        raf.seek (startByte);
        byte [] data = new byte [chunkSize];
        int read = raf.read (data);
        if (read == data.length) return data;
        else return Arrays.copyOf (data, read);
    } finally {
        if (raf != null) raf.close ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
520
1
Gpt3D_Clone520_1.java 1 9
Gpt3D_Clone520_1.java 10 22
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int read = raf.read (data);
    raf.close ();
    if (read == data.length) return data;
    else return Arrays.copyOf (data, read);
}
----------------------------------------

private int readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int read = raf.read (data);
    raf.close ();
    if (read == data.length)
        return 1;
    else 
        return Arrays.copyOf (data, read);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
520
2
Gpt3D_Clone520_2.java 1 9
Gpt3D_Clone520_2.java 10 20
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int read = raf.read (data);
    raf.close ();
    if (read == data.length) return data;
    else return Arrays.copyOf (data, read);
}
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int read = raf.read (data);
    raf.close ();
    if (read != data.length) return Arrays.copyOf (data, read);
    else return data;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
524
0
Gpt3D_Clone524_0.java 1 15
Gpt3D_Clone524_0.java 16 34
----------------------------------------

public static String decrypt (final String msg) {
    final Pattern regex = Pattern.compile ("((\\d\\d)(#)|(\\d))");
    final Matcher regexMatcher = regex.matcher (msg);
    final StringBuffer result = new StringBuffer ();
    String c;
    while (regexMatcher.find ()) {
        if (regexMatcher.group (2) == null) {
            c = regexMatcher.group (1);
        } else {
            c = regexMatcher.group (2);
        }
        result.append ((char) ((Integer.parseInt (c) + 'a') - 1));
    }
    return result.toString ();
}
----------------------------------------

public static String decrypt (final String msg) {
    final Pattern regex = Pattern.compile ("((\\d\\d)(#)|(\\d))");
    final Matcher regexMatcher = regex.matcher (msg);
    final StringBuffer result = new StringBuffer ();
    int temp;
    char c;
    while (regexMatcher.find ()) {
        if (regexMatcher.group (2) == null) {
            temp = Integer.parseInt (regexMatcher.group (1));
        } else {
            temp = Integer.parseInt (regexMatcher.group (2));
        }
        c = (char) (temp + 'a' - 1);
        result.append (c);
    }
    return result.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
524
1
Gpt3D_Clone524_1.java 1 15
Gpt3D_Clone524_1.java 16 32
----------------------------------------

public static String decrypt (final String msg) {
    final Pattern regex = Pattern.compile ("((\\d\\d)(#)|(\\d))");
    final Matcher regexMatcher = regex.matcher (msg);
    final StringBuffer result = new StringBuffer ();
    String c;
    while (regexMatcher.find ()) {
        if (regexMatcher.group (2) == null) {
            c = regexMatcher.group (1);
        } else {
            c = regexMatcher.group (2);
        }
        result.append ((char) ((Integer.parseInt (c) + 'a') - 1));
    }
    return result.toString ();
}
----------------------------------------

public static String decrypt (final String msg) {
    final Pattern regex = Pattern.compile ("((\\d\\d)(#)|(\\d))");
    final Matcher regexMatcher = regex.matcher (msg);
    final StringBuffer result = new StringBuffer ();
    int temp;
    while (regexMatcher.find ()) {
        if (regexMatcher.group (2) == null) {
            temp = Integer.parseInt (regexMatcher.group (1));
        } else {
            temp = Integer.parseInt (regexMatcher.group (2));
        }
        result.append ((char) (temp + 'a' - 1));
    }
    return result.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
525
0
Gpt3D_Clone525_0.java 1 28
Gpt3D_Clone525_0.java 29 53
----------------------------------------

private static String decrypt (final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0;
    i < groups.length; i ++) {
        final String group = groups [i];
        int j = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            j = group.length ();
        }
        if (group.length () > 2) {
            j = group.length () - 2;
        }
        for (int k = 0;
        k < j; k ++) {
            crypt.add (Integer.valueOf (group.substring (k, k + 1)));
        }
        if (j < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (j, group.length ())));
        }
    }
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------

private static String decrypt(final String s) {
    final List<Integer>crypt = new ArrayList<>();
    final String[] groups = s.split("#");
    for (int i = 0; i < groups.length; i++) {
        final String group = groups[i];
        for (int j = 0; j < group.length(); j++)
            crypt.add(Integer.valueOf(group.substring(j, j + 1)));
        if (i == (groups.length - 1) && !s.endsWith("#")) {
            int k = group.length();
            while (k > 2) {
                k -= 1;
                crypt.add(Integer.valueOf(group.substring(k, k + 1)));
            }
        }
    }
    final StringBuilder n = new StringBuilder(crypt.size());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append(d);
    }
    return n.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
527
1
Gpt3D_Clone527_1.java 1 10
Gpt3D_Clone527_1.java 11 25
----------------------------------------

public void refund (int balance) {
    while (balance >= 10) {
        System.out.println ("Balance: £" + balance);
        balance -= 10;
    }
    while (balance >= 0) {
        System.out.println ("Balance: £" + balance);
        balance -= 1;
    }
}
----------------------------------------

public void refund (int balance) {
    while (balance > 10) {
        System.out.println ("Balance: £" + balance);
        balance -= 10;
    }
    while (balance > 0) {
        System.out.println ("Balance: £" + balance);
        balance -= 1;
    }
    if (balance == 0) {
        System.out.println ("Final balance: £0");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
527
2
Gpt3D_Clone527_2.java 1 10
Gpt3D_Clone527_2.java 11 22
----------------------------------------

public void refund (int balance) {
    while (balance >= 10) {
        System.out.println ("Balance: £" + balance);
        balance -= 10;
    }
    while (balance >= 0) {
        System.out.println ("Balance: £" + balance);
        balance -= 1;
    }
}
----------------------------------------

public void refund (int balance) {
    while (balance > 0) {
        System.out.println ("Balance: £" + balance);
        if (balance >= 10) {
            balance -= 10;
        } else {
            balance -= 1;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
527
3
Gpt3D_Clone527_3.java 1 10
Gpt3D_Clone527_3.java 11 20
----------------------------------------

public void refund (int balance) {
    while (balance >= 10) {
        System.out.println ("Balance: £" + balance);
        balance -= 10;
    }
    while (balance >= 0) {
        System.out.println ("Balance: £" + balance);
        balance -= 1;
    }
}
----------------------------------------

public void refund (int balance) {
    balance -= 10;
    System.out.println ("Balance: £" + balance);
    while (balance >= 0) {
        balance -= 1;
        System.out.println ("Balance: £" + balance);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
528
0
Gpt3D_Clone528_0.java 1 9
Gpt3D_Clone528_0.java 10 18
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    convertView = mInflater.inflate (R.layout.listview_row, null);
    TextView tvTimer = (TextView) convertView.findViewById (R.id.textview_timer);
    TextView tvName = (TextView) convertView.findViewById (R.id.textview_name);
    Item item = data.get (position);
    tvName.setText (item.getName ());
    myTimer.setTimer (tvTimer, item.getTime ());
    return convertView;
}
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    convertView = mInflater.inflate (R.layout.listview_row, null);
    TextView tvTimer = (TextView) convertView.findViewById (R.id.textview_timer);
    TextView tvName = (TextView) convertView.findViewById (R.id.textview_name);
    Item item = data.get (position);
    tvName.setText (item.getName ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
529
0
Gpt3D_Clone529_0.java 1 12
Gpt3D_Clone529_0.java 13 24
----------------------------------------

public void run () {
    try {
        int retValue = pro.waitFor ();
        println ("Command exit with return value " + retValue);
        outStream.close ();
        outStream = null;
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        int retValue = pro.waitFor ();
        System.out.println ("Command exit with return value " + retValue);
        outStream.close ();
        outStream = null;
    } catch (InterruptedException | IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
532
0
Gpt3D_Clone532_0.java 1 35
Gpt3D_Clone532_0.java 36 71
----------------------------------------

public void run () {
    try {
        runs = true;
        if (noColor < 2) {
            noColor ++;
            changeBtnForegroung (clr [noColor]);
        } else {
            noColor = 0;
            changeBtnForegroung (clr [noColor]);
        }
        changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));
        border = new EmptyBorder (0, 5, 10, 5);
        changePnlBorder (border);
        Thread.sleep (100);
        changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));
        border = new EmptyBorder (0, 0, 10, 10);
        changePnlBorder (border);
        Thread.sleep (100);
        changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));
        border = new EmptyBorder (5, 10, 5, 0);
        changePnlBorder (border);
        Thread.sleep (100);
        changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));
        border = new EmptyBorder (10, 10, 0, 0);
        changePnlBorder (border);
        Thread.sleep (100);
        changeBtnMargin (new Insets (initMargin.top, initMargin.left, initMargin.bottom, initMargin.right));
        border = new EmptyBorder (5, 5, 5, 5);
        changePnlBorder (border);
        Thread.sleep (100);
        count ++;
    } catch (Exception e) {
        System.out.println (e);
    }
}
----------------------------------------

public void run() {
    try {
        boolean runs = true;
        if (noColor < 2)
            noColor ++;
        else 
            noColor = 0;
        changeBtnForegroung(clr[noColor]);
        changeBtnMargin(new Insets(initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));
        Border border = new EmptyBorder(0, 5, 10, 5);
        changePnlBorder(border);
        Thread.sleep(100);
        changeBtnMargin(new Insets(initMargin.top,initMargin.left - 10,initMargin.bottom,initMargin.right + 10));
        border = new EmptyBorder(0, 0 ,10, 10);
        changePnlBorder(border);
        Thread.sleep(100);
        changeBtnMargin(new Insets(initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));
        border = new EmptyBorder(5 , 10 , 5, 0);
        changePnlBorder(border);
        Thread.sleep(100);
        changeBtnMargin(new Insets(initMargin.top, initMargin.left -10, initMargin.bottom , initMargin.right + 10));
        border = new EmptyBorder(10, 10 , 0, 0);
        changePnlBorder(border);
        Thread.sleep(100);
        changeBtnMargin(new Insets(initMargin.top, initMargin.left, initMargin.bottom, initMargin.right));
        border = new EmptyBorder(5, 5, 5, 5);
        changePnlBorder(border);
        Thread.sleep(100);
        int count =0 ;
        count += 1;
    } catch (Exception e) {
        System.out.println(e);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
533
0
Gpt3D_Clone533_0.java 1 25
Gpt3D_Clone533_0.java 26 49
----------------------------------------

public boolean equals (Object object) {
    if (this == object) {
        return true;
    }
    if (object == null) {
        return false;
    }
    if (! (object instanceof CircularList < ? >)) {
        return false;
    }
    CircularList < ? > that = (CircularList < ? >) object;
    Element < ? > first0 = first;
    Element < ? > current0 = first0;
    Element < ? > first1 = that.first;
    Element < ? > current1 = first1;
    while (true) {
        if (equalSequence (current0, current0, current1, current1)) {
            return true;
        }
        current1 = current1.next;
        if (current1 == first1) {
            return false;
        }
    }
}
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (!(obj instanceof CircularList < ? >)) {
        return false;
    }
    CircularList < ? > that = (CircularList < ? >) obj;
    Element < ? > first0 = first;
    Element < ? > first1 = that.first;
    Element < ? > current0 = first0, current1 = first1;
    while (true) {
        if (!equalSequence (current0, current0, current1, current1)) {
            return false;
        }
        current1 = current1.next;
        if (current1 == first1) {
            break;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
537
0
Gpt3D_Clone537_0.java 1 11
Gpt3D_Clone537_0.java 12 26
----------------------------------------

public static String validName (Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next ();
    if (histogram.findInLine (name) != null) {
        System.out.println ("This name exist");
    } else {
        System.out.println ("Name not found");
        user = validName (input, histogram);
    }
    return user;
}
----------------------------------------

public static String validName4 (Scanner input, Scanner histogram) {
    String user = "";
    String name = input.next ();
    if (histogram.findInLine (name) == null) {
        System.out.println ("Name not found");
        user = validName4 (input, histogram);
    }
    else {
        System.out.println ("This name exist");
        user = name;
    }
    return user;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
539
1
Gpt3D_Clone539_1.java 1 13
Gpt3D_Clone539_1.java 14 31
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;
        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    int lenWords = words.length;
    for (int i = 0; i < lenWords; i++) {
        int lengthCurrWord = words[i].length();
        if (lengthCurrWord <= 3) {
            nthShortWord ++;
            if (nthShortWord == n) {
                shortWord = words[i];
                break;
            }
        }
    }
    return shortWord;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
546
0
Gpt3D_Clone546_0.java 1 19
Gpt3D_Clone546_0.java 20 40
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    if (sb1.toString ().equals (sb2.toString ())) return true;
    else return false;
}
----------------------------------------

public boolean isAnagram (String s1, String s2) {
    
    if (s1.length () != s2.length ()) return false;
    char arr1 [] = s1.toCharArray ();
    char arr2 [] = s2.toCharArray ();
    Arrays.sort (arr1);
    Arrays.sort (arr2);
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    for (char c : arr1) {
        sb1.append (c);
    }
    for (char c : arr2) {
        sb2.append (c);
    }
    System.out.println (sb1.toString ());
    System.out.println (sb2.toString ());
    return sb1.toString ().equals (sb2.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
54
0
Gpt3D_Clone54_0.java 1 18
Gpt3D_Clone54_0.java 19 40
----------------------------------------

public static boolean isBalanced (String brackets) {
    Map < Character, Character > braces = new HashMap < > ();
    braces.put ('(', ')');
    braces.put ('[', ']');
    braces.put ('{', '}');
    if (brackets.length () % 2 != 0) {
        return false;
    }
    Stack < Character > halfBraces = new Stack ();
    for (char ch : brackets.toCharArray ()) {
        if (braces.containsKey (ch)) {
            halfBraces.push (braces.get (ch));
        } else if (halfBraces.isEmpty () || ch != halfBraces.pop ()) {
            return false;
        }
    }
    return halfBraces.isEmpty ();
}
----------------------------------------

public static boolean isBalanced (String brackets) {
    Map < Character, Character > braces = new HashMap < > ();
    braces.put ('(', ')');
    braces.put ('[', ']');
    braces.put ('{', '}');
    if (brackets.length () % 2 != 0) {
        return false;
    }
    Stack < Character > halfBraces = new Stack <> ();
    char [] bracketCharArray = brackets.toCharArray ();
    for (int i=0; i< bracketCharArray.length; i++) {
        char characters = bracketCharArray[i];
        if (braces.containsKey (characters)) {
            halfBraces.push (braces.get (characters));
        } else if (halfBraces.isEmpty () || characters != halfBraces.pop ()) {
            return false;
        }
    }
    return halfBraces.isEmpty ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
556
0
Gpt3D_Clone556_0.java 1 9
Gpt3D_Clone556_0.java 10 24
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (ae.getSource () == select) {
        activeTool = SELECTION_TOOL;
    } else if (ae.getSource () == draw) {
        activeTool = DRAW_TOOL;
    } else if (ae.getSource () == text) {
        activeTool = TEXT_TOOL;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (ae.getSource () == select) {
        activeTool = SELECTION_TOOL;
    } else {
        if (ae.getSource () == draw) {
            activeTool = DRAW_TOOL;
        } else {
            if (ae.getSource () == text) {
                activeTool = TEXT_TOOL;
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
557
0
Gpt3D_Clone557_0.java 1 17
Gpt3D_Clone557_0.java 18 41
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                File file = ch.getSelectedFile ();
                BufferedImage img = ImageIO.read (file);
                setImage (img);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        int option = JOptionPane.showConfirmDialog(gui, "Do you want to save the image before you open a new one?", 
                                                "Save Image", JOptionPane.YES_NO_OPTION);
        if(option == JOptionPane.YES_OPTION) {
            //TODO - prompt save image
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
559
0
Gpt3D_Clone559_0.java 1 15
Gpt3D_Clone559_0.java 16 35
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (x + height > getHeight ()) {
        y = getHeight () - height;
    }
    int red = (int) (Math.random () * 255);
    int green = (int) (Math.random () * 255);
    int blue = (int) (Math.random () * 255);
    Color color = new Color (red, green, blue);
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
560
0
Gpt3D_Clone560_0.java 1 17
Gpt3D_Clone560_0.java 18 51
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                File selectedFile = ch.getSelectedFile ();
                String fileExtension = selectedFile.getName().substring(selectedFile.getName().lastIndexOf(".") + 1);
                BufferedImage bi;
                if(fileExtension.equals("jpg") || fileExtension.equals("jpeg")){
                    bi = ImageIO.read (selectedFile);
                    // Add a filter to the image
                    BufferedImageOp op = new ColorInvertFilter();
                    BufferedImage biResultOp = op.filter(bi, null);
                    setImage (biResultOp);
                }
                else{
                    throw new RuntimeException("Not supported image format");
                }
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
560
1
Gpt3D_Clone560_1.java 1 17
Gpt3D_Clone560_1.java 18 47
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                File selectedFile = ch.getSelectedFile ();
                String fileExtension = selectedFile.getName().substring(selectedFile.getName().lastIndexOf(".") + 1);
                BufferedImage bi;
                if(fileExtension.equals("jpg") || fileExtension.equals("jpeg")){
                    bi = ImageIO.read (selectedFile);
                }
                else{
                    throw new RuntimeException("Not supported image format");
                }
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
560
2
Gpt3D_Clone560_2.java 1 17
Gpt3D_Clone560_2.java 18 38
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        FileDialog fd = new FileDialog(gui);
        fd.setMode(FileDialog.LOAD);
        fd.setVisible(true);
        String selectedPath = fd.getDirectory() + fd.getFile();
        if (selectedPath != null) {
            try {
                BufferedImage bi = ImageIO.read (new File(selectedPath));
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
562
0
Gpt3D_Clone562_0.java 1 15
Gpt3D_Clone562_0.java 16 32
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) ((getWidth () / 2) + (Math.random () * (getWidth () / 4)));
    int y = (int) ((getHeight () / 2) + (Math.random () * (getHeight () / 4)));
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
563
0
Gpt3D_Clone563_0.java 1 15
Gpt3D_Clone563_0.java 16 32
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) { 
    int x = (int) Math.floor (Math.random () * getWidth ());
    int y = (int) Math.floor (Math.random () * getHeight ());
    int width = (int) Math.floor (Math.random () * (getWidth () / 4));
    int height = (int) Math.floor (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) { 
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) { 
        y = getHeight () - height;
    }
    Color color = new Color ((int) Math.floor (Math.random () * 255), (int) Math.floor (Math.random () * 255), (int) Math.floor (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color)); 
    repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
563
1
Gpt3D_Clone563_1.java 1 15
Gpt3D_Clone563_1.java 16 32
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (Math.random () * getWidth ()).intValue ();
    int y = (Math.random () * getHeight ()).intValue ();
    int width = (Math.random () * (getWidth () / 4)).intValue ();
    int height = (Math.random () * (getHeight () / 4)).intValue ();
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color (Math.floor (Math.random () * 255), Math.floor (Math.random () * 255), Math.floor (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
567
0
Gpt3D_Clone567_0.java 1 24
Gpt3D_Clone567_0.java 25 47
----------------------------------------

public static void main (String [] args) {
    if (args.length != 2) {
        System.out.println ("usage: ./zipf size skew");
        System.exit (- 1);
    }
    ZipfGenerator zipf = new ZipfGenerator (Integer.valueOf (args [0]), Double.valueOf (args [1]));
    for (int i = 1;
    i <= 10; i ++) {
        System.out.println (i + " " + zipf.getProbability (i));
    }
    int hist [] = new int [12];
    for (int i = 0;
    i < 12; i ++) {
        hist [i] = 0;
    }
    System.out.println ("Testing the probability distribution:");
    int sum = 0;
    for (int i = 1;
    i <= 1000000; i ++) {
        hist [zipf.next ()] ++;
    }
    for (int i = 0;
    i < 12; i ++) System.out.println (i + " " + hist [i] / 1000000.0);
}
----------------------------------------

public static void main (String [] args) {
    if (args.length != 2) {
        System.out.println ("usage: ./zipf size skew");
        System.exit (- 1);
    }
    ZipfGenerator zipf = new ZipfGenerator (Integer.valueOf (args [0]), Double.valueOf (args [1]));
    int hist [] = new int [12];
    for (int i = 0;
    i < 12; i ++) {
        hist [i] = 0;
    }
    System.out.println ("Testing the probability distribution:");
    for (int i = 0;
    i <= 1000000; i ++) {
        hist [zipf.next ()] ++;
    }
    for (int i = 0;
    i < 10; i ++) {
        System.out.println (i + " Probability: " + (double) hist[i]/1000000);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
569
0
Gpt3D_Clone569_0.java 1 35
Gpt3D_Clone569_0.java 36 74
----------------------------------------

public static void main (String args []) {
    int i;
    int largestSize = 4;
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34};
    int large [] = Arrays.copyOf (array, largestSize);
    int smallest = large [0];
    int smallestIndex = 0;
    for (int j = 1;
    j < large.length; ++ j) {
        if (smallest > large [j]) {
            smallest = large [j];
            smallestIndex = j;
        }
    }
    for (i = large.length; i < array.length; i ++) {
        if (smallest < array [i]) {
            large [smallestIndex] = array [i];
            smallest = large [0];
            smallestIndex = 0;
            for (int j = 1;
            j < large.length; ++ j) {
                if (smallest > large [j]) {
                    smallest = large [j];
                    smallestIndex = j;
                }
            }
        }
    }
    for (int j = 0;
    j < large.length; j ++) {
        System.out.println ("Largest 5 : " + large [j]);
    }
    System.out.println ();
    System.out.println ("Largest is: " + getHighest (large));
}
----------------------------------------

public static void main (String args []) {
    int i;
    int largestSize = 4;
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34};
    int large [] = Arrays.copyOf (array, largestSize);
    int smallest = large [0];
    int smallestIndex = 0;
    for (i = 1;
    i < large.length; ++ i) {
        if (smallest > large [i]) {
            smallest = large [i];
            smallestIndex = i;
        }
    }
    for (int j = large.length; j < array.length; j ++) {
        if (smallest < array [j]) {
            large [smallestIndex] = array [j];
            int newSmallest = large [0];
            int newSmallestIndex = 0;
            for (i = 1;
            i < large.length; ++ i) {
                if (newSmallest > large [i]) {
                    newSmallest = large [i];
                    newSmallestIndex = i;
                }
            }
            smallest = newSmallest;
            smallestIndex = newSmallestIndex;
        }
    }
    for (int k = 0;
    k < large.length; k ++) {
        System.out.println ("Largest 5 : " + large [k]);
    }
    System.out.println ();
    System.out.println ("Largest is: " + getHighest (large));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
0
Gpt3D_Clone56_0.java 1 23
Gpt3D_Clone56_0.java 24 46
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

public static boolean isBalanced(String str) {
    boolean result = false;
    if (str.length() < 2) return false;
    Stack<Character> stack = new Stack<>();
    for (int i = 0; i < str.length(); i++) {
        char ch = str.charAt(i);
        if (!parenthesesMapRight.containsKey(ch) && !parenthesesMapLeft.containsKey(ch)) continue;
        if (parenthesesMapLeft.containsKey(ch)) stack.push(ch);
        else {
            if (!stack.isEmpty() && stack.pop() == parenthesesMapRight.get(ch).charValue()) {
                result = true;
            }
            else {
                return false;
            }
        }
    }
    if (stack.isEmpty()) return result = true;
    else return result = false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
1
Gpt3D_Clone56_1.java 1 23
Gpt3D_Clone56_1.java 24 45
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

public static boolean isBalanced (String str) {
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapLeft.containsKey (ch) && ! parenthesesMapRight.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (stack.isEmpty ()) return false;
            if (stack.pop () != parenthesesMapRight.get (ch).charValue ()) {
                return false;
            }
        }
    }
    return stack.isEmpty ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
56
2
Gpt3D_Clone56_2.java 1 23
Gpt3D_Clone56_2.java 24 44
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

public static boolean isBalanced (String str) {
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (parenthesesMapRight.containsKey (ch)) {
                if (stack.isEmpty ()) return false;
                if (stack.pop () != parenthesesMapRight.get (ch).charValue ()) {
                    return false;
                }
            }
        }
    }
    return stack.isEmpty ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
571
0
Gpt3D_Clone571_0.java 1 10
Gpt3D_Clone571_0.java 11 22
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    for (int i = 0;
    i < 10; i ++) {
        int [] array = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
        int k = 0;
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
1
Gpt3D_Clone572_1.java 1 10
Gpt3D_Clone572_1.java 11 27
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0; i < array.length; i ++) {
        int max = getMax (0, array);
        for (int j = 0; j < i; j++) {
            if (array[j] > max) {
                max = array[j];
            }
        }
        large [k ++] = max;
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
2
Gpt3D_Clone572_2.java 1 10
Gpt3D_Clone572_2.java 11 26
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        int maxValue = 0;
        for(int j=0; j<array.length; j++)
            if(maxValue<array[j])
            maxValue=array[j];
        large [k ++] = maxValue;
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
572
3
Gpt3D_Clone572_3.java 1 10
Gpt3D_Clone572_3.java 11 26
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        large [k ++] = getMax (0, array);
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

public static void main (String [] args) {
    int large [] = new int [10];
    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};
    int k = 0;
    for (int i = 0;
    i < array.length; i ++) {
        int maxValue = array[0];
        for(int j=1; j<array.length; j++)
            if(maxValue<array[j])
            maxValue=array[j];        
        large [k ++] = maxValue;
    }
    System.out.println ("Largest 5 is: " + Arrays.toString (Arrays.copyOf (large, 5)));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
574
2
Gpt3D_Clone574_2.java 1 9
Gpt3D_Clone574_2.java 10 21
----------------------------------------

public static String replaceHostInUrl (String originalURL, String newAuthority) throws URISyntaxException, MalformedURLException {
    URI uri = new URI (originalURL);
    uri = new URI (uri.getScheme ().toLowerCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());
    int port = uri.getPort ();
    if (port > 0 && port == uri.toURL ().getDefaultPort ()) {
        uri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());
    }
    return uri.toString ();
}
----------------------------------------

public static String replaceHostInUrl (String originalURL, String newAuthority) throws URISyntaxException, MalformedURLException {
    URI uri = new URI (originalURL);
    uri = new URI (uri.getScheme ().toLowerCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());
    int port = uri.getPort ();
    if (port > 0 && port == uri.toURL ().getDefaultPort ()) {
        URI newUri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());
        uri = newUri;
    }
    return uri.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
574
3
Gpt3D_Clone574_3.java 1 9
Gpt3D_Clone574_3.java 10 21
----------------------------------------

public static String replaceHostInUrl (String originalURL, String newAuthority) throws URISyntaxException, MalformedURLException {
    URI uri = new URI (originalURL);
    uri = new URI (uri.getScheme ().toLowerCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());
    int port = uri.getPort ();
    if (port > 0 && port == uri.toURL ().getDefaultPort ()) {
        uri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());
    }
    return uri.toString ();
}
----------------------------------------

public static String replaceHostInUrl (String originalURL, String newAuthority) throws URISyntaxException, MalformedURLException {
    URI uri = new URI (originalURL);
    uri = new URI (uri.getScheme ().toLowerCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());
    int port = uri.getPort ();
    if (port > 0 && port == uri.toURL ().getDefaultPort ()) {
        URI tempUri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());
        uri = tempUri;
    }
    return uri.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
576
0
Gpt3D_Clone576_0.java 1 23
Gpt3D_Clone576_0.java 24 50
----------------------------------------

static void stars () {
    final int MAX_WIDTH = 7;
    for (int i = 0;
    i < 7; ++ i) {
        int width;
        if (i < 3) width = MAX_WIDTH - i * 2;
        else if (i > 3) width = (i - 3) * 2 + 1;
        else width = 1;
        for (int j = 0;
        j < (MAX_WIDTH - width) / 2; ++ j) {
            System.out.print (" ");
        }
        for (int j = 0;
        j < width; ++ j) {
            System.out.print ("*");
        }
        for (int j = 0;
        j < (MAX_WIDTH - width) / 2; ++ j) {
            System.out.print (" ");
        }
        System.out.println ();
    }
}
----------------------------------------

static void stars() {
    final int MAX_WIDTH = 7;
    int width;
    for (int i = 0;
    i < 7; ++i) {
        if (i < 3) width = MAX_WIDTH - i * 2;
        else if (i > 3) width = (i - 3) * 2 + 1;
        else width = 1;
        int j = 0, k = 0, l = 0;
        for (;
        j < (MAX_WIDTH - width) / 2; ++j) {
            System.out.print (" ");
        }
        for (;
        k < width; ++k) {
            System.out.print ("*");
        }
        for (;
        l < (MAX_WIDTH - width) / 2; ++l) {
            System.out.print (" ");
        }
        System.out.println ();
        }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
579
0
Gpt3D_Clone579_0.java 1 15
Gpt3D_Clone579_0.java 16 35
----------------------------------------

public static void main (String [] args) {
    int first, second;
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Enter first integer: ");
    int numOne;
    numOne = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numOne);
    System.out.println ("Enter second integer: ");
    int numTwo;
    numTwo = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numTwo);
    Random generator = new Random ();
    int num = (int) (Math.random () * numTwo);
    System.out.println ("Random number: " + ((num > numOne) ? num : numOne + num));
}
----------------------------------------

public static void main (String [] args) {
    int result, first, second;
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Enter first integer: ");
    int numOne;
    numOne = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numOne);
    System.out.println ("Enter second integer: ");
    int numTwo;
    numTwo = myScanner.nextInt ();
    System.out.println ("You have keyed in " + numTwo);
    if (numOne > numTwo) {
        result = numOne;
    } else {
        result = numOne + numTwo;
    }
    System.out.println ("Random number: " + result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
0
Gpt3D_Clone57_0.java 1 23
Gpt3D_Clone57_0.java 24 57
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

public static boolean isBalanced4(String str) {
    boolean result = false;
    if (str.length() < 2) {
        return false;
    }
    HashMap<Character, Character> parenthesesMapRight = new HashMap<>(); 
    HashMap<Character, Character> parenthesesMapLeft = new HashMap<>(); 
    parenthesesMapRight.put('}', '{');
    parenthesesMapRight.put(']', '[');
    parenthesesMapRight.put(')', '(');
    parenthesesMapLeft.put('{', '}');
    parenthesesMapLeft.put('[', ']');
    parenthesesMapLeft.put('(', ')');
    Stack<Character> stack = new Stack<>();
    for(int i = 0; i < str.length(); i++) {
        Character ch = str.charAt(i);
        if (!parenthesesMapRight.containsKey(ch) && !parenthesesMapLeft.containsKey(ch)) {
            continue;
        }
        if(parenthesesMapLeft.containsKey(ch)) {
            stack.push(ch);
        } else {
            if(!stack.isEmpty() && stack.pop() == parenthesesMapRight.get(ch).charValue()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if(!stack.isEmpty()) return result = false;
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
1
Gpt3D_Clone57_1.java 1 23
Gpt3D_Clone57_1.java 24 53
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

public static boolean isBalanced3(String str) {
    boolean result = false;
    if (str.length() < 2) {
        return false;
    }
    HashMap<Character, Character> parenthesesMapRight = new HashMap<>(); 
    HashMap<Character, Character> parenthesesMapLeft = new HashMap<>(); 
    parenthesesMapRight.put(')', '(');
    parenthesesMapLeft.put('(', ')');
    Stack<Character> stack = new Stack<>();
    for(int i = 0; i < str.length(); i++) {
        Character ch = str.charAt(i);
        if (!parenthesesMapRight.containsKey(ch) && !parenthesesMapLeft.containsKey(ch)) {
            continue;
        }
        if(parenthesesMapLeft.containsKey(ch)) {
            stack.push(ch);
        } else {
            if(!stack.isEmpty() && stack.pop() == parenthesesMapRight.get(ch).charValue()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if(!stack.isEmpty()) return result = false;
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
57
2
Gpt3D_Clone57_2.java 1 23
Gpt3D_Clone57_2.java 24 49
----------------------------------------

public static boolean isBalanced (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (! stack.isEmpty () && stack.pop () == parenthesesMapRight.get (ch).charValue ()) {
                result = true;
            } else {
                return false;
            }
        }
    }
    if (! stack.isEmpty ()) return result = false;
    return result;
}
----------------------------------------

public static boolean isBalanced_v4 (String str) {
    boolean result = false;
    if (str.length () < 2) return false;
    Stack < Character > stack = new Stack < > ();
    int length = str.length();
    for (int i = 0; i < length; i ++) {
        char ch = str.charAt (i);
        if (! parenthesesMapRight.containsKey (ch) && ! parenthesesMapLeft.containsKey (ch)) {
            continue;
        }
        if (parenthesesMapLeft.containsKey (ch)) {
            stack.push (ch);
        } else {
            if (stack.size() > 0 && stack.peek() == parenthesesMapRight.get (ch).charValue ()) {
                stack.pop();
                result = true;
            } else {
                return false;
            }
        }
    }
    if (stack.size() > 0) return result = false;
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
580
0
Gpt3D_Clone580_0.java 1 12
Gpt3D_Clone580_0.java 13 24
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    int min = sc.nextInt ();
    System.out.println ("Enter max range:");
    int max = sc.nextInt ();
    int num = ran.nextInt (max - min) + min;
    System.out.println ("Random Number between given range is " + num);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
584
0
Gpt3D_Clone584_0.java 1 11
Gpt3D_Clone584_0.java 12 38
----------------------------------------

public static final void main (String...aArgs) {
    log ("Generating 10 random integers in range 1..10.");
    int START = 1;
    int END = 10;
    Random randomGenerator = new Random ();
    for (int idx = 1;
    idx <= 10; ++ idx) {
        showRandomInteger (START, END, randomGenerator);
    }
    log ("Done");
}
----------------------------------------

public static final void main (String...aArgs) {
     log ("Generating 10 random integers in range 11..20.");
     int START = 11;
     int END = 20;
     Random randomGenerator = new Random ();
     for (int idx = 1;
     idx <= 10; ++ idx) {
         showRandomInteger (START, END, randomGenerator);
     }
     log ("Done");
 }
//Type 3
public static final void main (String...aArgs){ 
    log ("Generating 10 random integers in range 1..10."); 
    int START = 1, END = 10; 
    Random random = new Random(); 
    int idx = 1; 
    while (idx <= 10){ 
        showRandomInteger(START, END, random); 
        idx++; 
    } 
    log ("Done"); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
584
1
Gpt3D_Clone584_1.java 1 11
Gpt3D_Clone584_1.java 12 51
----------------------------------------

public static final void main (String...aArgs) {
    log ("Generating 10 random integers in range 1..10.");
    int START = 1;
    int END = 10;
    Random randomGenerator = new Random ();
    for (int idx = 1;
    idx <= 10; ++ idx) {
        showRandomInteger (START, END, randomGenerator);
    }
    log ("Done");
}
----------------------------------------

public static final void main (String...aArgs) {
     log ("Generating 10 random integers in range 1..10.");
     int START = 4;
     int END = 10;
     Random randomGenerator = new Random ();
     for (int idx = 1;
     idx <= 9; ++ idx) {
         showRandomInteger (START, END, randomGenerator);
     }
     log ("Done");
 }
 //Type 4 code clone variant 
public static final void main (String...aArgs) {
     log ("Generating 10 random integers in range 11..20.");
     int START = 11;
     int END = 20;
     Random randomGenerator = new Random ();
     for (int idx = 1;
     idx <= 10; ++ idx) {
         showRandomInteger (START, END, randomGenerator);
     }
     log ("Done");
 }
//Type 3
public static final void main (String...aArgs){ 
    log ("Generating 10 random integers in range 1..10."); 
    int START = 1, END = 10; 
    Random random = new Random(); 
    int idx = 1; 
    while (idx <= 10){ 
        showRandomInteger(START, END, random); 
        idx++; 
    } 
    log ("Done"); 
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
584
2
Gpt3D_Clone584_2.java 1 11
Gpt3D_Clone584_2.java 12 22
----------------------------------------

public static final void main (String...aArgs) {
    log ("Generating 10 random integers in range 1..10.");
    int START = 1;
    int END = 10;
    Random randomGenerator = new Random ();
    for (int idx = 1;
    idx <= 10; ++ idx) {
        showRandomInteger (START, END, randomGenerator);
    }
    log ("Done");
}
----------------------------------------

public static final void main (String...aArgs){ 
    log ("Generating 10 random integers in range 1..10."); 
    int START = 1, END = 10; 
    Random random = new Random(); 
    for (Integer i=1; i<=10; i++){ 
        showRandomInteger(START, END, random);
    } 
    log ("Done"); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
585
0
Gpt3D_Clone585_0.java 1 12
Gpt3D_Clone585_0.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (max-min+1);
    System.out.println ("Random Number between given range is " + (num+min));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
585
1
Gpt3D_Clone585_1.java 1 12
Gpt3D_Clone585_1.java 13 25
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int min, max;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = ran.nextInt (min);
    int num1 = ran.nextInt (max);
    System.out.println ("Random Number between given range is " + num1);
}
----------------------------------------

public static void main (String [] args) {
    java.util.Random ran = new java.util.Random ();
    int min, max;
    java.util.Scanner sc = new java.util.Scanner (System.in);
    System.out.println ("Enter min range:");
    min = sc.nextInt ();
    System.out.println ("Enter max range:");
    max = sc.nextInt ();
    int num = min + ran.nextInt(max - min);
    System.out.println ("Random Number between given range is " + num);  
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
589
0
Gpt3D_Clone589_0.java 1 9
Gpt3D_Clone589_0.java 10 20
----------------------------------------

public static void main (String [] args) throws Exception {
    AuthMethod auth = new TokenAuthMethod (API_KEY, API_SECRET);
    NexmoClient client = new NexmoClient (auth);
    TextMessage message = new TextMessage (FROM_NUMBER, TO_NUMBER, "Hello from Nexmo!");
    SmsSubmissionResult [] responses = client.getSmsClient ().submitMessage (message);
    for (SmsSubmissionResult response : responses) {
        System.out.println (response);
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    AuthMethod auth = new TokenAuthMethod("API_KEY", "API_SECRET");
    NexmoClient client = new NexmoClient (auth);
    TextMessage message = new TextMessage("TO_NUMBER", "FROM_NUMBER", "Hello from Nexmo!");
    SmsSubmissionResult [] responses = client.getSmsClient ().submitMessage (message);
    for (SmsSubmissionResult response : responses) {
        System.out.println (response);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
590
0
Gpt3D_Clone590_0.java 1 23
Gpt3D_Clone590_0.java 24 45
----------------------------------------

public static void main (String args []) {
    GSMConnect gsm = new GSMConnect (comPort);
    if (gsm.init ()) {
        try {
            System.out.println ("Initialization Success");
            gsm.connect ();
            Thread.sleep (5000);
            gsm.checkStatus ();
            Thread.sleep (5000);
            gsm.sendMessage ("+91XXXXXXXX", "Trial Success");
            Thread.sleep (1000);
            gsm.hangup ();
            Thread.sleep (1000);
            gsm.closePort ();
            gsm.outCommand ();
            System.exit (1);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    } else {
        System.out.println ("Can't init this card");
    }
}
----------------------------------------

public static void main (String args []) {
    GSMConnect gsm = new GSMConnect (comPort);
    if (gsm.init ()) {
        try {
            InitResult initResult = new InitResult();
            initResult.printResult (gsm);
            ConnectMessage cMsg = new ConnectMessage();
            cMsg.sendMessage (gsm);
            HangupResult hResult = new HangupResult();
            hResult.printResult (gsm);
            gsm.closePort ();
            gsm.outCommand ();
            System.exit (1);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    } else {
        System.out.println ("Can't init this card");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
593
0
Gpt3D_Clone593_0.java 1 9
Gpt3D_Clone593_0.java 10 19
----------------------------------------

public static void main (String args []) {
    Object sharedObject = new Object ();
    MyClass sampleA = new MyClass ();
    sampleA.myObject = sharedObject;
    MyClass sampleB = new MyClass ();
    sampleB.myObject = sharedObject;
    System.out.println (sampleA.sharedObject == sampleB.sharedObject);
    System.out.println (sampleA == sampleB);
}
----------------------------------------

public static void main (String args []) {
    Object sharedObjectA = new Object ();
    MyClass sampleA = new MyClass ();
    sampleA.myObject = sharedObjectA;
    MyClass sampleB = sampleA;
    System.out.println (sampleA.sharedObject == sampleB.sharedObject);
    System.out.println (sampleA == sampleB);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
594
2
Gpt3D_Clone594_2.java 1 12
Gpt3D_Clone594_2.java 13 28
----------------------------------------

public static int [] front11 (int [] a, int [] b) {
    int alen = (a != null) ? a.length : 0, blen = (b != null) ? b.length : 0;
    if (alen > 0 && blen > 0) {
        return new int [] {a [0], b [0]};
    } else if (alen > 0) {
        return new int [] {a [0]};
    } else if (blen > 0) {
        return new int [] {b [0]};
    } else {
        return new int [0];
    }
}
----------------------------------------

public static int [] front11 (int [] a, int [] b) {
    int alen, blen;
    alen = (a != null) ? a.length : 0;
    blen = (b != null) ? b.length : 0;
    if (alen > 0 && blen > 0) {
        return new int [] {a [0], b [0]};
    } else if (alen > 0) {
        return new int [] {a [0]};
    } else if (blen > 0) {
        return new int [] {b [0]};
    } else {
        return new int [0];
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
596
0
Gpt3D_Clone596_0.java 1 19
Gpt3D_Clone596_0.java 20 41
----------------------------------------

public static void main (String [] args) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c = 'a';
    c <= 'z'; c ++) {
        characters.add (c);
    }
    List < String > allStrings = new ArrayList < String > ();
    for (Character c : characters) {
        for (Character d : characters) {
            for (Character e : characters) {
                for (Character f : characters) {
                    String s = "" + c + d + e + f;
                    allStrings.add (s);
                }
            }
        }
    }
    System.out.println (allStrings.size ());
}
----------------------------------------

public static void main (String [] args) {
	List <Character> characters = new ArrayList <Character> ();
	for (char c ='a'; c <= 'z'; c++)
		characters.add (c);
		
	List <String> allStrings = new ArrayList <String> ();
	for (Character c : characters) {
		for (Character d : characters) {
			for (Character e : characters) {
				for (Character f : characters) {
					for (Character g : characters) {
						String s = "" + c + d + e + f + g;
						allStrings.add (s);
					}
				}
			}
		}
	}
	System.out.println (allStrings.size ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
596
1
Gpt3D_Clone596_1.java 1 19
Gpt3D_Clone596_1.java 20 37
----------------------------------------

public static void main (String [] args) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c = 'a';
    c <= 'z'; c ++) {
        characters.add (c);
    }
    List < String > allStrings = new ArrayList < String > ();
    for (Character c : characters) {
        for (Character d : characters) {
            for (Character e : characters) {
                for (Character f : characters) {
                    String s = "" + c + d + e + f;
                    allStrings.add (s);
                }
            }
        }
    }
    System.out.println (allStrings.size ());
}
----------------------------------------

public static void main (String [] args) {
	List <Character> characters = new ArrayList <Character> ();
	for (char c ='a'; c <= 'z'; c++)
		characters.add (c);
		
	List <String> allStrings = new ArrayList <String> ();
	for (Character c : characters) {
		for (Character d : characters) {
			for (Character e : characters) {
				String s = "" + c + d + e;
				allStrings.add (s);
			}
		}
	}
	System.out.println (allStrings.size ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
0
Gpt3D_Clone597_0.java 1 11
Gpt3D_Clone597_0.java 12 27
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while (true) {
        pos = str.indexOf ("\n", pos);
        if (pos == -1) break;
        lines ++;
        pos ++;
    }
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
1
Gpt3D_Clone597_1.java 1 11
Gpt3D_Clone597_1.java 12 28
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while (pos >= 0) {
        pos = str.indexOf ("\n", pos);
        if (pos >= 0) {
            lines ++;
            pos ++;
        }
    }
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
2
Gpt3D_Clone597_2.java 1 11
Gpt3D_Clone597_2.java 12 29
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

public static int countLines (String str) {
    int lines = 1;
    if(str == null || str.isEmpty()){
        return 0;
    }
    for(int pos = 0; pos < str.length()-1; pos++){
        char c = str.charAt(pos);
        if(c == '\n') {
            lines++;
        }
    }
    
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
597
3
Gpt3D_Clone597_3.java 1 11
Gpt3D_Clone597_3.java 12 28
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

public static int countLines (String str) {
    int lines = 1;
    if(str == null || str.isEmpty()){
        return 0;
    }
    for(int pos = 0; pos < str.length(); pos++){
        if(str.substring(pos, pos+1).equals("\n")) {
            lines++;
        }
    }
    
    return lines;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
598
0
Gpt3D_Clone598_0.java 1 18
Gpt3D_Clone598_0.java 19 38
----------------------------------------

public boolean haveThree (int [] nums) {
    int count = 0;
    boolean flag = false;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 3) {
            if (flag) {
                return false;
            } else {
                count ++;
                flag = true;
            }
        } else {
            flag = false;
        }
    }
    return count == 3;
}
----------------------------------------

public boolean haveThree (int [] nums) {
    int count = 0;
    boolean flag = false;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 3) {
            count ++;
            flag = true;
        }
        if (flag == true && (nums[i] != 3)) {
            flag = false;
        }
        if (count > 2) {
            return false;
        }
    }
    return count == 3;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
599
0
Gpt3D_Clone599_0.java 1 12
Gpt3D_Clone599_0.java 13 26
----------------------------------------

public static String compress (String text) {
    String result = "";
    int index = 0;
    while (index < text.length ()) {
        char c = text.charAt (index);
        int count = count (text, index);
        if (count == 1) result += "" + c;
        else result += "" + count + c;
        index += count;
    }
    return result;
}
----------------------------------------

public static String compress (String text) {
    StringBuilder result = new StringBuilder();
    int index = 0;
    while (index < text.length ()) {
        char c = text.charAt (index);
        int count = count (text, index);
        if (count == 1) result.append("").append(c);
        else result.append("").append(count).append(c);
        index += count;
    }
    return result.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
59
0
Gpt3D_Clone59_0.java 1 15
Gpt3D_Clone59_0.java 16 35
----------------------------------------

public static void main (String [] args) {
    List < String > keywords = Arrays.asList ("Apple", "Ananas", "Mango", "Banana", "Beer");
    Map < Character, List < String > > result = new HashMap < Character, List < String > > ();
    for (String k : keywords) {
        char firstChar = k.charAt (0);
        if (! result.containsKey (firstChar)) {
            result.put (firstChar, new ArrayList < String > ());
        }
        result.get (firstChar).add (k);
    }
    for (List < String > list : result.values ()) {
        Collections.sort (list);
    }
    System.out.println (result);
}
----------------------------------------

public static void main (String [] args) {
    List < String > keywords = Arrays.asList ("Apple", "Ananas", "Mango", "Banana", "Beer");
    Map < Character, List < String > > result = new HashMap < Character, List < String > > ();
    for (String k : keywords) {
        if (result.containsKey (k.charAt(0))) {
            result.get (k.charAt(0)).add (k);
        }
        else {
            List < String > newList = new ArrayList<String>();
            newList.add (k);
            result.put (k.charAt(0), newList);
        }
    }
    for (List < String > list : result.values ()) {
        Collections.sort (list);
    }
    System.out.println (result);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
5
0
Gpt3D_Clone5_0.java 1 18
Gpt3D_Clone5_0.java 19 45
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).forEach (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) Files.createDirectory (d);
                    return;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).forEach (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) {
                        Files.createDirectory (d);
                        logMessage ("Directory created successfully");
                    }
                    else {
                        logError ("Directory already exists");
                    }
                    copyFolderRecursively (s, d);
                    return;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
5
1
Gpt3D_Clone5_1.java 1 18
Gpt3D_Clone5_1.java 19 44
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).forEach (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) Files.createDirectory (d);
                    return;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public static void copyFolder (Path src, Path dest) {
    try {
        Files.walk (src).forEach (s -> {
            try {
                Path d = dest.resolve (src.relativize (s));
                if (Files.isDirectory (s)) {
                    if (! Files.exists (d)) {
                        Files.createDirectory (d);
                        logMessage ("Directory created successfully");
                    }
                    else {
                        logError ("Directory already exists");
                    }
                    return;
                }
                Files.copy (s, d);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
600
0
Gpt3D_Clone600_0.java 1 20
Gpt3D_Clone600_0.java 21 42
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            sb.append (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            sb.append (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    int count = 1;
    String output = "";
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            output += (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            output += (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
600
1
Gpt3D_Clone600_1.java 1 20
Gpt3D_Clone600_1.java 21 42
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            sb.append (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            sb.append (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 0;
    char ch = ' ';
    for (int i = 0; i < length; i ++) {
        if (str.charAt (i) != ch) {
            if (count > 0)
                sb.append (ch + "" + count);
            ch = str.charAt (i);
            count = 1; 
        } else {
            count ++;
        }
        if (i == length - 1)
            sb.append (ch + "" + count);
    }
    System.out.println (sb.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
600
2
Gpt3D_Clone600_2.java 1 20
Gpt3D_Clone600_2.java 21 42
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 1;
    for (int i = 0;
    i < length; i ++) {
        if (i == length - 1) {
            sb.append (str.charAt (i) + "" + count);
            break;
        }
        if (str.charAt (i) == str.charAt (i + 1)) {
            count ++;
        } else {
            sb.append (str.charAt (i) + "" + count);
            count = 1;
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static void main (String [] args) {
    String str = "AAABBBBCC";
    int length = str.length ();
    StringBuilder sb = new StringBuilder ();
    int count = 0;
    char ch = ' ';
    for (int i = 0; i < length; i ++) {
        if (i == 0 || str.charAt (i) != ch) {
            if (i > 0)
                sb.append (ch + "" + count);
            ch = str.charAt (i);
            count = 1;
        } else {
            count ++;
        } 
        if (i == length - 1)
            sb.append (str.charAt (i) + "" + count);
    }
    System.out.println (sb.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
603
1
Gpt3D_Clone603_1.java 1 10
Gpt3D_Clone603_1.java 11 23
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Set < String > wordsSet = new HashSet < String > ();
    String [] words = "AAABBBBCC".split ("");
    wordsSet.addAll (Arrays.asList (words));
    for (String string : wordsSet) {
        if (! string.isEmpty ()) 
            output += Collections.frequency(wordsSet, string) + "" + string;
    }
    System.out.println (output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
604
1
Gpt3D_Clone604_1.java 1 14
Gpt3D_Clone604_1.java 15 34
----------------------------------------

public static void main (String args []) {
    inp = new Scanner (System.in);
    String str = inp.nextLine ();
    List < Character > arrlist = new ArrayList < Character > ();
    for (int i = 0;
    i < str.length (); i ++) {
        arrlist.add (str.charAt (i));
    }
    for (int i = 0;
    i < str.length (); i ++) {
        int freq = Collections.frequency (arrlist, str.charAt (i));
        System.out.println ("Frequency of " + str.charAt (i) + "  is:   " + freq);
    }
}
----------------------------------------

public static void main (String args []) {
    inp = new Scanner (System.in);
    String str = inp.nextLine ();
    List < Character > arrlist = new ArrayList < Character > ();
    for (int i = 0;
    i < str.length (); i ++) {
        arrlist.add (str.charAt (i));
    }
    Map < Character, Integer > map = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < str.length (); i ++) {
        int freq = Collections.frequency (arrlist, str.charAt (i));
        map.put (str.charAt (i),freq);
    }
    for (Entry < Character, Integer > pair : map.entrySet ()) {
        System.out.println ("Frequency of " + pair.getKey () + "  is:   " + pair.getValue ());
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
606
1
Gpt3D_Clone606_1.java 1 10
Gpt3D_Clone606_1.java 11 23
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    String [] words = "AAABBBBCC".split ("");
    wordsMultiset.addAll (Arrays.asList (words));
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    String output = "";
    Multiset < String > wordsMultiset = HashMultiset.create ();
    wordsMultiset.add ("A", 3);
    wordsMultiset.add ("B", 4);
    wordsMultiset.add ("C", 2);
    for (Entry < String > string : wordsMultiset.entrySet ()) {
        if (! string.getElement ().isEmpty ()) output += string.getCount () + "" + string.getElement ();
    }
    System.out.println (output);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
60
0
Gpt3D_Clone60_0.java 1 12
Gpt3D_Clone60_0.java 13 25
----------------------------------------

static int findMIN (int [] A, int c) {
    int x = A [c];
    int position = c;
    while (c < A.length) {
        if (x > A [c]) {
            x = A [c];
            position = c;
        }
        c ++;
    }
    return position;
}
----------------------------------------

int findMIN (int [] A, int c) {
    int position = c;
    int x = A [c];
    for (c; c < A.length; c++) {
        if (x > A [c]) { 
            x = A [c];
            position = c;
        }
    }
    return position; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
615
0
Gpt3D_Clone615_0.java 1 14
Gpt3D_Clone615_0.java 15 30
----------------------------------------

public void run () {
    synchronized (lock) {
        if (bar.isDisposed () || bar.getShell ().isDisposed ()) {
            return;
        }
        currentSize [0] = bar.getShell ().getSize ().y;
        if (currentSize [0] != orgSize [0]) {
            return;
        } else {
            bar.getShell ().layout (true);
            bar.getShell ().pack (true);
        }
    }
}
----------------------------------------

public void run () {
    synchronized (lock) {
        if (bar != null && bar.getShell () != null
            && !bar.isDisposed () && !bar.getShell ().isDisposed ()) {
            int newYSize = bar.getShell ().getSize ().y;
            if (newYSize != orgSize [0]) {
                return;
            } else {
                bar.getShell ().layout (true);
                bar.getShell ().pack (true);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
615
1
Gpt3D_Clone615_1.java 1 14
Gpt3D_Clone615_1.java 15 28
----------------------------------------

public void run () {
    synchronized (lock) {
        if (bar.isDisposed () || bar.getShell ().isDisposed ()) {
            return;
        }
        currentSize [0] = bar.getShell ().getSize ().y;
        if (currentSize [0] != orgSize [0]) {
            return;
        } else {
            bar.getShell ().layout (true);
            bar.getShell ().pack (true);
        }
    }
}
----------------------------------------

public void run () {
    synchronized (lock) {
        if (bar.getShell ().isDisposed ()) {
            return;
        }
        currentSize [0] = bar.getShell ().getSize ().y;
        if (currentSize [0] == orgSize [0]) {
            bar.getShell ().layout (true);
            bar.getShell ().pack (true);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
617
0
Gpt3D_Clone617_0.java 1 9
Gpt3D_Clone617_0.java 10 21
----------------------------------------

public static boolean contains (String a, String b) {
    int diff = a.length () - b.length ();
    while (a.length () > 0) {
        b = b.replace (a.substring (0, 1), "");
        a = a.replace (a.substring (0, 1), "");
        if (diff != a.length () - b.length ()) return false;
    }
    return true;
}
----------------------------------------

public static boolean contains (String a, String b) {
    int diff = a.length () - b.length ();
    while (!a.isEmpty()) {
        b = b.replace (a.substring (0, 1), "");
        a = a.replace (a.substring (0, 1), "");
        diff = a.length () - b.length ();
        if (diff != b.length ()) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
617
1
Gpt3D_Clone617_1.java 1 9
Gpt3D_Clone617_1.java 10 19
----------------------------------------

public static boolean contains (String a, String b) {
    int diff = a.length () - b.length ();
    while (a.length () > 0) {
        b = b.replace (a.substring (0, 1), "");
        a = a.replace (a.substring (0, 1), "");
        if (diff != a.length () - b.length ()) return false;
    }
    return true;
}
----------------------------------------

public static boolean contains (String a, String b) {
    int diff = a.length () - b.length ();
    for (int i = 0; i < a.length (); i++) {
        b = b.replace (a.substring (i, i + 1), "");
        if (diff != a.length () - b.length ()) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
618
0
Gpt3D_Clone618_0.java 1 27
Gpt3D_Clone618_0.java 28 58
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < String, Integer > mapA = new HashMap < > ();
    Map < String, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        Integer val = mapA.get ("" + i);
        if (val != null) {
            mapA.put ("" + i, val + 1);
        } else {
            mapA.put ("" + i, 1);
        }
    }
    for (char i : b.toCharArray ()) {
        Integer val = mapB.get ("" + i);
        if (val != null) {
            mapB.put ("" + i, val + 1);
        } else {
            mapB.put ("" + i, 1);
        }
    }
    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {
        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < Character, Integer > mapA = new HashMap < > ();
    Map < Character, Integer > mapB = new HashMap < > ();
    for (int i=0; i<a.length(); i++) {
        char c = a.charAt(i);
        Integer val = mapA.get (c);
        if (val != null) {
            mapA.put (c, val + 1);
        } else {
            mapA.put (c, 1);
        }
    }
    for (int i=0; i<b.length(); i++) {
        char c = b.charAt(i);
        Integer val = mapB.get (c);
        if (val != null) {
            mapB.put (c, val + 1);
        } else {
            mapB.put (c, 1);
        }
    }
    for (Map.Entry < Character, Integer > entry : mapA.entrySet ()) {
        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
618
1
Gpt3D_Clone618_1.java 1 27
Gpt3D_Clone618_1.java 28 56
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < String, Integer > mapA = new HashMap < > ();
    Map < String, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        Integer val = mapA.get ("" + i);
        if (val != null) {
            mapA.put ("" + i, val + 1);
        } else {
            mapA.put ("" + i, 1);
        }
    }
    for (char i : b.toCharArray ()) {
        Integer val = mapB.get ("" + i);
        if (val != null) {
            mapB.put ("" + i, val + 1);
        } else {
            mapB.put ("" + i, 1);
        }
    }
    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {
        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < Character, Integer > mapA = new HashMap < > ();
    Map < Character, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        Integer val = mapA.get (i);
        if (val != null) {
            mapA.put (i, val + 1);
        } else {
            mapA.put (i, 1);
        }
    }
    for (char i : b.toCharArray ()) {
        Integer val = mapB.get (i);
        if (val != null) {
            mapB.put (i, val + 1);
        } else {
            mapB.put (i, 1);
        }
    }
    for (Map.Entry < Character, Integer > entry : mapA.entrySet ()) {
        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
618
2
Gpt3D_Clone618_2.java 1 27
Gpt3D_Clone618_2.java 28 56
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < String, Integer > mapA = new HashMap < > ();
    Map < String, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        Integer val = mapA.get ("" + i);
        if (val != null) {
            mapA.put ("" + i, val + 1);
        } else {
            mapA.put ("" + i, 1);
        }
    }
    for (char i : b.toCharArray ()) {
        Integer val = mapB.get ("" + i);
        if (val != null) {
            mapB.put ("" + i, val + 1);
        } else {
            mapB.put ("" + i, 1);
        }
    }
    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {
        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < Character, Integer > mapA = new HashMap < > ();
    Map < Character, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        Integer val = mapA.get (i);
        if (val != null) {
            mapA.put (i, val + 1);
        } else {
            mapA.put (i, 1);
        }
    }
    for (char i : b.toCharArray ()) {
        Integer val = mapB.get (i);
        if (val != null) {
            mapB.put (i, val + 1);
        } else {
            mapB.put (i, 1);
        }
    }
    for (Map.Entry < Character, Integer > entry : mapA.entrySet ()) {
        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
619
0
Gpt3D_Clone619_0.java 1 27
Gpt3D_Clone619_0.java 28 58
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < String, Integer > mapA = new HashMap < > ();
    Map < String, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        Integer val = mapA.get ("" + i);
        if (val != null) {
            mapA.put ("" + i, val + 1);
        } else {
            mapA.put ("" + i, 1);
        }
    }
    for (char i : b.toCharArray ()) {
        Integer val = mapB.get ("" + i);
        if (val != null) {
            mapB.put ("" + i, val + 1);
        } else {
            mapB.put ("" + i, 1);
        }
    }
    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {
        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

public static boolean containsV3(String a, String b) {
    boolean status = true;
    Map <Character, Integer> mapA = new HashMap<>();
    Map <Character, Integer> mapB = new HashMap<>();
    for (int i = 0; i < a.length(); i++) {
        Character c = a.charAt(i);
        Integer val = mapA.get(c);
        if (val != null) {
            mapA.put(c, val + 1);
        } else {
            mapA.put(c, 1);
        }
    }
    for (int i = 0; i < b.length(); i++) {
        Character c = b.charAt(i);
        Integer val = mapB.get(c);
        if (val != null) {
            mapB.put(c, val + 1);
        } else {
            mapB.put(c, 1);
        }
    }
    for (Map.Entry<Character, Integer> entry : mapA.entrySet()) {
        if (mapB.get(entry.getKey()) == null || entry.getValue() > mapB.get(entry.getKey())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
619
1
Gpt3D_Clone619_1.java 1 27
Gpt3D_Clone619_1.java 28 57
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < String, Integer > mapA = new HashMap < > ();
    Map < String, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        Integer val = mapA.get ("" + i);
        if (val != null) {
            mapA.put ("" + i, val + 1);
        } else {
            mapA.put ("" + i, 1);
        }
    }
    for (char i : b.toCharArray ()) {
        Integer val = mapB.get ("" + i);
        if (val != null) {
            mapB.put ("" + i, val + 1);
        } else {
            mapB.put ("" + i, 1);
        }
    }
    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {
        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < Character, Integer > mapA = new HashMap < > ();
    Map < Character, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        Integer valA = mapA.get (i);
        if (valA == null) {
            mapA.put (i, 1);
        } else {
            mapA.put (i, valA + 1);
        }
    }
    for (char i : b.toCharArray ()) {
        Integer valB = mapB.get (i);
        if (valB == null) {
            mapB.put (i, 1);
        } else {
            mapB.put (i, valB + 1);
        }
    }
    for (Map.Entry < Character, Integer > entry : mapA.entrySet ()) {
        Integer valB = mapB.get (entry.getKey ());
        if (valB == null || entry.getValue () > valB) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
619
3
Gpt3D_Clone619_3.java 1 27
Gpt3D_Clone619_3.java 28 54
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < String, Integer > mapA = new HashMap < > ();
    Map < String, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        Integer val = mapA.get ("" + i);
        if (val != null) {
            mapA.put ("" + i, val + 1);
        } else {
            mapA.put ("" + i, 1);
        }
    }
    for (char i : b.toCharArray ()) {
        Integer val = mapB.get ("" + i);
        if (val != null) {
            mapB.put ("" + i, val + 1);
        } else {
            mapB.put ("" + i, 1);
        }
    }
    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {
        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

public static boolean contains (String a, String b) {
    boolean status = true;
    Map < Character, Integer > mapA = new HashMap < > ();
    Map < Character, Integer > mapB = new HashMap < > ();
    for (char i : a.toCharArray ()) {
        if (!mapA.containsKey (i)) {
            mapA.put (i, 1);
        } else {
            mapA.put (i, mapA.get (i) + 1);
        }
    }
    for (char i : b.toCharArray ()) {
        if (!mapB.containsKey (i)) {
            mapB.put (i, 1);
        } else {
            mapB.put (i, mapB.get (i) + 1);
        }
    }
    for (Map.Entry < Character, Integer > entry : mapA.entrySet ()) {
        if (!mapB.containsKey (entry.getKey ()) || entry.getValue () > mapB.get (entry.getKey ())) {
            status = false;
        }
    }
    return status;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
623
0
Gpt3D_Clone623_0.java 1 17
Gpt3D_Clone623_0.java 18 39
----------------------------------------

public static int [] removeDuplicates (int [] arr) {
    int end = arr.length;
    for (int i = 0;
    i < end; i ++) {
        for (int j = i + 1;
        j < end; j ++) {
            if (arr [i] == arr [j]) {
                arr [j] = arr [end - 1];
                end --;
                j --;
            }
        }
    }
    int [] whitelist = new int [end];
    System.arraycopy (arr, 0, whitelist, 0, end);
    return whitelist;
}
----------------------------------------

public static int [] removeDuplicates (int [] arr) {
    int end = arr.length;
    for (int i = 0;
    i < end; i ++) {
        int c = arr[i];
        int j = i + 1;
        while (j < end) {
            if (c == arr [j]) {
                arr [j] = arr [end - 1];
                end --;
            }
            else {
                j++;
            }
        }
    }
    int [] whitelist = new int [end];
    System.arraycopy (arr, 0, whitelist, 0, end);
    return whitelist;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
623
1
Gpt3D_Clone623_1.java 1 17
Gpt3D_Clone623_1.java 18 38
----------------------------------------

public static int [] removeDuplicates (int [] arr) {
    int end = arr.length;
    for (int i = 0;
    i < end; i ++) {
        for (int j = i + 1;
        j < end; j ++) {
            if (arr [i] == arr [j]) {
                arr [j] = arr [end - 1];
                end --;
                j --;
            }
        }
    }
    int [] whitelist = new int [end];
    System.arraycopy (arr, 0, whitelist, 0, end);
    return whitelist;
}
----------------------------------------

public static int [] removeDuplicates (int [] arr) {
    int end = arr.length;
    for (int i = 0;
    i < end - 1; i ++) {
        for (int j = i + 1;
        j < end; j ++) {
            if (arr [i] == arr [j]) {
                for (int k = j;
                 k < end - 1; k ++) {
                    arr [k] = arr [k + 1];
                }
                end --;
            }
        }
    }
    int [] whitelist = new int [end];
    System.arraycopy (arr, 0, whitelist, 0, end);
    return whitelist;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
624
0
Gpt3D_Clone624_0.java 1 20
Gpt3D_Clone624_0.java 21 39
----------------------------------------

public static int [] removeDuplicates (int [] arr) {
    boolean [] set = new boolean [1001];
    int totalItems = 0;
    for (int i = 0;
    i < arr.length; ++ i) {
        if (! set [arr [i]]) {
            set [arr [i]] = true;
            totalItems ++;
        }
    }
    int [] ret = new int [totalItems];
    int c = 0;
    for (int i = 0;
    i < set.length; ++ i) {
        if (set [i]) {
            ret [c ++] = i;
        }
    }
    return ret;
}
----------------------------------------

public static int [] removeDuplicates (int [] arr) {
    Set<Integer> set = new HashSet<>();
    int totalItems = 0;
    for (int i = 0;
    i < arr.length; ++ i) {
        if (! set.contains(arr[i])) {
            set.add(arr[i]);
            totalItems ++;
        }
    }
    int [] ret = new int [totalItems];
    int c = 0;
    for (int i: set) {
            ret [c ++] = i;
    }
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
627
0
Gpt3D_Clone627_0.java 1 29
Gpt3D_Clone627_0.java 30 67
----------------------------------------

public static Comparable [] findCommonElements (Comparable [] [] collections) {
    Comparable [] arr1 = collections [0];
    Comparable [] arr2 = collections [1];
    Comparable [] arr3 = collections [2];
    if (arr1.length < arr2.length && arr1.length < arr3.length || arr2.length <= arr3.length) {
        hashArray = arr1;
        queryArray = ArrayUtils.addAll (arr2, arr3);
    } else if (arr2.length < arr1.length && arr2.length < arr3.length || arr1.length <= arr3.length) {
        hashArray = arr2;
        queryArray = ArrayUtils.addAll (arr1, arr3);
    } else if (arr3.length < arr1.length && arr3.length < arr2.length || arr1.length <= arr2.length) {
        hashArray = arr3;
        queryArray = ArrayUtils.addAll (arr1, arr2);
    }
    HashSet < Comparable > intersectionSet = new HashSet < > ();
    HashSet < Comparable > arrayToHash = new HashSet < > ();
    for (Comparable element : hashArray) {
        arrayToHash.add (element);
    }
    for (Comparable element : queryArray) {
        if (element != null) {
            comparisons ++;
        }
        if (arrayToHash.contains (element)) {
            intersectionSet.add (element);
        }
    }
    return intersectionSet.toArray (new Comparable [0]);
}
----------------------------------------

public static Comparable [] findCommonElements (Comparable [] [] collections) {
    Comparable [] arr1 = collections [0];
    Comparable [] arr2 = collections [1];
    Comparable [] arr3 = collections [2];
    if (arr1.length < arr2.length && arr1.length < arr3.length || arr2.length <= arr3.length) {
        hashArray = arr1;
        queryArray = ArrayUtils.addAll (arr2, arr3);
    } else if (arr2.length < arr1.length && arr2.length < arr3.length || arr1.length <= arr3.length) {
        hashArray = arr2;
        queryArray = ArrayUtils.addAll (arr1, arr3);
    } else if (arr3.length < arr1.length && arr3.length < arr2.length || arr1.length <= arr2.length) {
        hashArray = arr3;
        queryArray = ArrayUtils.addAll (arr1, arr2);
    }
    HashMap < Comparable, Integer > intersectionMap = new HashMap < > ();
    List < Comparable > arrayToHash = new ArrayList < > ();
    for (Comparable element : hashArray) {
        arrayToHash.add (element);
    }
    for (Comparable element : queryArray) {
        if (element != null) {
            comparisons ++;
        }
        if (arrayToHash.contains (element)) {
            int value = intersectionMap.getOrDefault (element, 0);
            intersectionMap.put (element, ++value);
        }
    }
    List < Comparable > intersectionList = new ArrayList <> ();
    for (Map.Entry < Comparable, Integer > entry : intersectionMap.entrySet()) {
        if (entry.getValue () > 1) {
            intersectionList.add (entry.getKey ());
        }
    }
    return intersectionList.toArray (new Comparable [0]);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
628
0
Gpt3D_Clone628_0.java 1 9
Gpt3D_Clone628_0.java 10 24
----------------------------------------

private void parseComments (InputStream in, Workbook workbook) {
    try {
        DefaultHandler handler = getCommentHandler (workbook);
        SAXParser saxParser = getSAXParser ();
        saxParser.parse (in, handler);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

private void parseComments(InputStream in, Workbook workbook) {
    try {
        DefaultHandler handler = getCommentHandler(workbook);
        SAXParser saxParser = getSAXParser();
         try {
            saxParser.parse(in, handler);
        } catch (Exception e) {
             e.printStackTrace();
        } 
    } catch (Exception e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
628
1
Gpt3D_Clone628_1.java 1 9
Gpt3D_Clone628_1.java 10 21
----------------------------------------

private void parseComments (InputStream in, Workbook workbook) {
    try {
        DefaultHandler handler = getCommentHandler (workbook);
        SAXParser saxParser = getSAXParser ();
        saxParser.parse (in, handler);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

private void parseComments(InputStream in, Workbook workbook) {
    DefaultHandler handler = null;
    try {
        handler = getCommentHandler(workbook);
        SAXParser saxParser = getSAXParser();
        saxParser.parse(in, handler);
    } catch (Exception e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
630
0
Gpt3D_Clone630_0.java 1 7
Gpt3D_Clone630_0.java 8 18
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (w.hasNext ()) {
        _textField.setText (w.next ().getName ());
    } else {
        timer.stop ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (w.hasNext ()) {
        Person item = w.next ();
        _textField.setText (item.getName ());
    } else {
        timer.stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
630
1
Gpt3D_Clone630_1.java 1 7
Gpt3D_Clone630_1.java 8 18
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (w.hasNext ()) {
        _textField.setText (w.next ().getName ());
    } else {
        timer.stop ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (w.hasNext ()) {
        Person p = w.next ();
        _textField.setText (p.getName ());
    } else {
        timer.stop ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
0
Gpt3D_Clone631_0.java 1 9
Gpt3D_Clone631_0.java 10 20
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    Object o = object;
    do{
        try {
            sleep(Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }while (true);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
631
1
Gpt3D_Clone631_1.java 1 9
Gpt3D_Clone631_1.java 10 20
----------------------------------------

public void run () {
    Object o = object;
    for (;;) {
        try {
            sleep (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    Object o = object;
    while (o != null) {
        try {
            o.wait (Long.MAX_VALUE);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
637
0
Gpt3D_Clone637_0.java 1 13
Gpt3D_Clone637_0.java 14 29
----------------------------------------

boolean isPerfectSquare (long number) {
    if (number < 0) return false;
    if (number < 2) return true;
    for (int i = 0;
    ; i ++) {
        long square = squareTable [i];
        if (square > number) return false;
        while (number % square == 0) {
            number /= square;
        }
        if (number == 1) return true;
    }
}
----------------------------------------

boolean isPerfectSquare (long number) {
    if (number < 0) return false;
    if (number < 2) return true;
    int i = 0; 
    while (true) {
        long square = squareTable [i];
        if (square > number) return false;
        while (number % square == 0) {
            number /= square;
        }
        if (number == 1) return true;
        i ++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
637
1
Gpt3D_Clone637_1.java 1 13
Gpt3D_Clone637_1.java 14 29
----------------------------------------

boolean isPerfectSquare (long number) {
    if (number < 0) return false;
    if (number < 2) return true;
    for (int i = 0;
    ; i ++) {
        long square = squareTable [i];
        if (square > number) return false;
        while (number % square == 0) {
            number /= square;
        }
        if (number == 1) return true;
    }
}
----------------------------------------

boolean isPerfectSquare (long number) {
    if (number < 0) return false;
    if (number < 2) return true;
    long i = 0;
    while (true) {
        long square = squareTable[i];
        if (square > number) return false;
        while (number % square == 0) {
            number /= square;
        }
        if (number == 1) return true;
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
637
2
Gpt3D_Clone637_2.java 1 13
Gpt3D_Clone637_2.java 14 29
----------------------------------------

boolean isPerfectSquare (long number) {
    if (number < 0) return false;
    if (number < 2) return true;
    for (int i = 0;
    ; i ++) {
        long square = squareTable [i];
        if (square > number) return false;
        while (number % square == 0) {
            number /= square;
        }
        if (number == 1) return true;
    }
}
----------------------------------------

boolean isPerfectSquare (long number) {
    if (number < 0) return false;
    if (number < 2) return true;
    int i = 0; 
    while (true) {
        long square = squareTable [i];
        if (square > number) return false;
        if (number % square == 0) {
            number /= square;
            if (number == 1) return true;
        }
        i ++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
639
1
Gpt3D_Clone639_1.java 1 63
Gpt3D_Clone639_1.java 64 129
----------------------------------------

public static boolean isPerfectSquare (long n) {
    if (n < 0) {
        return false;
    } else {
        switch ((byte) n) {
            case - 128 :
            case - 127 :
            case - 124 :
            case - 119 :
            case - 112 :
            case - 111 :
            case - 103 :
            case - 95 :
            case - 92 :
            case - 87 :
            case - 79 :
            case - 71 :
            case - 64 :
            case - 63 :
            case - 60 :
            case - 55 :
            case - 47 :
            case - 39 :
            case - 31 :
            case - 28 :
            case - 23 :
            case - 15 :
            case - 7 :
            case 0 :
            case 1 :
            case 4 :
            case 9 :
            case 16 :
            case 17 :
            case 25 :
            case 33 :
            case 36 :
            case 41 :
            case 49 :
            case 57 :
            case 64 :
            case 65 :
            case 68 :
            case 73 :
            case 81 :
            case 89 :
            case 97 :
            case 100 :
            case 105 :
            case 113 :
            case 121 :
                long i = (n * INV3465)>>> 52;
                if (! good3465 [(int) i]) {
                    return false;
                } else {
                    long r = round (Math.sqrt (n));
                    return r * r == n;
                }
            default :
                return false;
        }
    }
}
----------------------------------------

public static boolean isPerfectSquare (long n) {
    if (n < 0) {
        return false;
    } else { 
        long i = (n * INV3465)>>> 52;
        if (! good3465 [(int) i]) {
            return false;
        } else { 
            switch ((byte) n) {
                case 0 :
                case 1 :
                case 4 :
                case 9 :
                case 16 :
                case 17 :
                case 25 :
                case 33 :
                case 36 :
                case 41 :
                case 49 :
                case 57 :
                case 64 :
                case 65 :
                case 68 :
                case 73 :
                case 81 :
                case 89 :
                case 97 :
                case 100 :
                case 105 :
                case 113 :
                case 121 :
                    long r = round (Math.sqrt (n));
                    return r * r == n;
                case - 128 :
                case - 127 :
                case - 124 :
                case - 119 :
                case - 112 :
                case - 111 :
                case - 103 :
                case - 95 :
                case - 92 :
                case - 87 :
                case - 79 :
                case - 71 :
                case - 64 :
                case - 63 :
                case - 60 :
                case - 55 :
                case - 47 :
                case - 39 :
                case - 31 :
                case - 28 :
                case - 23 :
                case - 15 :
                case - 7 :
                    return false;
                default :
                    return false;
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
643
0
Gpt3D_Clone643_0.java 1 14
Gpt3D_Clone643_0.java 15 30
----------------------------------------

public static String join (Object [] objects, String delimiter) {
    if (objects.length == 0) {
        return "";
    }
    int capacityGuess = (objects.length * objects [0].toString ().length ()) + ((objects.length - 1) * delimiter.length ());
    StringBuilder ret = new StringBuilder (capacityGuess);
    ret.append (objects [0]);
    for (int i = 1;
    i < objects.length; i ++) {
        ret.append (delimiter);
        ret.append (objects [i]);
    }
    return ret.toString ();
}
----------------------------------------

public static String join (Object [] objects, String delimiter) {
    if (objects.length == 0) {
        return "";
    }
    int capacityGuess = (objects.length * objects [0].toString ().length ()) + ((objects.length - 1) * delimiter.length ());
    String ret = "";
    for (int i = 0; i < objects.length; i ++){
        ret += objects[i];
        if (i < objects.length -1) {
            ret += delimiter;
        }
    }
    return ret.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
644
0
Gpt3D_Clone644_0.java 1 11
Gpt3D_Clone644_0.java 12 27
----------------------------------------

public static String join (String r [], String d) {
    if (r.length == 0) return "";
    StringBuilder sb = new StringBuilder ();
    int i;
    for (i = 0; i < r.length - 1; i ++) {
        sb.append (r [i]);
        sb.append (d);
    }
    sb.append (r [i]);
    return sb.toString ();
}
----------------------------------------

public static String join (String[] r, String d) {
    if (r.length == 0) return "";
    StringBuilder sb = new StringBuilder();
    int i;
    for (i = 0; i < r.length; i++) {
        if (i != r.length - 1) {
            sb.append(r[i]);
            sb.append(d);
        } else {
            sb.append(r[i]);
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
644
2
Gpt3D_Clone644_2.java 1 11
Gpt3D_Clone644_2.java 12 24
----------------------------------------

public static String join (String r [], String d) {
    if (r.length == 0) return "";
    StringBuilder sb = new StringBuilder ();
    int i;
    for (i = 0; i < r.length - 1; i ++) {
        sb.append (r [i]);
        sb.append (d);
    }
    sb.append (r [i]);
    return sb.toString ();
}
----------------------------------------

public static String join(String[] r, String d) {
    if (r.length == 0) return "";
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < r.length; i++) {
        sb.append(r[i]);
        if (i != r.length - 1) {
            sb.append(d);
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
646
0
Gpt3D_Clone646_0.java 1 9
Gpt3D_Clone646_0.java 10 20
----------------------------------------

public static void main (String [] args) {
    String set = new java.util.BitSet () {
        {
            set (1, 100 + 1);
        }
    }
    .toString ();
    System.out.append (set, 1, set.length () - 1);
}
----------------------------------------

public static void main (String [] args) {
    String set = new java.util.BitSet() {
        {
            set (1, Integer.MAX_VALUE);
        }
    }
    .toString ();
    System.out.append (set, 0, set.length ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
646
1
Gpt3D_Clone646_1.java 1 9
Gpt3D_Clone646_1.java 10 20
----------------------------------------

public static void main (String [] args) {
    String set = new java.util.BitSet () {
        {
            set (1, 100 + 1);
        }
    }
    .toString ();
    System.out.append (set, 1, set.length () - 1);
}
----------------------------------------

public static void main (String [] args) {
    String set = new java.util.BitSet() {
        {
            set (1, 101);
        }
    }
    .toString ();
    System.out.append (set, 0, set.length ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
646
2
Gpt3D_Clone646_2.java 1 9
Gpt3D_Clone646_2.java 10 30
----------------------------------------

public static void main (String [] args) {
    String set = new java.util.BitSet () {
        {
            set (1, 100 + 1);
        }
    }
    .toString ();
    System.out.append (set, 1, set.length () - 1);
}
----------------------------------------

public class Main {
    public static void main(String[] args) {
        initializeSet();
        printToConsole();
    }
    public static void initializeSet() {
        String set = new java.util.BitSet () {
            {
                set (1, 100 + 1);
            }
        }
        .toString ();
    }
    public static void printToConsole(){
        System.out.append (set, 1, set.length () - 1);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
64
0
Gpt3D_Clone64_0.java 1 18
Gpt3D_Clone64_0.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.moveUp ();
            break;
        case DOWN :
            draw.moveDown ();
            break;
        case LEFT :
            draw.moveLeft ();
            break;
        case RIGHT :
            draw.moveRight ();
            break;
        default :
            break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
656
1
Gpt3D_Clone656_1.java 1 14
Gpt3D_Clone656_1.java 15 31
----------------------------------------

public static String myTrim (String input, String list) {
    String r = "";
    for (int i = 0;
    i < input.length (); i ++) {
        int k = 0;
        for (; k < list.length (); k ++) {
            if (input.charAt (i) == list.charAt (k)) {
                break;
            }
        }
        if (k == list.length ()) r += input.charAt (i);
    }
    return r;
}
----------------------------------------

public static String myTrim (String input, String list) {
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < input.length (); i++) {
        int k = 0; 
        for (; k < list.length (); k++) {
            if (input.charAt(i) == list.charAt(k)) {
                break;
            }
        }
        if (k == list.length()) {
            sb.append(input.charAt(i));
        }
    }
    return sb.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
656
2
Gpt3D_Clone656_2.java 1 14
Gpt3D_Clone656_2.java 15 31
----------------------------------------

public static String myTrim (String input, String list) {
    String r = "";
    for (int i = 0;
    i < input.length (); i ++) {
        int k = 0;
        for (; k < list.length (); k ++) {
            if (input.charAt (i) == list.charAt (k)) {
                break;
            }
        }
        if (k == list.length ()) r += input.charAt (i);
    }
    return r;
}
----------------------------------------

public static String myTrim (String str, String list) {
    String result = "";
    for (int i = 0; i < str.length(); i++) {
        boolean flag = true;
        for (int k = 0; k < list.length(); k++) {
            if (str.charAt(i) == list.charAt(k)) {
                flag = false;
                break;
            }   
        }
        if(flag)
            result += str.charAt(i);
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
657
0
Gpt3D_Clone657_0.java 1 16
Gpt3D_Clone657_0.java 17 33
----------------------------------------

public void show (String columnName) {
    Object o = hiddenColumns.remove (columnName);
    if (o == null) {
        return;
    }
    tcm.addColumn ((TableColumn) o);
    o = hiddenColumns.remove (":" + columnName);
    if (o == null) {
        return;
    }
    int column = ((Integer) o).intValue ();
    int lastColumn = tcm.getColumnCount () - 1;
    if (column < lastColumn) {
        tcm.moveColumn (lastColumn, column);
    }
}
----------------------------------------

public void show (String columnName) {
    Object o;
    o = hiddenColumns.remove (columnName);
    if (o != null) {
        tcm.addColumn ((TableColumn) o);
        o = hiddenColumns.remove (":" + columnName);
        if (o != null) {
            int column = ((Integer) o).intValue ();
            int lastColumn = tcm.getColumnCount () - 1;
            if (column < lastColumn) {
                tcm.moveColumn (lastColumn, column);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
657
1
Gpt3D_Clone657_1.java 1 16
Gpt3D_Clone657_1.java 17 32
----------------------------------------

public void show (String columnName) {
    Object o = hiddenColumns.remove (columnName);
    if (o == null) {
        return;
    }
    tcm.addColumn ((TableColumn) o);
    o = hiddenColumns.remove (":" + columnName);
    if (o == null) {
        return;
    }
    int column = ((Integer) o).intValue ();
    int lastColumn = tcm.getColumnCount () - 1;
    if (column < lastColumn) {
        tcm.moveColumn (lastColumn, column);
    }
}
----------------------------------------

public void show (String columnName) {
    Object o = hiddenColumns.remove (columnName);
    if (o != null) {
        tcm.addColumn ((TableColumn) o);
    }
    o = hiddenColumns.remove (":" + columnName);
    if (o != null) {
        int column = ((Integer) o).intValue ();
        int lastColumn = tcm.getColumnCount () - 1;
        if (column < lastColumn) {
            tcm.moveColumn (lastColumn, column);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
657
2
Gpt3D_Clone657_2.java 1 16
Gpt3D_Clone657_2.java 17 32
----------------------------------------

public void show (String columnName) {
    Object o = hiddenColumns.remove (columnName);
    if (o == null) {
        return;
    }
    tcm.addColumn ((TableColumn) o);
    o = hiddenColumns.remove (":" + columnName);
    if (o == null) {
        return;
    }
    int column = ((Integer) o).intValue ();
    int lastColumn = tcm.getColumnCount () - 1;
    if (column < lastColumn) {
        tcm.moveColumn (lastColumn, column);
    }
}
----------------------------------------

public void show (String columnName) {
    Object o = hiddenColumns.remove (columnName);
    if (o != null) {
        tcm.addColumn ((TableColumn) o);
    }
    o = hiddenColumns.remove (":" + columnName);
    if (o != null) {
        int column = ((Integer) o).intValue ();
        int lastColumn = tcm.getColumnCount () - 1;
        if (column < lastColumn) {
            tcm.moveColumn (lastColumn, column);
        }
    }
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
658
1
Gpt3D_Clone658_1.java 1 10
Gpt3D_Clone658_1.java 11 24
----------------------------------------

private static char findFirstCharacter (String s) {
    HashSet < Character > unique = new LinkedHashSet < > (), seen = new HashSet < > ();
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        if (seen.add (c)) unique.add (c);
        else unique.remove (c);
    }
    return unique.isEmpty () ? '_' : unique.iterator ().next ();
}
----------------------------------------

private static char findFirstCharacter (String s) {
    LinkedHashSet < Character > unique = new LinkedHashSet < > ();
    HashSet < Character > seen = new HashSet < > ();
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        if (seen.add (c)) unique.add (c);
        else unique.remove (c);
    }
    Iterator < Character > iterator = unique.iterator ();
    return  iterator.hasNext() ? iterator.next() : '_';
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
658
2
Gpt3D_Clone658_2.java 1 10
Gpt3D_Clone658_2.java 11 22
----------------------------------------

private static char findFirstCharacter (String s) {
    HashSet < Character > unique = new LinkedHashSet < > (), seen = new HashSet < > ();
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        if (seen.add (c)) unique.add (c);
        else unique.remove (c);
    }
    return unique.isEmpty () ? '_' : unique.iterator ().next ();
}
----------------------------------------

private static char findFirstCharacter (String s) {
    HashSet <Character> unique = new LinkedHashSet<>();
    HashSet<Character> seen = new HashSet<>();
    for (int i = 0; i < s.length (); i++) {
        char c = s.charAt (i);
        if (seen.add (c)) unique.add (c);
        else unique.remove (c);
    }
    return unique.isEmpty () ? '_' : unique.iterator ().next ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
659
0
Gpt3D_Clone659_0.java 1 14
Gpt3D_Clone659_0.java 15 30
----------------------------------------

public static void main (String...args) throws Exception {
    List < char [] > myArray = new ArrayList < char [] > ();
    myArray.add ("string1".toCharArray ());
    myArray.add ("string2".toCharArray ());
    myArray.add ("string3".toCharArray ());
    char [] [] charArray2D = myArray.toArray (new char [0] [0]);
    System.out.println (charArray2D.length);
    StringBuilder s = new StringBuilder ();
    for (char [] c : myArray) {
        s.append (String.copyValueOf (c));
    }
    char [] charArray1D = s.toString ().toCharArray ();
    System.out.println (charArray1D.length);
}
----------------------------------------

public static void myMethod(String input) throws Exception {
    ArrayList<char[]> myList = new ArrayList<char[]>();
    myList.add(input.toCharArray());
    myList.add(input.toCharArray());
    myList.add(input.toCharArray());
    char[][] charArray2D = myList.toArray(new char[myList.size()][]);
    System.out.println(charArray2D.length);
    StringBuilder stringBuilder = new StringBuilder();
    for (char[] c : myList){
        stringBuilder.append(String.copyValueOf(c));
    }
    char[] finalArray = stringBuilder.toString().toCharArray();
    System.out.println(finalArray.length);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
660
0
Gpt3D_Clone660_0.java 1 9
Gpt3D_Clone660_0.java 10 20
----------------------------------------

public static void main (String [] args) {
    char cont = 'E';
    do {
        temp1 = getTemp ();
        scale1 = scaleOne ();
        scale2 = toScale ();
        System.out.print ("Your final temp is: " + convert () + ' ' + scale2);
    } while (cont == 'N');
}
----------------------------------------

public static void main (String [] args) {
    char cont = 'E';
    while (cont == 'N') {
        temp1 = getTemp ();
        scale1 = scaleOne ();
        scale2 = toScale ();
        System.out.print ("Your final temp is: " + convert () + ' ' + scale2);
    } 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
661
0
Gpt3D_Clone661_0.java 1 12
Gpt3D_Clone661_0.java 13 24
----------------------------------------

public void run () {
    System.out.println (i);
    try {
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println (i);
        cb.await ();
        i = i + 3;
        Thread.sleep (1000);          
    } catch (InterruptedException | BrokenBarrierException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
0
Gpt3D_Clone666_0.java 1 10
Gpt3D_Clone666_0.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        int i = 0;
        while (i < 2) {
            System.out.println ("tac");
            i++;
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
666
1
Gpt3D_Clone666_1.java 1 10
Gpt3D_Clone666_1.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        int two = 2;
        for (int i = 0;
        i < two; i += 1) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
667
0
Gpt3D_Clone667_0.java 1 10
Gpt3D_Clone667_0.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        int i = 0;
        while (i < 2) {
            System.out.println ("toe");
            i++;
        }
    } catch (Exception e) {
        e.getStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
66
0
Gpt3D_Clone66_0.java 1 18
Gpt3D_Clone66_0.java 19 38
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.incrementY (false);
            break;
        case DOWN :
            draw.incrementY (true);
            break;
        case LEFT :
            draw.incrementX (false);
            break;
        case RIGHT :
            draw.incrementX (true);
            break;
        default :
            break;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    switch (direction) {
        case UP :
            draw.moveY (-1);
            break;
        case DOWN :
            draw.moveY (1);
            break;
        case LEFT :
            draw.moveX (-1);
            break;
        case RIGHT :
            draw.moveX (1);
            break;
        default :
            break;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
672
0
Gpt3D_Clone672_0.java 1 10
Gpt3D_Clone672_0.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        int i = 0;
        while (i < 2) {
            System.out.println ("tac");
            i++;
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
674
0
Gpt3D_Clone674_0.java 1 9
Gpt3D_Clone674_0.java 10 20
----------------------------------------

public static void main (String [] args) {
    State s = new State ();
    Thread t1 = new Thread (new T1 (s));
    Thread t2 = new Thread (new T2 (s));
    Thread t3 = new Thread (new T3 (s));
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

public static void main (String [] args) {
    State s = new State ();
    Thread t1 = new Thread (new T1 (s.clone()));
    Thread t2 = new Thread (new T2 (s.clone()));
    Thread t3 = new Thread (new T3 (s.clone()));
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
674
1
Gpt3D_Clone674_1.java 1 9
Gpt3D_Clone674_1.java 10 20
----------------------------------------

public static void main (String [] args) {
    State s = new State ();
    Thread t1 = new Thread (new T1 (s));
    Thread t2 = new Thread (new T2 (s));
    Thread t3 = new Thread (new T3 (s));
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

public static void main (String [] args) {
    State s = new State ();
    Thread t1 = new Thread (new T1 (s));
    Thread t2 = new Thread (new T2 (s.clone()));
    Thread t3 = new Thread (new T3 (s.clone()));
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
674
2
Gpt3D_Clone674_2.java 1 9
Gpt3D_Clone674_2.java 10 20
----------------------------------------

public static void main (String [] args) {
    State s = new State ();
    Thread t1 = new Thread (new T1 (s));
    Thread t2 = new Thread (new T2 (s));
    Thread t3 = new Thread (new T3 (s));
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

public static void main (String [] args) {
    State s = new State ();
    Thread t1 = new Thread (new T1 (s));
    t1.start ();
    Thread t2 = new Thread (new T2 (s));
    t2.start ();
    Thread t3 = new Thread (new T3 (s));
    t3.start ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
676
0
Gpt3D_Clone676_0.java 1 10
Gpt3D_Clone676_0.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        int x = 2;
        for (int i = 0;
        i < x; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
677
0
Gpt3D_Clone677_0.java 1 10
Gpt3D_Clone677_0.java 11 24
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tac");
            System.out.println ("tac");
            System.out.println ("tac");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
678
0
Gpt3D_Clone678_0.java 1 10
Gpt3D_Clone678_0.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("toe");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    int i = 0;
    while (i < 2) {
        try {
            System.out.println ("toe");
            i ++;
        } catch (Exception e) {
            e.getStackTrace ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
679
0
Gpt3D_Clone679_0.java 1 10
Gpt3D_Clone679_0.java 11 23
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 2; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        int count = 2; 
        for (int i = 0;
        i < count; i ++) {
            System.out.println ("tic");
        }
    } catch (Exception e) {
        e.getStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
0
Gpt3D_Clone67_0.java 1 10
Gpt3D_Clone67_0.java 11 23
----------------------------------------

public static void main (final String [] args) {
    final Console console = System.console ();
    if (console != null) {
        final SortNames sortNames = new SortNames (console);
        sortNames.run ();
    } else {
        System.err.println ("Sorry, no console.");
        System.exit (1);
    }
}
----------------------------------------

public static int main (final String [] args) {
    final Console console = System.console ();
    if (console != null) {
        final SortNames sortNames = new SortNames (console);
        return sortNames.exec ();
    } else {
        System.err.println ("Sorry, no console.");
        System.exit (1);
    }
    return 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
67
2
Gpt3D_Clone67_2.java 1 10
Gpt3D_Clone67_2.java 11 22
----------------------------------------

public static void main (final String [] args) {
    final Console console = System.console ();
    if (console != null) {
        final SortNames sortNames = new SortNames (console);
        sortNames.run ();
    } else {
        System.err.println ("Sorry, no console.");
        System.exit (1);
    }
}
----------------------------------------

public static void main (String [] args) {
    Console console = System.console ();
    if (console != null) {
        SortNames sortNames = new SortNames (console);
        sortNames.run ();
    } else {
        System.err.println ("Sorry, no console.");
        System.exit (1);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
682
0
Gpt3D_Clone682_0.java 1 19
Gpt3D_Clone682_0.java 20 42
----------------------------------------

public static void main (String [] args) {
    String s = "harikrishna";
    String s2 = "";
    for (int i = 0;
    i < s.length (); i ++) {
        Boolean found = false;
        for (int j = 0;
        j < s2.length (); j ++) {
            if (s.charAt (i) == s2.charAt (j)) {
                found = true;
                break;
            }
        }
        if (found == false) {
            s2 = s2.concat (String.valueOf (s.charAt (i)));
        }
    }
    System.out.println (s2);
}
----------------------------------------

public static void main(String[] args){
    String s = "harikrishna";
    String s2 = "";
    int i = 0;
    while(i < s.length()){
        Boolean found = false;
        int j = 0;
        while(j < s2.length()){
            if(s.charAt(i) == s2.charAt(j)){
                found = true;
                break;
            }
            j++;
        }
        if(found == false){
            s2 = s2.concat(String.valueOf(s.charAt(i)));
        }
        i++;
    } 
    System.out.println(s2);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
688
0
Gpt3D_Clone688_0.java 1 19
Gpt3D_Clone688_0.java 20 45
----------------------------------------

public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int thisMin = Math.max (minimumValue, totalLeft / rollsLeft);
        int range = thisMax - thisMin;
        if (range < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = range;
        for (int j = 0;
        j * j < rollsLeft; j ++) rndValue = rnd.nextInt (rndValue + 1);
        totalLeft -= ret [i] = rndValue + thisMin;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

public static int [] genRandoms (int total, int numberOfRandoms, int minimumValue) {
    int [] ret = new int [numberOfRandoms];
    Random rnd = new Random ();
    int totalLeft = total;
    for (int i = 0;
    i < numberOfRandoms; i ++) {
        final int rollsLeft = numberOfRandoms - i;
        int thisMax = totalLeft - (rollsLeft - 1) * minimumValue;
        int thisMin = Math.max (minimumValue, totalLeft / rollsLeft);
        int range = thisMax - thisMin;
        if (range < 0) throw new IllegalArgumentException ("Cannot have " + minimumValue + " * " + numberOfRandoms + " < " + total);
        int rndValue = range;
        boolean isDone = false;
        int j = 0;
        while (!isDone) {
            if (j * j < rollsLeft) rndValue = rnd.nextInt (rndValue + 1);
            else isDone = true;
            j++;
        }
        totalLeft -= ret [i] = rndValue + thisMin;
    }
    Collections.shuffle (Arrays.asList (ret), rnd);
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
689
0
Gpt3D_Clone689_0.java 1 27
Gpt3D_Clone689_0.java 28 49
----------------------------------------

private int [] randNums (int total, int n) {
    final int [] results = new int [n];
    if (total == 0) {
        Arrays.fill (results, 0);
        return results;
    }
    final BigInteger [] rs = new BigInteger [n];
    final BigInteger totalPlus1 = BigInteger.valueOf (total + 1L);
    while (true) {
        for (int i = 0;
        i < n; ++ i) {
            rs [i] = new BigInteger (256, rand);
        }
        BigInteger sum = BigInteger.ZERO;
        for (BigInteger r : rs) {
            sum = sum.add (r);
        }
        if (sum.compareTo (BigInteger.ZERO) == 0) {
            continue;
        }
        for (int i = 0;
        i < n; ++ i) {
            results [i] = sum.mod (rs [i]).mod (totalPlus1).intValue ();
        }
        return results;
    }
}
----------------------------------------

private int [] randNums (int total, int n) {
    final int [] results = new int [n];
    if (total == 0) {
        Arrays.fill (results, 0);
        return results;
    }
    BigInteger sum = BigInteger.ZERO;
    while (true) {
        int randomNumber = new BigInteger (256, rand).intValue ();
        sum = sum.add (BigInteger.valueOf(randomNumber));
        if (sum.compareTo (BigInteger.ZERO) == 0) {
            continue;
        }
        for (int i = 0;
        i < n; ++ i) {
            results [i] = (randomNumber % (total + 1)) % sum.intValue();
        }
        return results;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
690
0
Gpt3D_Clone690_0.java 1 12
Gpt3D_Clone690_0.java 13 27
----------------------------------------

public static Date addBusinessDays (Date date, int days) {
    DateTime result = new DateTime (date);
    result = isWeekEnd (result) ? getPreviousBusinessDate (result) : result;
    for (int i = 0;
    i < days; i ++) {
        if (isWeekEnd (result)) {
            i --;
        }
        result = result.plusDays (1);
    }
    return result.toDate ();
}
----------------------------------------

public static Date addBusinessDays (Date date, int days) {
    DateTime result = new DateTime (date);
    result = isWeekEnd (result) ? getPreviousBusinessDate (result) : result;
    int i = 0;
    while (i < days) {
        if (isWeekEnd (result)) {
            i--;
        }
        result = result.plusDays (1);
        i++;
    }
    return result.toDate ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
690
1
Gpt3D_Clone690_1.java 1 12
Gpt3D_Clone690_1.java 13 27
----------------------------------------

public static Date addBusinessDays (Date date, int days) {
    DateTime result = new DateTime (date);
    result = isWeekEnd (result) ? getPreviousBusinessDate (result) : result;
    for (int i = 0;
    i < days; i ++) {
        if (isWeekEnd (result)) {
            i --;
        }
        result = result.plusDays (1);
    }
    return result.toDate ();
}
----------------------------------------

public static Date addBusinessDays (Date date, int days) {
    DateTime result = new DateTime (date);
    if (isWeekEnd (result)) {
        result = getPreviousBusinessDate (result);
    }
    while (days > 0) {
        result = result.plusDays (1);
        if (!isWeekEnd (result)) {
            days--;
        }
    }
    return result.toDate ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
690
2
Gpt3D_Clone690_2.java 1 12
Gpt3D_Clone690_2.java 13 27
----------------------------------------

public static Date addBusinessDays (Date date, int days) {
    DateTime result = new DateTime (date);
    result = isWeekEnd (result) ? getPreviousBusinessDate (result) : result;
    for (int i = 0;
    i < days; i ++) {
        if (isWeekEnd (result)) {
            i --;
        }
        result = result.plusDays (1);
    }
    return result.toDate ();
}
----------------------------------------

public static Date addBusinessDays (Date date, int days) {
    DateTime result = new DateTime (date);
    if (isWeekEnd (result)) {
        result = getPreviousBusinessDate (result);
    }
    for (int i = 0; i < days; i ++) {
        result = result.plusDays (1);
        if (isWeekEnd (result)) {
            i--;
        }
    }
    return result.toDate ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
691
0
Gpt3D_Clone691_0.java 1 19
Gpt3D_Clone691_0.java 20 38
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (IOException e) {
        LOGGER.error ("IO Error\n" + e.getMessage ());
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

public void registerModule (HttpServletRequest req, ModuleType moduleType) {
    LOGGER.debug ("Register New Module - " + moduleType.name ());
    try {
        ModuleEntityDao moduleEntityDao;
        if (req.getParameterMap().isEmpty()) {
            LOGGER.error ("The rest request is empty.No info to register");
        } else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {
            LOGGER.error ("The BA object is null. There is nothing to register");
        } else if (processRegistryDal.getModule (moduleEntityDao.getType(), moduleEntityDao.getId ()) == null) {
            processRegistryDal.addNewModule (moduleEntityDao);
        } else {
            processRegistryDal.updateModule (moduleEntityDao);
        }
    } catch (ServletException e) {
        LOGGER.error ("Servlet Error\n" + e.getMessage ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
701
1
Gpt3D_Clone701_1.java 1 11
Gpt3D_Clone701_1.java 12 25
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length == 0 || populations.length == 0 || countries.length != populations.length) {
        return;
    }
    int longestCountry = Arrays.stream (countries).map (String :: toString).mapToInt (String :: length).max ().getAsInt ();
    int longestPop = Arrays.stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().getAsInt ();
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.printf ("%-" + longestCountry + "s | %" + longestPop + "d%n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length == 0 || populations.length == 0 || countries.length != populations.length) {
        return;
    }
    int longestCountry = Arrays.stream (countries).map (String :: toString).mapToInt (String :: length).max ().getAsInt ();
    int longestPop = Arrays.stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().getAsInt ();
    int i = 0;
    while (i < countries.length) {
        System.out.printf ("%-" + longestCountry + "s | %" + longestPop + "d%n", countries [i], populations [i]);
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
702
0
Gpt3D_Clone702_0.java 1 23
Gpt3D_Clone702_0.java 24 42
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

public static void printTable(String[] countries, int[] populations) {
    if (countries.length != 0) {
        int longestNameInput = 0;
        int longestPopInput = 0;
        for (String name : countries) 
            longestNameInput = Math.max(longestNameInput, name.length());
        for (int pop : populations) 
            longestPopInput = Math.max(longestPopInput, String.valueOf(pop).length());
        for (int i = 0; i < countries.length; i++) {
            System.out.print(countries[i]);
            for (int j = 0; j < (longestNameInput - countries[i].length()); j++) System.out.print(" ");
            System.out.print(" | ");
            for (int k = 0; k < (longestPopInput - String.valueOf(populations[i]).length()); k++) System.out.print(" ");
            System.out.println(populations[i]);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
703
1
Gpt3D_Clone703_1.java 1 9
Gpt3D_Clone703_1.java 10 21
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format (String.format ("%%-%ds | %%%dd\n", maxCountryLength, maxPopulationLength), countries [i], populations [i]);
        System.out.println (String.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d", countries [i], populations [i]));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
703
2
Gpt3D_Clone703_2.java 1 9
Gpt3D_Clone703_2.java 10 20
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = IntStream.of (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = IntStream.of (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
704
1
Gpt3D_Clone704_1.java 1 23
Gpt3D_Clone704_1.java 24 52
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries [0].length ();
        int longestPopInput = String.valueOf (populations [0]).length ();
        for (int i = 0;
        i < countries.length; i ++) {
            int countLength = countries [i].length ();
            int popLength = String.valueOf (populations [i]).length ();
            if (countLength > longestNameInput) longestNameInput = countLength;
            if (popLength > longestPopInput) longestPopInput = popLength;
        }
        for (int i = 0;
        i < countries.length; i ++) {
            System.out.print (countries [i]);
            for (int j = 0;
            j < (longestNameInput - countries [i].length ()); j ++) System.out.print (" ");
            System.out.print (" | ");
            for (int k = 0;
            k < (longestPopInput - String.valueOf (populations [i]).length ()); k ++) System.out.print (" ");
            System.out.println (populations [i]);
        }
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    if (countries.length != 0) {
        int longestNameInput = countries[0].length();
        int longestPopInput = String.valueOf(populations[0]).length();
        for (int i = 0; i < countries.length; i++) {
            int countLength = countries[i].length();
            int popLength = String.valueOf(populations[i]).length();
            if (countLength > longestNameInput) {
                longestNameInput = countLength;
            }
            if (popLength > longestPopInput) {
                longestPopInput = popLength;
            }
        }
        for (int i = 0; i < countries.length; i++) {
            System.out.print(countries[i]);
            for (int j = 0; j < (longestNameInput - countries[i].length()); j++) {
                System.out.print(" ");
            }
            System.out.print(" | ");
            for (int k = 0; k < (longestPopInput - String.valueOf(populations[i]).length()); k++) {
                System.out.print(" ");
            }
            System.out.println(populations[i]);
        }
    }	
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
0
Gpt3D_Clone705_0.java 1 9
Gpt3D_Clone705_0.java 10 21
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String::length).max().orElse(defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer::toString).mapToInt(String::length).max().orElse(defaultLength);
    int i = 0;
    while (i < countries.length) {
        System.out.format("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries[i], populations[i]);
	i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
1
Gpt3D_Clone705_1.java 1 9
Gpt3D_Clone705_1.java 10 21
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String::length).max().orElse(defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer::toString).mapToInt(String::length).max().orElse(defaultLength);
    for (String country : countries) {
        for (int population : populations) {
            System.out.format("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", country, population);
	}
   }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
2
Gpt3D_Clone705_2.java 1 9
Gpt3D_Clone705_2.java 10 20
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = Math.max (defaultLength, Stream.of (countries).mapToInt (String :: length).max ().orElse (defaultLength));
    int maxPopulationLength = Math.max (defaultLength, Stream.of (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength));
    for (int i = 0; i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
705
3
Gpt3D_Clone705_3.java 1 9
Gpt3D_Clone705_3.java 10 20
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = stream (countries).mapToInt (String :: length).max ().orElse (defaultLength);
    int maxPopulationLength = stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength);
    for (int i = 0;
    i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

public static void printTable (String [] countries, int [] populations) {
    int defaultLength = 10;
    int maxCountryLength = Math.max (defaultLength, Arrays.stream (countries).mapToInt (String :: length).max ().orElse (defaultLength));
    int maxPopulationLength = Math.max (defaultLength, Arrays.stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().orElse (defaultLength));
    for (int i = 0; i < countries.length; i ++) {
        System.out.format ("%-" + maxCountryLength + "s | %" + maxPopulationLength + "d\n", countries [i], populations [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
706
0
Gpt3D_Clone706_0.java 1 16
Gpt3D_Clone706_0.java 17 40
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (! Person.class.isAssignableFrom (obj.getClass ())) {
        return false;
    }
    final Person other = (Person) obj;
    if ((this.name == null) ? (other.name != null) : ! this.name.equals (other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (! Person.class.isAssignableFrom (obj.getClass ())) {
        return false;
    }
    final Person other = (Person) obj;
    if (this.name == null) {
        if (other.name != null) {
            return false;
        } 
    } else {
        if (! this.name.equals (other.name)) {
            return false;
        }
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
706
1
Gpt3D_Clone706_1.java 1 16
Gpt3D_Clone706_1.java 17 35
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (! Person.class.isAssignableFrom (obj.getClass ())) {
        return false;
    }
    final Person other = (Person) obj;
    if ((this.name == null) ? (other.name != null) : ! this.name.equals (other.name)) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (obj == null || ! Person.class.isAssignableFrom (obj.getClass ())) {
        return false;
    }
    final Person other = (Person) obj;
    if (this.name != null) {
        if (! this.name.equals (other.name)) {
            return false;
        }
    } else if (other.name != null) {
        return false;
    }
    if (this.age != other.age) {
        return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
707
0
Gpt3D_Clone707_0.java 1 10
Gpt3D_Clone707_0.java 11 26
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if ((other == null) || (getClass () != other.getClass ())) {
        result = false;
    } else {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    }
    return result;
}
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if (other == null) {
        result = false;
    } else {
        if (getClass () == other.getClass ()) {
            People otherPeople = (People) other;
            result = name.equals (otherPeople.name) && age == otherPeople.age;
        } else {
            result = false;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
707
1
Gpt3D_Clone707_1.java 1 10
Gpt3D_Clone707_1.java 11 26
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if ((other == null) || (getClass () != other.getClass ())) {
        result = false;
    } else {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    }
    return result;
}
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if(other == null) {
        result = false;
    } else {
        if (getClass () == other.getClass ()) {
            People otherPeople = (People) other;
            result = name.equals (otherPeople.name) && age == otherPeople.age;
        } else {
            result = false;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
707
2
Gpt3D_Clone707_2.java 1 10
Gpt3D_Clone707_2.java 11 26
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if ((other == null) || (getClass () != other.getClass ())) {
        result = false;
    } else {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    }
    return result;
}
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if (other == null) {
        result = false;
    } else {
        People otherPeople = (People) other;
        if (getClass () != otherPeople.getClass ()) {
            result = false;
        } else {
            result = name.equals (otherPeople.name) && age == otherPeople.age;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
707
3
Gpt3D_Clone707_3.java 1 10
Gpt3D_Clone707_3.java 11 26
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if ((other == null) || (getClass () != other.getClass ())) {
        result = false;
    } else {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    }
    return result;
}
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if(other == null) {
        result = false;
    } else {
        if (getClass () != other.getClass ()) {
            result = false;
        } else {
            People otherPeople = (People) other;
            result = name.equals (otherPeople.name) && age == otherPeople.age;
        } 
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
708
0
Gpt3D_Clone708_0.java 1 10
Gpt3D_Clone708_0.java 11 24
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if ((other == null) || (getClass () != other.getClass ())) {
        result = false;
    } else {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    }
    return result;
}
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if (other == null) {
        result = false;
    } else if (getClass () != other.getClass ()) {
        result = false;
    } else {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
708
1
Gpt3D_Clone708_1.java 1 10
Gpt3D_Clone708_1.java 11 24
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if ((other == null) || (getClass () != other.getClass ())) {
        result = false;
    } else {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    }
    return result;
}
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if (other == null) {
        result = false;
    } else if (getClass () != other.getClass ()) {
        result = false;
    } else {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
708
2
Gpt3D_Clone708_2.java 1 10
Gpt3D_Clone708_2.java 11 22
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if ((other == null) || (getClass () != other.getClass ())) {
        result = false;
    } else {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    }
    return result;
}
----------------------------------------

public boolean equals (Object other) {
    boolean result;
    if (other != null && getClass () == other.getClass ()) {
        People otherPeople = (People) other;
        result = name.equals (otherPeople.name) && age == otherPeople.age;
    } else {
        result = false;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
0
Gpt3D_Clone709_0.java 1 25
Gpt3D_Clone709_0.java 26 55
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    LinkedList<LinkedList<Integer>> space = new LinkedList<>();
    for (int i=0; i<10; i++) {
        space.add(new LinkedList<Integer>());
    }
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space.get(i).add(numbers[j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space.get(i).get(k);
        space.get(i) = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space.get(i).get(j);
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
709
1
Gpt3D_Clone709_1.java 1 25
Gpt3D_Clone709_1.java 26 55
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    int [] [] space = new int [10] [1];
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space [i] = putInBucket (space [i], numbers [j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space [i] [k];
        space [i] = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space [i] [j];
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

public static int [] sort (int [] numbers, int digit) {
    if (numbers.length == 0 || digit <= 0) return numbers;
    List<List<Integer>> space = new ArrayList<>();
    for (int i=0; i<10; i++) {
        space.add(new ArrayList<Integer>());
    }
    int [] len = new int [10];
    int i, j = 0;
    for (j = 0; j < numbers.length; j ++) {
        i = (numbers [j] / digit) % 10;
        len [i] ++;
        space.get(i).add(numbers[j]);
    }
    for (i = 0; i < 10; i ++) {
        int [] bucket = new int [len [i]];
        for (int k = 0;
        k < len [i]; k ++) bucket [k] = space.get(i).get(k);
        space.get(i) = sort (bucket, digit / 10);
    }
    int k = 0;
    for (i = 0; i < 10; i ++) {
        for (j = 0; j < len [i]; j ++) {
            numbers [k] = space.get(i).get(j);
            k ++;
        }
    }
    return numbers;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
712
0
Gpt3D_Clone712_0.java 1 12
Gpt3D_Clone712_0.java 13 29
----------------------------------------

public static void main (String [] args) {
    int n = 7;
    int mid = n / 2;
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < Math.abs (mid - i) + 1; j ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int n = 7;
    int counter;
    int mid = n / 2;
    //number of stars per line
    for(int i = 0; i < n; i++){
        counter = Math.abs(mid - i) + 1;
        //print out stars per line
        while (counter > 0){
            System.out.print("*");
            counter--;
        }
        System.out.println();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
712
1
Gpt3D_Clone712_1.java 1 12
Gpt3D_Clone712_1.java 13 26
----------------------------------------

public static void main (String [] args) {
    int n = 7;
    int mid = n / 2;
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < Math.abs (mid - i) + 1; j ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main(String[] args) { 
    int n = 7;
    int counter;
    int mid = n / 2;
    for(int i=0; i < n; i++){
        counter = Math.abs(mid-i) + 1;
        for(int j = 0; j < counter; j++){
            System.out.print("*");
        }
        System.out.println("");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
712
2
Gpt3D_Clone712_2.java 1 12
Gpt3D_Clone712_2.java 13 26
----------------------------------------

public static void main (String [] args) {
    int n = 7;
    int mid = n / 2;
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < Math.abs (mid - i) + 1; j ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int n = 7;
    int mid = n / 2;
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < Math.abs (mid - i); j ++) {
            System.out.print ("-");
        }
        System.out.println ("*");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
713
2
Gpt3D_Clone713_2.java 1 26
Gpt3D_Clone713_2.java 27 53
----------------------------------------

public static void main (String [] args) {
    for (int row = 1;
    row <= 7; row += 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
    for (int row = 5;
    row >= 1; row -= 2) {
        for (int space = 7;
        space >= row; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 1;
        i <= row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int row = 1;
    row <= 7; row += 2) {
        for (int space = 6; space >= row-1; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 0;
        i < row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
    for (int row = 5;
    row >= 1; row -= 2) {
        for (int space = 6;
        space >= row-1; space -= 2) {
            System.out.print ("*");
        }
        for (int i = 0;
        i < row; i ++) {
            System.out.print (" ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
715
0
Gpt3D_Clone715_0.java 1 16
Gpt3D_Clone715_0.java 17 35
----------------------------------------

private static void decimalToHex (int decimal) {
    if (decimal >= 256) {
        returnHex (decimal / 256);
        decimal %= 256;
    } else {
        System.out.print ("0");
    }
    if (decimal >= 16) {
        returnHex (decimal / 16);
        decimal %= 16;
    } else {
        System.out.print ("0");
    }
    returnHex (decimal);
    decimal /= 16;
}
----------------------------------------

private static void decimalToHex (int decimal) {
    if (decimal >= 256) {
        returnHex (decimal / 256);
    }
    if (decimal < 256) {
        System.out.print ("0");
    }
    decimal %= 256;
    if (decimal >= 16) {
        returnHex (decimal / 16);
    }
    if (decimal < 16) {
        System.out.print ("0");
    }
    decimal %= 16;
    returnHex (decimal);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
716
0
Gpt3D_Clone716_0.java 1 15
Gpt3D_Clone716_0.java 16 33
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int zerosPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            num [i] = num [zerosPos];
            num [zerosPos] = 0;
            ++ zerosPos;
        }
    }
    return num;
}
----------------------------------------

public int [] zeroShift (int [] nums) {
    if (nums == null) {
        return null;
    }
    int switchPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] != 0) {
            int temp = nums[i];
            nums [i] = nums[switchPos];
            nums [switchPos] = temp;
            ++ switchPos;
        }
    }
    return nums;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
716
1
Gpt3D_Clone716_1.java 1 15
Gpt3D_Clone716_1.java 16 31
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int zerosPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            num [i] = num [zerosPos];
            num [zerosPos] = 0;
            ++ zerosPos;
        }
    }
    return num;
}
----------------------------------------

public int [] zeroBack (int [] nums) {
    if (nums == null) {
        return null;
    }
    int nonzeroPos = nums.length - 1;
    for (int i = nums.length -1; i >= 0; -- i) {
        if (nums [i] != 0) {
            num [i] = num [nonzeroPos];
            num [nonzeroPos] = 0;
            -- nonzeroPos;
        }
    }
    return num;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
718
0
Gpt3D_Clone718_0.java 1 19
Gpt3D_Clone718_0.java 20 37
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

int[] zeroFront(int[] nums) {
    if (nums == null) {
        return null;
    }
    int[] result = new int[nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = nums.length - 1; i >= 0; i--) {
        if (nums[i] == 0) {
            result[zeroesPos++] = 0;
        } else {
            result[othersPos--] = nums[i];
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
721
0
Gpt3D_Clone721_0.java 1 24
Gpt3D_Clone721_0.java 25 49
----------------------------------------

public static void main (String [] args) {
    Scanner stdin = new Scanner (System.in);
    String [] wordArray = new String [10000];
    int [] wordCount = new int [10000];
    int numWords = 0;
    while (stdin.hasNextLine ()) {
        String s = stdin.nextLine ();
        ArrayList < String > noDuplicated = new ArrayList < String > ();
        String [] words = s.replaceAll ("[^a-zA-Z ]", "").toLowerCase ().split ("\\s+");
        for (int i = 0;
        i < words.length; i ++) {
            if (! noDuplicated.contains (words [i])) noDuplicated.add (words [i]);
        }
        for (int i = 0;
        i < noDuplicated.size (); i ++) {
            int count = 0;
            for (int j = 0;
            j < words.length; j ++) {
                if (noDuplicated.get (i).equals (words [j])) count ++;
            }
            System.out.println ("word count: → " + words [i] + " " + count);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner stdin = new Scanner (System.in);
    String [] wordArray = new String [10000];
    int numWords = 0;
    while (stdin.hasNextLine ()) {
        String s = stdin.nextLine ();
        HashMap < String, Integer > noDuplicated = new HashMap < String, Integer > ();
        String [] words = s.replaceAll ("[^a-zA-Z ]", "").toLowerCase ().split ("\\s+");
        for (int i = 0;
        i < words.length; i ++) {
            noDuplicated.put (words [i], 0);
        }
        for (Map.Entry < String, Integer > entry: noDuplicated.entrySet ()) {
            int count = 0;
            for (int i = 0;
            i < words.length; i ++) {
                if (entry.getKey ().equals (words [i])) count ++;
            }
            System.out.println ("word count: → " + words [i] + " " + count);
        }
        
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
721
1
Gpt3D_Clone721_1.java 1 24
Gpt3D_Clone721_1.java 25 45
----------------------------------------

public static void main (String [] args) {
    Scanner stdin = new Scanner (System.in);
    String [] wordArray = new String [10000];
    int [] wordCount = new int [10000];
    int numWords = 0;
    while (stdin.hasNextLine ()) {
        String s = stdin.nextLine ();
        ArrayList < String > noDuplicated = new ArrayList < String > ();
        String [] words = s.replaceAll ("[^a-zA-Z ]", "").toLowerCase ().split ("\\s+");
        for (int i = 0;
        i < words.length; i ++) {
            if (! noDuplicated.contains (words [i])) noDuplicated.add (words [i]);
        }
        for (int i = 0;
        i < noDuplicated.size (); i ++) {
            int count = 0;
            for (int j = 0;
            j < words.length; j ++) {
                if (noDuplicated.get (i).equals (words [j])) count ++;
            }
            System.out.println ("word count: → " + words [i] + " " + count);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner stdin = new Scanner (System.in);
    String [] wordArray = new String [10000];
    int [] wordCount = new int [10000];
    int numWords = 0;
    while (stdin.hasNextLine ()) {
        String line = stdin.nextLine ();
        String [] words = line.replaceAll ("[^a-zA-Z ]", "").toLowerCase ().split ("\\s+");
        Set < String > noDuplicated = new HashSet < String > (Arrays.asList(words));
        for (String word : noDuplicated) {
            int count = 0;
            for (String w : words) {
                if (word.equals (w)) count ++;
            }
            System.out.println ("word count: → " + word + " " + count);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
724
0
Gpt3D_Clone724_0.java 1 17
Gpt3D_Clone724_0.java 18 35
----------------------------------------

public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            int index = viewPager.getCurrentItem ();
            if (index == 0) {
                viewPager.setCurrentItem (itemCount - 2, false);
            } else if (index == itemCount - 1) {
                viewPager.setCurrentItem (1, false);
            }
        }
    }
}
----------------------------------------

public void onPageScrollStateChanged (int state) {
    if (state == ViewPager.SCROLL_STATE_IDLE) {
        PagerAdapter pagerAdapter = viewPager.getAdapter ();
        if (pagerAdapter != null) {
            int itemCount = pagerAdapter.getCount ();
            if (itemCount < 2) {
                return;
            }
            if (viewPager.getCurrentItem () == 0) {
                viewPager.setCurrentItem (itemCount - 2, false);
            } else {
                viewPager.setCurrentItem (1, false);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
726
0
Gpt3D_Clone726_0.java 1 21
Gpt3D_Clone726_0.java 22 44
----------------------------------------

public void draw (Graphics2D g) {
    float arrowRatio = 0.5f;
    float arrowLength = 80.0f;
    BasicStroke stroke = (BasicStroke) g.getStroke ();
    float endX = 350.0f;
    float veeX = endX - stroke.getLineWidth () * 0.5f / arrowRatio;
    Path2D.Float path = new Path2D.Float ();
    float waisting = 0.5f;
    float waistX = endX - arrowLength * 0.5f;
    float waistY = arrowRatio * arrowLength * 0.5f * waisting;
    float arrowWidth = arrowRatio * arrowLength;
    path.moveTo (veeX - arrowLength, - arrowWidth);
    path.quadTo (waistX, - waistY, endX, 0.0f);
    path.quadTo (waistX, waistY, veeX - arrowLength, arrowWidth);
    path.lineTo (veeX - arrowLength * 0.75f, 0.0f);
    path.lineTo (veeX - arrowLength, - arrowWidth);
    g.setColor (Color.BLUE);
    g.fill (path);
    g.setColor (Color.RED);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - arrowLength * 0.5f, 0.0f));
}
----------------------------------------

public void draw (Graphics2D g) {
    float arrowRatio = 0.5f;
    float arrowLength = 80.0f;
    BasicStroke stroke = (BasicStroke) g.getStroke ();
    float endX = 350.0f;
    float veeX = endX - stroke.getLineWidth () * 0.5f / arrowRatio;
    Path2D.Float path = new Path2D.Float ();
    float waisting = 0.5f;
    float waistX = endX - arrowLength;
    float waistY = arrowLength * waisting;
    float arrowWidth = arrowRatio * arrowLength;
    path.moveTo (veeX - (arrowLength/2), - arrowWidth);
    path.quadTo (waistX, - waistY, endX, 0.0f);
    path.quadTo (waistX, waistY, veeX - (arrowLength/2), arrowWidth);
    path.lineTo (veeX - (arrowLength/4), 0.0f);
    path.lineTo (veeX - (arrowLength/2), - arrowWidth);
    g.setColor (Color.BLUE);
    g.fill (path);
    g.setColor (Color.RED);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - (arrowLength/4), 0.0f));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
726
1
Gpt3D_Clone726_1.java 1 21
Gpt3D_Clone726_1.java 22 44
----------------------------------------

public void draw (Graphics2D g) {
    float arrowRatio = 0.5f;
    float arrowLength = 80.0f;
    BasicStroke stroke = (BasicStroke) g.getStroke ();
    float endX = 350.0f;
    float veeX = endX - stroke.getLineWidth () * 0.5f / arrowRatio;
    Path2D.Float path = new Path2D.Float ();
    float waisting = 0.5f;
    float waistX = endX - arrowLength * 0.5f;
    float waistY = arrowRatio * arrowLength * 0.5f * waisting;
    float arrowWidth = arrowRatio * arrowLength;
    path.moveTo (veeX - arrowLength, - arrowWidth);
    path.quadTo (waistX, - waistY, endX, 0.0f);
    path.quadTo (waistX, waistY, veeX - arrowLength, arrowWidth);
    path.lineTo (veeX - arrowLength * 0.75f, 0.0f);
    path.lineTo (veeX - arrowLength, - arrowWidth);
    g.setColor (Color.BLUE);
    g.fill (path);
    g.setColor (Color.RED);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - arrowLength * 0.5f, 0.0f));
}
----------------------------------------

public void draw (Graphics2D g) {
    float arrowRatio = 0.5f;
    float arrowLength = 80.0f;
    BasicStroke stroke = (BasicStroke) g.getStroke ();
    float endX = 350.0f;
    float veeX = endX - stroke.getLineWidth () * 0.5f;
    Path2D.Float path = new Path2D.Float ();
    float waisting = 0.5f;
    float waistX = endX - arrowLength;
    float waistY = arrowLength * waisting;
    float arrowWidth = arrowRatio * arrowLength;
    path.moveTo (veeX - (arrowLength/2), - arrowWidth/2);
    path.quadTo (waistX, - waistY, endX, 0.0f);
    path.quadTo (waistX, waistY, veeX - (arrowLength/2), arrowWidth/2);
    path.lineTo (veeX - (arrowLength/4), 0.0f);
    path.lineTo (veeX - (arrowLength/2), - arrowWidth/2);
    g.setColor (Color.BLUE);
    g.fill (path);
    g.setColor (Color.RED);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - (arrowLength/4), 0.0f));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
726
2
Gpt3D_Clone726_2.java 1 21
Gpt3D_Clone726_2.java 22 42
----------------------------------------

public void draw (Graphics2D g) {
    float arrowRatio = 0.5f;
    float arrowLength = 80.0f;
    BasicStroke stroke = (BasicStroke) g.getStroke ();
    float endX = 350.0f;
    float veeX = endX - stroke.getLineWidth () * 0.5f / arrowRatio;
    Path2D.Float path = new Path2D.Float ();
    float waisting = 0.5f;
    float waistX = endX - arrowLength * 0.5f;
    float waistY = arrowRatio * arrowLength * 0.5f * waisting;
    float arrowWidth = arrowRatio * arrowLength;
    path.moveTo (veeX - arrowLength, - arrowWidth);
    path.quadTo (waistX, - waistY, endX, 0.0f);
    path.quadTo (waistX, waistY, veeX - arrowLength, arrowWidth);
    path.lineTo (veeX - arrowLength * 0.75f, 0.0f);
    path.lineTo (veeX - arrowLength, - arrowWidth);
    g.setColor (Color.BLUE);
    g.fill (path);
    g.setColor (Color.RED);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - arrowLength * 0.5f, 0.0f));
}
----------------------------------------

public void draw (Graphics2D g) {
    float arrowRatio = 0.5f;
    float arrowLength = 80.0f;
    BasicStroke stroke = (BasicStroke) g.getStroke ();
    float endX = 350.0f;
    float veeX = endX - stroke.getLineWidth () * 0.5f / arrowRatio;
    Path2D.Float path = new Path2D.Float ();
    float waistY = arrowRatio * arrowLength * 0.5f * 0.5f;
    float arrowWidth = arrowRatio * arrowLength;
    path.moveTo (veeX - arrowLength, -arrowWidth);
    path.quadTo (endX - arrowLength * 0.5f, -waistY, endX, 0.0f);
    path.quadTo (endX - arrowLength * 0.5f, waistY, veeX - arrowLength, arrowWidth);
    path.lineTo (veeX - arrowLength * 0.75f, 0.0f);
    path.lineTo (veeX - arrowLength, -arrowWidth);
    g.setColor (Color.BLUE);
    g.fill (path);
    g.setColor (Color.RED);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - arrowLength * 0.5f, 0.0f));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
728
0
Gpt3D_Clone728_0.java 1 16
Gpt3D_Clone728_0.java 17 40
----------------------------------------

public static void main (String [] args) {
    Scanner scn = new Scanner (System.in);
    ArrayList < Integer > integers = new ArrayList < > ();
    System.out.println ("Enter number 1");
    integers.add (scn.nextInt ());
    System.out.println ("Enter number 2");
    integers.add (scn.nextInt ());
    System.out.println ("Enter number 3");
    integers.add (scn.nextInt ());
    System.out.println ("Enter number 4");
    integers.add (scn.nextInt ());
    System.out.println ("Enter number 5");
    integers.add (scn.nextInt ());
    Collections.sort (integers, Comparator.comparingInt (Math :: abs));
    System.out.println ("The number near zero 0 is" + integers.get (0));
}
----------------------------------------

public static void main (String [] args) {
    Scanner scn = new Scanner (System.in);
    ArrayList < Integer > numbers = new ArrayList < > ();
    System.out.println ("Enter number 1");
    numbers.add (scn.nextInt ());
    System.out.println ("Enter number 2");
    numbers.add (scn.nextInt ());
    System.out.println ("Enter number 3");
    numbers.add (scn.nextInt ());
    System.out.println ("Enter number 4");
    numbers.add (scn.nextInt ());
    System.out.println ("Enter number 5");
    numbers.add (scn.nextInt ());
    Comparator <Integer> comp = new Comparator <Integer> () {
        @Override
        public int compare (Integer i1, Integer i2) {
            return Math.abs (i1) - Math.abs (i2);
        }
    };
    Collections.sort (numbers, comp);
    System.out.println ("The number near zero 0 is" + numbers.get (0));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
734
0
Gpt3D_Clone734_0.java 1 9
Gpt3D_Clone734_0.java 10 19
----------------------------------------

public int hashCode () {
    int hashCode = 1;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());
    }
    return hashCode;
}
----------------------------------------

public int hashCode () {
    int hashCode = 1;
    while (iterator ().hasNext ()) {
        Object obj = iterator ().next ();
        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());
    }
    return hashCode;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
734
1
Gpt3D_Clone734_1.java 1 9
Gpt3D_Clone734_1.java 10 19
----------------------------------------

public int hashCode () {
    int hashCode = 1;
    Iterator i = iterator ();
    while (i.hasNext ()) {
        Object obj = i.next ();
        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());
    }
    return hashCode;
}
----------------------------------------

public int hashCode () {
    int hashCode = 1;
    for (Iterator i = iterator (); i.hasNext ();) {
        Object obj = i.next ();
        hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode ());
    }
    return hashCode;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
735
0
Gpt3D_Clone735_0.java 1 9
Gpt3D_Clone735_0.java 10 22
----------------------------------------

private static String getProtocol (final File file) {
    String result;
    try {
        result = file.toURI ().toURL ().getProtocol ();
    } catch (Exception e) {
        result = "unknown";
    }
    return result;
}
----------------------------------------

private static String getProtocol (final File file) {
    String result;
    try {
        URL url = file.toURI ().toURL ();
        Protocol protocol = url.getProtocol ();
        result = protocol.toString ();
    } catch (Exception e) {
        result = "unknown";
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
735
1
Gpt3D_Clone735_1.java 1 9
Gpt3D_Clone735_1.java 10 21
----------------------------------------

private static String getProtocol (final File file) {
    String result;
    try {
        result = file.toURI ().toURL ().getProtocol ();
    } catch (Exception e) {
        result = "unknown";
    }
    return result;
}
----------------------------------------

private static String getProtocol (final File file) {
    String result;
    try {
        URL url = file.toURI ().toURL ();
        result = url.getProtocol ();
    } catch (Exception e) {
        result = "unknown";
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
735
2
Gpt3D_Clone735_2.java 1 9
Gpt3D_Clone735_2.java 10 21
----------------------------------------

private static String getProtocol (final File file) {
    String result;
    try {
        result = file.toURI ().toURL ().getProtocol ();
    } catch (Exception e) {
        result = "unknown";
    }
    return result;
}
----------------------------------------

private static String getProtocol (final File file) {
    String result;
    try {
        URL url =  file.toURI ().toURL ();
        result = url.getProtocol ();
    } catch (Exception e) {
        result = "unknown";
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
738
0
Gpt3D_Clone738_0.java 1 15
Gpt3D_Clone738_0.java 16 35
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    if (! lineBuffered) {
        fillLineBuffer ();
    }
    if (lineBuffered) {
        if (currentLineReadPos == 0) {
            lineBuffered = false;
        }
        return currentLine [currentLineReadPos --];
    }
    return 0;
}
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    if (! lineBuffered) {
        fillLineBuffer ();
    }
    if (lineBuffered) {
        int currentCharacter = currentLine [currentLineReadPos --];
        if (currentLineReadPos == 0) {
            lineBuffered = false;
        }
        else {
            return currentCharacter;
        }
    }
    return 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
738
1
Gpt3D_Clone738_1.java 1 15
Gpt3D_Clone738_1.java 16 33
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    if (! lineBuffered) {
        fillLineBuffer ();
    }
    if (lineBuffered) {
        if (currentLineReadPos == 0) {
            lineBuffered = false;
        }
        return currentLine [currentLineReadPos --];
    }
    return 0;
}
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    fillLineBuffer();
    if (lineBuffered) {
        if (currentLineReadPos > 0)
            return currentLine[currentLineReadPos--];
        else {
            lineBuffered = false;
            return 0;
        }
    }
    return 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
739
0
Gpt3D_Clone739_0.java 1 15
Gpt3D_Clone739_0.java 16 32
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    if (! lineBuffered) {
        fillLineBuffer ();
    }
    if (lineBuffered) {
        if (currentLineReadPos == 0) {
            lineBuffered = false;
        }
        return currentLine [currentLineReadPos --];
    }
    return 0;
}
----------------------------------------

public int read () throws IOException {
    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {
        return - 1;
    }
    if (! lineBuffered) {
        fillLineBuffer ();
    }
    if (lineBuffered) {
        boolean stopLineBuffer = (currentLineReadPos == 0);
        int line = currentLine [currentLineReadPos --];
        lineBuffered = ! stopLineBuffer;
        return line;
    }
    return 0;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
73
1
Gpt3D_Clone73_1.java 1 27
Gpt3D_Clone73_1.java 28 68
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length ();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length ();
    for (int i = 0;
    i < dstart; i ++) {
        if (dest.charAt (i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder (source, start, end);
        }
    }
    for (int i = start;
    i < end; ++ i) {
        if (source.charAt (i) == '.') {
            if ((dlen - dend) + (end - (i + 1)) > digits) return "";
            else break;
        }
    }
    return new SpannableStringBuilder (source, start, end);
}
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) 
{
    CharSequence out = super.filter (source, start, end, dest, dstart, dend);
    if (out != null) {
        source = out;
        start = 0;
        end = out.length();
    }
    int len = end - start;
    if (len == 0) {
        return source;
    }
    int dlen = dest.length();
    
    for (int i = 0; i < dstart; i++) {
        if (dest.charAt(i) == '.') {
            return (dlen - (i + 1) + len > digits) ? "" : new SpannableStringBuilder(source, start, end);
        }
    }
    int currDotPosition = -1;
    for (int i = start; i < end; i++) {
        if (source.charAt(i) == '.') {
            currDotPosition = i;
            break;
        }
    }
    if (currDotPosition != -1) {
        if ((dlen - dend) + (end - (currDotPosition + 1)) > digits) {
            return "";
        }
    }
    return  new SpannableStringBuilder (source, start, end);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
743
0
Gpt3D_Clone743_0.java 1 13
Gpt3D_Clone743_0.java 14 35
----------------------------------------

private static long factorial (int n, int depth) {
    String spaces = repeat (' ', depth);
    System.out.print (spaces);
    System.out.println ("factorial(" + n + ")");
    if (n <= 1) {
        System.out.println (spaces + " return 1");
        return 1;
    }
    long fac = factorial (n - 1, depth + 1);
    System.out.print (spaces);
    System.out.printf ("return %d * %d = %d%n", n, fac, n * fac);
    return n * fac;
}
----------------------------------------

private static long factorial (int n, int depth) {
    String spaces = repeat (' ', depth);
    System.out.print (spaces);
    System.out.println ("factorial(" + n + ")");
    if (n <= 1) {
        System.out.println (spaces + " return 1");
        return 1;
    }
    long fac = factorial (n - 1, depth + 1);
    if (n * fac) {
        System.out.print (spaces);
        System.out.printf ("return %d * %d = %d%n", n, fac, n * fac);
        return n * fac;
    }
    else {
        System.out.print (spaces);
        System.out.printf ("return %d * %d = %d%n", n, fac, n - fac);
        return n - fac;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
745
1
Gpt3D_Clone745_1.java 1 9
Gpt3D_Clone745_1.java 10 23
----------------------------------------

public static int evenDigits (int n) {
    if ((n & 1) != 0) {
        return evenDigits (n / 10);
    }
    if (n < 10) {
        return n;
    }
    return n % 10 + evenDigits (n / 10) * 10;
}
----------------------------------------

public static int evenDigits (int n) {
    if (n < 0) {
        n = -n;
    }
    if ((n & 1) != 0) {
        return evenDigits (n / 10);
    }
    if (n < 10) {
        return n;
    }
    return n % 10 + evenDigits (n / 10) * 10;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
746
0
Gpt3D_Clone746_0.java 1 9
Gpt3D_Clone746_0.java 10 23
----------------------------------------

public void mouseReleased (int mod, Point loc) {
    if (pressLocation != null && dragLocation != null) {
        pressLocation = null;
    } else if (dragLocation != null) {
    } else {
    }
    pressLocation = null;
    dragLocation = null;
}
----------------------------------------

public void mouseReleased (int mod, Point loc) {
    if (pressLocation != null && dragLocation != null) {
        pressLocation = null;
        dragLocation = null;
    } else if (dragLocation != null) {
        pressLocation = null;
        dragLocation = null;
    } else {
        pressLocation = null;
        dragLocation = null;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
746
1
Gpt3D_Clone746_1.java 1 9
Gpt3D_Clone746_1.java 10 20
----------------------------------------

public void mouseReleased (int mod, Point loc) {
    if (pressLocation != null && dragLocation != null) {
        pressLocation = null;
    } else if (dragLocation != null) {
    } else {
    }
    pressLocation = null;
    dragLocation = null;
}
----------------------------------------

public void mouseReleased (int mod, Point loc) {
    if (pressLocation != null && dragLocation != null || dragLocation != null) {
        pressLocation = null;
        dragLocation = null;
    } else {
        pressLocation = null;
        dragLocation = null;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
746
2
Gpt3D_Clone746_2.java 1 9
Gpt3D_Clone746_2.java 10 19
----------------------------------------

public void mouseReleased (int mod, Point loc) {
    if (pressLocation != null && dragLocation != null) {
        pressLocation = null;
    } else if (dragLocation != null) {
    } else {
    }
    pressLocation = null;
    dragLocation = null;
}
----------------------------------------

public void mouseReleased (int mod, Point loc) {
    if (dragLocation != null) {
        pressLocation = null;
        dragLocation = null;
    } else {
    }
    pressLocation = null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
747
0
Gpt3D_Clone747_0.java 1 22
Gpt3D_Clone747_0.java 23 42
----------------------------------------

static int countClamps (int [] arr) {
    int result = 0;
    int prev = 0;
    boolean same = false;
    for (int i = 0;
    i < arr.length; i ++) {
        if (i == 0) {
            prev = arr [i];
        } else {
            if (arr [i] == prev) {
                if (! same) {
                    result ++;
                    same = true;
                }
            } else {
                prev = arr [i];
                same = false;
            }
        }
    }
    return result;
}
----------------------------------------

static int countClamps (int [] arr) {
    int result = 0;
    int prev = arr[0];
    boolean same = false;
    for (int i = 1;
    i < arr.length; i ++) {
        if (arr [i] == prev) {
            if (! same) {
                result ++;
                same = true;
            }
        } else {
            prev = arr [i];
            same = false;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
748
0
Gpt3D_Clone748_0.java 1 20
Gpt3D_Clone748_0.java 21 43
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String name = employeeName.getText ();
    if (name.equals ("") || alreadyInList (name)) {
        Toolkit.getDefaultToolkit ().beep ();
        employeeName.requestFocusInWindow ();
        employeeName.selectAll ();
        return;
    }
    int index = list.getSelectedIndex ();
    if (index == - 1) {
        index = 0;
    } else {
        index ++;
    }
    listModel.insertElementAt (employeeName.getText (), index);
    employeeName.requestFocusInWindow ();
    employeeName.setText ("");
    list.setSelectedIndex (index);
    list.ensureIndexIsVisible (index);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String name = employeeName.getText ();
    if (!"".equals (name) && !alreadyInList (name)) {
        int index = list.getSelectedIndex ();
        if (index == -1) {
            index = 0;
            listModel.insertElementAt (name, index);
        } else {
            listModel.insertElementAt (name, ++index);
        }
        employeeName.requestFocusInWindow ();
        employeeName.setText ("");
        list.setSelectedIndex (index);
        list.ensureIndexIsVisible (index);
    } else {
        Toolkit.getDefaultToolkit ().beep ();
        employeeName.requestFocusInWindow ();
        employeeName.selectAll ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
0
Gpt3D_Clone749_0.java 1 12
Gpt3D_Clone749_0.java 13 24
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidthStr = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeightStr = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    int newWidth = Integer.parseInt (scaleWidthStr);
    int newHeight = Integer.parseInt (scaleHeightStr);
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
749
1
Gpt3D_Clone749_1.java 1 12
Gpt3D_Clone749_1.java 13 24
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    int newWidth = Integer.parseInt (scaleWidth);
    int newHeight = Integer.parseInt (scaleHeight);
    frame.setSize (newWidth, newHeight);
    resize (newWidth, newHeight);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
750
0
Gpt3D_Clone750_0.java 1 12
Gpt3D_Clone750_0.java 13 32
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon sizeIcon = new ImageIcon ("Size-icons.png");
    String scaleSize = (String) JOptionPane.showInputDialog (null, "What should the new size be?", "", JOptionPane.QUESTION_MESSAGE, sizeIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    double s = Double.parseDouble (scaleSize);
    int newWidth = (int) x;
    int newHeight = (int) y;
    int newSize = (int) s;
    frame.setSize (newWidth, newHeight);
    frame.setSize (newSize, newSize); 
    scale (newWidth, newHeight);
    scale (newSize, newSize);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
750
1
Gpt3D_Clone750_1.java 1 12
Gpt3D_Clone750_1.java 13 22
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon sizeIcon = new ImageIcon ("Size-icons.png");
    String scaleSize = (String) JOptionPane.showInputDialog (null, "What should the new size be?", "", JOptionPane.QUESTION_MESSAGE, sizeIcon, null, null);
    double s = Double.parseDouble (scaleSize);
    int newSize = (int) s;
    frame.setSize (newSize, newSize);
    scale (newSize, newSize);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
752
0
Gpt3D_Clone752_0.java 1 13
Gpt3D_Clone752_0.java 14 35
----------------------------------------

public static void main (String [] args) {
    List < Integer > initialNumbers = new ArrayList < Integer > ();
    initialNumbers.add (1);
    initialNumbers.add (2);
    Observable < Integer > observableInitial = Observable.from (initialNumbers);
    ReplaySubject < Integer > subject = ReplaySubject.create ();
    Observable < Integer > source = Observable.merge (observableInitial, subject);
    source.subscribe (System.out :: println);
    for (int i = 0;
    i < 100; ++ i) {
        subject.onNext (i);
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > initialNumbers = new ArrayList < Integer > ();
    initialNumbers.add (1);
    initialNumbers.add (2);
    Observable < Integer > observableInitial = Observable.from (initialNumbers);
    ReplaySubject < Integer > subject = ReplaySubject.create ();
    Observable < Integer > source = Observable.merge (observableInitial, subject);
    source.subscribe (System.out :: println);
    for (int i = 0;
    i < 100; ++ i) {
        int x = i;
        Runnable r = new Runnable() {
            @Override
            public void run() {
                subject.onNext(x);
            }
        };
        new Thread(r).start();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
752
1
Gpt3D_Clone752_1.java 1 13
Gpt3D_Clone752_1.java 14 26
----------------------------------------

public static void main (String [] args) {
    List < Integer > initialNumbers = new ArrayList < Integer > ();
    initialNumbers.add (1);
    initialNumbers.add (2);
    Observable < Integer > observableInitial = Observable.from (initialNumbers);
    ReplaySubject < Integer > subject = ReplaySubject.create ();
    Observable < Integer > source = Observable.merge (observableInitial, subject);
    source.subscribe (System.out :: println);
    for (int i = 0;
    i < 100; ++ i) {
        subject.onNext (i);
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > initialNumbers = Arrays.asList (1,2);
    Observable < Integer > observableInitial = Observable.from (initialNumbers);
    ReplaySubject < Integer > subject = ReplaySubject.create ();
    Observable < Integer > source = Observable.merge (observableInitial, subject);
    source.subscribe (System.out :: println);
    IntStream.range (0, 100)
    .forEach (value -> {
        subject.onNext (value);
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
754
0
Gpt3D_Clone754_0.java 1 10
Gpt3D_Clone754_0.java 11 26
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] values = new int [10];
    values [0] = 2;
    System.out.print (values [0]);
    for (int i = 1;
    i < values.length; i ++) {
        values [i] = values [i - 1] + 2;
        System.out.print (" " + values [i]);
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] values = new int [10];
    System.out.print (values [0]);
    for (int i = 1;
    i < values.length; i ++) {
        if (i == 1) {
            values [0] = 2;
            values [i] = values [0];
        } else {
            values [i] = values [i - 1] + 2;
        }
        System.out.print (" " + values [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
754
1
Gpt3D_Clone754_1.java 1 10
Gpt3D_Clone754_1.java 11 25
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] values = new int [10];
    values [0] = 2;
    System.out.print (values [0]);
    for (int i = 1;
    i < values.length; i ++) {
        values [i] = values [i - 1] + 2;
        System.out.print (" " + values [i]);
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] values = new int [10];
    System.out.print (values [0]);
    for (int i = 1;
    i < values.length; i ++) {
        if (i == 1) {
            values [i] = 2;
        } else {
            values [i] = values [i - 1] + 2;
        }
        System.out.print (" " + values [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
762
1
Gpt3D_Clone762_1.java 1 11
Gpt3D_Clone762_1.java 12 25
----------------------------------------

public IntList get (int i) {
    if (i < 0) {
        throw new IndexOutOfBoundsException ("Index is negative!");
    }
    if (i == 0) {
        return this;
    } else if (next != null) {
        return next.get (i - 1);
    }
    throw new IndexOutOfBoundsException ("Index exceeds bounds");
}
----------------------------------------

public IntList get (int i) {
    if (i < 0) {
        throw new IndexOutOfBoundsException ("Index is negative!");
    }
    while (i > 0) {
        if (next != null) {
            return next.get (i - 1);
        }
        throw new IndexOutOfBoundsException ("Index exceeds bounds");
    }
    return this;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
766
1
Gpt3D_Clone766_1.java 1 9
Gpt3D_Clone766_1.java 10 24
----------------------------------------

public static String removeAdjacentDuplicates (String input) {
    if (input.length () <= 1) {
        return input;
    }
    StringBuilder sb = new StringBuilder ();
    sb.append (input.charAt (0));
    IntStream.range (1, input.length ()).mapToObj (i -> input.charAt (i) != input.charAt (i - 1) ? input.charAt (i) : "").forEach (sb :: append);
    return sb.toString ();
}
----------------------------------------

public static String removeAdjacentDuplicates (String input) {
    if (input.length () <= 1) 
        return input;
    StringBuilder str = new StringBuilder ();
    str.append (input.charAt (0));
    for (int i = 1; i<input.length(); i++) 
        if (input.charAt (i) == input.charAt (i - 1)) 
            continue;
        else
            str.append (input.charAt (i));
        
    return str.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
766
2
Gpt3D_Clone766_2.java 1 9
Gpt3D_Clone766_2.java 10 22
----------------------------------------

public static String removeAdjacentDuplicates (String input) {
    if (input.length () <= 1) {
        return input;
    }
    StringBuilder sb = new StringBuilder ();
    sb.append (input.charAt (0));
    IntStream.range (1, input.length ()).mapToObj (i -> input.charAt (i) != input.charAt (i - 1) ? input.charAt (i) : "").forEach (sb :: append);
    return sb.toString ();
}
----------------------------------------

public static String removeAdjacentDuplicates (String input) {
    if (input.length () <= 1) 
        return input;
    StringBuilder str = new StringBuilder ();
    str.append (input.charAt (0));
    for (int i = 1; i<input.length(); i++) {
        if (input.charAt (i) != input.charAt (i - 1)) 
            str.append (input.charAt (i));
    }
    return str.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
767
0
Gpt3D_Clone767_0.java 1 18
Gpt3D_Clone767_0.java 19 38
----------------------------------------

public int solution (int [] A) {
    int [] mark = new int [A.length + 1];
    int counter = 0;
    for (int i = 0;
    i < A.length; ++ i) {
        int value = A [i];
        if (value >= mark.length) {
            return NOT_PERMUTATION;
        }
        if (mark [value] == 0) {
            mark [value] = 1;
            ++ counter;
        } else {
            return NOT_PERMUTATION;
        }
    }
    return counter == A.length ? PERMUTATION : NOT_PERMUTATION;
}
----------------------------------------

public int solution (int [] A) {
    int [] mark = new int [A.length + 1];
    int perm = 1;
    for (int i = 0; i < A.length; ++ i) {
        int value = A [i];
        if (value >= mark.length) {
            perm = 0; 
            break;
        }
        if (mark [value] == 0) {
            mark [value] = 1;
        } else {
            perm = 0;
            break;
        }
    }
    return perm;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
768
1
Gpt3D_Clone768_1.java 1 10
Gpt3D_Clone768_1.java 11 22
----------------------------------------

boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i = 0;
    i < (n / 2); ++ i) {
        if (s.charAt (i) != s.charAt (n - i - 1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

boolean isPalindrome(String str) {
    int len = str.length();
    int lastIndex = len - 1;
    for (int i = 0; i < (len / 2); i++) {
        if (str.charAt(i) != str.charAt(lastIndex - i)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
76
0
Gpt3D_Clone76_0.java 1 8
Gpt3D_Clone76_0.java 9 18
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (matcher.matches ()) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    if (matcher.matches ()) return "";
    else return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
76
1
Gpt3D_Clone76_1.java 1 8
Gpt3D_Clone76_1.java 9 18
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (matcher.matches ()) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (matcher.matches ()) return "";
    else if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
76
2
Gpt3D_Clone76_2.java 1 8
Gpt3D_Clone76_2.java 9 17
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (matcher.matches ()) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    if (mPattern.matches (newVal)) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
76
3
Gpt3D_Clone76_3.java 1 8
Gpt3D_Clone76_3.java 9 17
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    Matcher matcher = mPattern.matcher (newVal);
    if (matcher.matches ()) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

public CharSequence filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence (start, end).toString ();
    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();
    if (mPattern.find (newVal)) return null;
    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);
    else return "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
770
0
Gpt3D_Clone770_0.java 1 19
Gpt3D_Clone770_0.java 20 40
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    for (int i = 0; i < word.size (); i++){
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (i) == word.get (word.size () - i - 1)) {
            word.remove (i);
            word.remove (word.size () - i - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
775
3
Gpt3D_Clone775_3.java 1 10
Gpt3D_Clone775_3.java 11 28
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    return r1 < r2 ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1);
}
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        if(x1 <= x && x <= x2) 
            return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
        else 
            return false; 
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    if(r1 <= r && r <= r2) 
        return true;
    else 
        return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
776
0
Gpt3D_Clone776_0.java 1 17
Gpt3D_Clone776_0.java 18 32
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String number = "";
    int a = 0, total = 0;
    boolean even = false;
    System.out.println ("Enter a number");
    number = input.nextLine ();
    for (int counter = 0;
    counter < number.length (); counter ++) {
        a = Integer.parseInt (number.substring (counter, counter + 1));
        if (a % 2 != 0 || a == 1) {
            even = false;
            total += a;
        }
    }
    System.out.println ("The sum is " + total);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String number = "";
    int a, accumulator = 0;
    System.out.println ("Enter a number");
    number = input.nextLine ();
    for (int counter = 0;
    counter < number.length (); counter ++) {
        a = Integer.parseInt (number.substring (counter, counter + 1));
        accumulator += (a % 2 != 0 || a == 1) ? a : 0;
    }
    System.out.println ("The sum is " + accumulator);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
778
0
Gpt3D_Clone778_0.java 1 14
Gpt3D_Clone778_0.java 15 31
----------------------------------------

public static boolean twoDuplicates (int [] values) {
    for (int i = 0;
    i < values.length; i ++) {
        int counter = 0;
        for (int z = i + 1;
        z <= values.length - 1; z ++) {
            if (values [i] == values [z]) {
                counter ++;
                if (counter == 2) return true;
            }
        }
    }
    return false;
}
----------------------------------------

public static boolean twoDuplicates (int [] values) {
    for (int i = 0;
    i < values.length; i ++) {
        int counter = 0;
        int j = i + 1;
        do {
            if (values [i] == values [j]) {
                counter ++;
            }
            if (counter == 2) return true;
            j ++;
        } while (j < values.length);
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
778
1
Gpt3D_Clone778_1.java 1 14
Gpt3D_Clone778_1.java 15 31
----------------------------------------

public static boolean twoDuplicates (int [] values) {
    for (int i = 0;
    i < values.length; i ++) {
        int counter = 0;
        for (int z = i + 1;
        z <= values.length - 1; z ++) {
            if (values [i] == values [z]) {
                counter ++;
                if (counter == 2) return true;
            }
        }
    }
    return false;
}
----------------------------------------

public static boolean twoDuplicates (int [] values) {
    for (int i = 0;
    i < values.length; i ++) {
        int counter = 0;
        int j = i + 1;
        while (j < values.length) {
            if (values [i] == values [j]) {
                counter ++;
            }
            if (counter == 2) return true;
            j ++;
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
778
2
Gpt3D_Clone778_2.java 1 14
Gpt3D_Clone778_2.java 15 28
----------------------------------------

public static boolean twoDuplicates (int [] values) {
    for (int i = 0;
    i < values.length; i ++) {
        int counter = 0;
        for (int z = i + 1;
        z <= values.length - 1; z ++) {
            if (values [i] == values [z]) {
                counter ++;
                if (counter == 2) return true;
            }
        }
    }
    return false;
}
----------------------------------------

public static boolean twoDuplicates (int [] values) {
    for (int i = 0; i < values.length; i ++) {
        int counter = 0;
        for (int z = 0; z < values.length; z ++) {
            if (values [i] == values [z] && z != i) {
                counter ++;
                if (counter == 2) return true;
            }
        }
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
0
Gpt3D_Clone779_0.java 1 11
Gpt3D_Clone779_0.java 12 27
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

public static void main (String [] args){
    Map < String, Integer > dictionary = new LinkedHashMap < String, Integer > ();
    for (String s : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (dictionary.get (s) == null) {
            dictionary.put (s, 1);
        } else {
            dictionary.put (s, dictionary.get (s) + 1);
        }
    }
    String outputString = join (dictionary.keySet (), ", ");
    List < Integer > frequencies = new ArrayList < Integer > (dictionary.values ());
    System.out.println ("Output = " + outputString);
    System.out.println ("Values = " + frequencies);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
779
1
Gpt3D_Clone779_1.java 1 11
Gpt3D_Clone779_1.java 12 27
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();
    for (String string : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (unique.get (string) == null) unique.put (string, 1);
        else unique.put (string, unique.get (string) + 1);
    }
    String uniqueString = join (unique.keySet (), ", ");
    List < Integer > value = new ArrayList < Integer > (unique.values ());
    System.out.println ("Output = " + uniqueString);
    System.out.println ("Values = " + value);
}
----------------------------------------

public static void main (String [] args){
    Map < String, Integer > uniqueStore = new LinkedHashMap < String, Integer > ();
    for (String word : "House, House, House, Dog, Dog, Dog, Dog".split (", ")) {
        if (uniqueStore.get (word) == null) {
            uniqueStore.put (word, 1);
        } else {
            uniqueStore.put (word, uniqueStore.get (word) + 1);
        }
    }
    String newString = join (uniqueStore.keySet (), ", ");
    List < Integer > repeats = new ArrayList < Integer > (uniqueStore.values ());
    System.out.println ("Output = " + newString);
    System.out.println ("Values = " + repeats);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
780
1
Gpt3D_Clone780_1.java 1 16
Gpt3D_Clone780_1.java 17 31
----------------------------------------

public static int binarySearch (int anArray [], int first, int last, int value) {
    do {
        if (first > last) {
            return - 1;
        } else {
            int mid = (first + last) / 2;
            if (value == anArray [mid]) {
                return mid;
            } else if (value < anArray [mid]) {
                last = mid - 1;
            } else {
                first = mid + 1;
            }
        }
    } while (true);
}
----------------------------------------

public static int binarySearch (int anArray [], int first, int last, int value) {
    if (first > last) {
        return -1;
    }
    int mid = (first + last) / 2;
    if (value == anArray[mid]) {
        return mid;
    } else if (value < anArray[mid]) {
        return binarySearch(anArray, first, mid-1, value);
    } else {
        return binarySearch(anArray, mid+1, last, value);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
783
0
Gpt3D_Clone783_0.java 1 22
Gpt3D_Clone783_0.java 23 51
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int numOfItems = 0;
    System.out.print ("Enter How Many Items: ");
    try {
        numOfItems = Integer.parseInt (scan.nextLine ().trim ());
    } catch (NumberFormatException e) {
        System.out.print ("Number of items you entered is invalid!");
        System.exit (0);
    }
    Grocery grocery = new Grocery (numOfItems);
    for (int i = 0;
    i < numOfItems; i ++) {
        System.out.print ("Enter Item " + (i + 1) + " : ");
        if (! grocery.addItem (scan.nextLine ())) {
            System.out.println ("First Item Duplicate Detected!");
            System.exit (0);
        }
    }
    scan.close ();
    System.out.println (grocery.toString ());
}
----------------------------------------

public static void main (String [] args) { 
    Scanner scan = new Scanner (System.in);
    int numOfItems = 0;
    System.out.print ("Enter How Many Items: "); 
    try { 
        numOfItems = Integer.parseInt (scan.nextLine ().trim ()); 
    } catch (NumberFormatException e) { 
        System.out.print ("Number of items you entered is invalid!"); 
        System.exit (0); 
    }
    ArrayList<String> itemList = new ArrayList<String>();
    Grocery grocery = new Grocery (numOfItems);
    for (int i = 0;
    i < numOfItems; i ++) {
        System.out.print ("Enter Item " + (i + 1) + " : ");
        String item = scan.nextLine (); 
        if (itemList.contains(item)) {
            System.out.println ("First Item Duplicate Detected!");
            System.exit (0); 
        } else {
            itemList.add(item);
            grocery.addItem(itemList.get(i));
        }
    }
    scan.close ();
    System.out.println (grocery.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
786
0
Gpt3D_Clone786_0.java 1 11
Gpt3D_Clone786_0.java 12 25
----------------------------------------

public void makeGrid (int size) {
    this.lines = size;
    grid = new Cell [size] [size];
    for (int i = 0;
    i < size; i ++) {
        for (int j = 0;
        j < size; j ++) {
            grid [i] [j] = new Cell ();
        }
    }
}
----------------------------------------

public void makeGrid (int size) {
    this.lines = size;
    grid = new Cell [size] [size];
    for (int i = 0;
    i < size; i ++) {
        for (int j = 0;
        j < size; j ++) {
            Cell cell = new Cell();
            grid [i] [j] = cell;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
788
0
Gpt3D_Clone788_0.java 1 11
Gpt3D_Clone788_0.java 12 28
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    fireEvents (false, event, cancellableEvent, cancellable);
    fireEvents (true, event, cancellableEvent, cancellable);
}
----------------------------------------

public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent;
    boolean cancellable;
    if (event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
        cancellable = true;
    } else {
        cancellableEvent = null;
        cancellable = false;
    }
    fireEvents (false, event, cancellableEvent, cancellable);
    fireEvents (true, event, cancellableEvent, cancellable);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
789
0
Gpt3D_Clone789_0.java 1 13
Gpt3D_Clone789_0.java 14 34
----------------------------------------

int findCombinationsCount (int amount, int coins []) {
    if (coins.length == 1) {
        return amount % coins [0] == 0 ? 1 : 0;
    } else {
        int total = 0;
        int [] subCoins = arrayOfCoinsExceptTheFirstOne (coins);
        for (int i = 0;
        i * coins [0] <= amount; ++ i) {
            total += findCombinationsCount (amount - i * coins [0], subCoins);
        }
        return total;
    }
}
----------------------------------------

int findCombinationsCount (int amount, int coins []) {
    if (coins.length == 1) {
        return amount % coins [0] == 0 ? 1 : 0;
    } else {
        int total = 0;
        int [] subCoins = arrayOfCoinsExceptTheLargestOne (coins);
        int maxCoin = coins[0];
        for (int i=1; i<coins.length;i++) {
            if (coins[i] > maxCoin) {
                maxCoin = coins[i];
            }
        }
        for (int i = 0;
        i * maxCoin <= amount; ++ i) {
            total += findCombinationsCount (amount - i * maxCoin, subCoins);
        }
        return total;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
789
1
Gpt3D_Clone789_1.java 1 13
Gpt3D_Clone789_1.java 14 29
----------------------------------------

int findCombinationsCount (int amount, int coins []) {
    if (coins.length == 1) {
        return amount % coins [0] == 0 ? 1 : 0;
    } else {
        int total = 0;
        int [] subCoins = arrayOfCoinsExceptTheFirstOne (coins);
        for (int i = 0;
        i * coins [0] <= amount; ++ i) {
            total += findCombinationsCount (amount - i * coins [0], subCoins);
        }
        return total;
    }
}
----------------------------------------

int findCombinationsCount (int amount, int coins []) {
    if (coins.length == 1) {
        int val = amount % coins [0]; 
        return val == 0 ? 1 : 0;
    } else {
        int total = 0;
        int [] subCoins = arrayOfCoinsExceptTheFirstOne (coins);
        int maxIterations = amount/coins[0];
        for (int i = 0; i <= maxIterations; ++ i) {
            total += findCombinationsCount (amount - i * coins [0], subCoins);
        }
        return total;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
789
2
Gpt3D_Clone789_2.java 1 13
Gpt3D_Clone789_2.java 14 28
----------------------------------------

int findCombinationsCount (int amount, int coins []) {
    if (coins.length == 1) {
        return amount % coins [0] == 0 ? 1 : 0;
    } else {
        int total = 0;
        int [] subCoins = arrayOfCoinsExceptTheFirstOne (coins);
        for (int i = 0;
        i * coins [0] <= amount; ++ i) {
            total += findCombinationsCount (amount - i * coins [0], subCoins);
        }
        return total;
    }
}
----------------------------------------

int findCombinationsCount (int amount, int coins []) {
    if (coins.length == 1) {
        return (amount % coins [0] == 0) ? 1 : 0;
    } else {
        int total = 0;
        int [] subCoins = arrayOfCoinsExceptTheFirstOne (coins);
        int loopCounter = amount/coins[0];
        for (int i = 0; i <= loopCounter; i++) {
            total += findCombinationsCount (amount - i * coins [0], subCoins);
        }
        return total;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
790
0
Gpt3D_Clone790_0.java 1 9
Gpt3D_Clone790_0.java 10 24
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) return 1;
    else if (amount < 0 || coins.length == checkFromIndex) return 0;
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

int findCombinationsCount (int amount, int coins [], int checkFromIndex) {
    if (amount == 0) {
        return 1;
    } 
    else if (amount < 0 || checkFromIndex >= coins.length) {
        return 0;
    }
    else {
        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);
        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);
        return withFirstCoin + withoutFirstCoin;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
793
2
Gpt3D_Clone793_2.java 1 10
Gpt3D_Clone793_2.java 11 22
----------------------------------------

public static void main (String [] args) {
    LinkedHashMap < String, Vector < String > > data = new LinkedHashMap < String, Vector < String > > ();
    data.put ("foo", new Vector < String > (Arrays.asList ("1", "2", "3")));
    data.put ("bar", new Vector < String > (Arrays.asList ("3", "2")));
    data.put ("baz", new Vector < String > (Arrays.asList ("5", "6", "7")));
    Foo foo = new Foo (data);
    for (String [] combination : foo.allUniqueCombinations ()) {
        System.out.println (Arrays.toString (combination));
    }
}
----------------------------------------

public static void main (String [] args) {
    Map < String, List < String > > data = new LinkedHashMap < String, List < String > > ();
    data.put ("foo", Arrays.asList ("1", "2", "3"));
    data.put ("bar", Arrays.asList ("3", "2"));
    data.put ("baz", Arrays.asList ("5", "6", "7"));
    Foo foo = new Foo (data);
    for (String [] combination : foo.allUniqueCombinations ()) {
        System.out.println (Arrays.toString (combination));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
79
0
Gpt3D_Clone79_0.java 1 15
Gpt3D_Clone79_0.java 16 34
----------------------------------------

public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString ().trim ();
    if (! cost.endsWith (".") && cost.contains (".")) {
        String numberBeforeDecimal = cost.split ("\\.") [0];
        String numberAfterDecimal = cost.split ("\\.") [1];
        if (numberAfterDecimal.length () > 2) {
            numberAfterDecimal = numberAfterDecimal.substring (0, 2);
        }
        cost = numberBeforeDecimal + "." + numberAfterDecimal;
    }
    costEditText.removeTextChangedListener (this);
    costEditText.setText (cost);
    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());
    costEditText.addTextChangedListener (this);
}
----------------------------------------

public synchronized void afterTextChanged(final Editable text) {
    String cost = text.toString().trim();
    if (!cost.endsWith(".") && cost.contains(".")) {
        int indexOf = cost.indexOf(".");
        if(cost.length() > indexOf + 3) {
            String[] parts = cost.split("\\.");
            String numberBeforeDecimal = parts[0];
            String numberAfterDecimal = parts[1];
            numberAfterDecimal = numberAfterDecimal.substring(0, 2);
            cost = numberBeforeDecimal + "." + numberAfterDecimal;
        }
    }
    costEditText.removeTextChangedListener(this);
    costEditText.setText(cost);
    costEditText.setSelection(costEditText.getText().toString().trim().length());
    costEditText.addTextChangedListener(this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
79
1
Gpt3D_Clone79_1.java 1 15
Gpt3D_Clone79_1.java 16 33
----------------------------------------

public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString ().trim ();
    if (! cost.endsWith (".") && cost.contains (".")) {
        String numberBeforeDecimal = cost.split ("\\.") [0];
        String numberAfterDecimal = cost.split ("\\.") [1];
        if (numberAfterDecimal.length () > 2) {
            numberAfterDecimal = numberAfterDecimal.substring (0, 2);
        }
        cost = numberBeforeDecimal + "." + numberAfterDecimal;
    }
    costEditText.removeTextChangedListener (this);
    costEditText.setText (cost);
    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());
    costEditText.addTextChangedListener (this);
}
----------------------------------------

public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString ().trim ();
    if (cost.contains (".")) {
        String[] split = cost.split ("\\.");
        String numberBeforeDecimal = split[0];
        String numberAfterDecimal = split[1];
        if (numberAfterDecimal.length () > 2) {
            numberAfterDecimal = numberAfterDecimal.substring (0, 2);
            cost = numberBeforeDecimal + "." + numberAfterDecimal;
        }
    }
    costEditText.removeTextChangedListener (this);
    costEditText.setText (cost);
    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());
    costEditText.addTextChangedListener (this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
79
2
Gpt3D_Clone79_2.java 1 15
Gpt3D_Clone79_2.java 16 32
----------------------------------------

public synchronized void afterTextChanged (final Editable text) {
    String cost = text.toString ().trim ();
    if (! cost.endsWith (".") && cost.contains (".")) {
        String numberBeforeDecimal = cost.split ("\\.") [0];
        String numberAfterDecimal = cost.split ("\\.") [1];
        if (numberAfterDecimal.length () > 2) {
            numberAfterDecimal = numberAfterDecimal.substring (0, 2);
        }
        cost = numberBeforeDecimal + "." + numberAfterDecimal;
    }
    costEditText.removeTextChangedListener (this);
    costEditText.setText (cost);
    costEditText.setSelection (costEditText.getText ().toString ().trim ().length ());
    costEditText.addTextChangedListener (this);
}
----------------------------------------

public synchronized void afterTextChanged(final Editable text) {
    String cost = text.toString().trim();
    if (!cost.endsWith(".") && cost.contains(".")) {
        int indexOf = cost.indexOf(".");
        if(cost.length() > indexOf + 3) {
            String beforeDecimal = cost.substring(0, indexOf);
            String afterDecimal = cost.substring(indexOf + 1, indexOf + 3);
            cost = beforeDecimal + "." + afterDecimal;
        }
    }
    costEditText.removeTextChangedListener(this);
    costEditText.setText(cost);
    costEditText.setSelection(costEditText.getText().toString().trim().length());
    costEditText.addTextChangedListener(this);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
801
0
Gpt3D_Clone801_0.java 1 8
Gpt3D_Clone801_0.java 9 19
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;
}
----------------------------------------

static String shuffleString (String input) {
    if (input.length () <= 1) return input;
    int separator = input.length () / 2;
    String first = shuffleString (input.substring (0, separator));
    String second = shuffleString (input.substring (separator));
    double random = Math.random ();
    if (random > 0.5) return first + second;
    else return second + first;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
801
1
Gpt3D_Clone801_1.java 1 8
Gpt3D_Clone801_1.java 9 19
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;
    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;
}
----------------------------------------

static String shuffle (String str) {
    if (str.length () <= 1) return str;
    int midpoint = str.length () / 2;
    String temp1 = shuffle (str.substring (0, midpoint));
    String temp2 = shuffle (str.substring (midpoint));
    double toss = Math.random ();
    if (toss > 0.5) return temp1 + temp2;
    else return temp2 + temp1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
809
2
Gpt3D_Clone809_2.java 1 9
Gpt3D_Clone809_2.java 10 20
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("--------" + v + "\n");
    sb.append ("--------" + w + "\n");
    for (B elem : bList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (v + "\n");
    sb.append (w + "\n");
    for (B elem : bList) {
        sb.append (elem.getValue () + "\n");
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
813
0
Gpt3D_Clone813_0.java 1 8
Gpt3D_Clone813_0.java 9 19
----------------------------------------

public boolean onKeyDown (int keyCode, KeyEvent event) {
    super.onKeyDown (keyCode, event);
    if (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN) {
        Toast.makeText (MainActivity.this, "Down working", Toast.LENGTH_SHORT).show ();
        return true;
    }
    return false;
}
----------------------------------------

public boolean onKeyDown (int keyCode, KeyEvent event) {
    super.onKeyDown (keyCode, event);
    if (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN) {
        AlertDialog.Builder myAlert = new AlertDialog.Builder (MainActivity.this);
        myAlert.setMessage ("Down working").create().show ();
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
813
1
Gpt3D_Clone813_1.java 1 8
Gpt3D_Clone813_1.java 9 19
----------------------------------------

public boolean onKeyDown (int keyCode, KeyEvent event) {
    super.onKeyDown (keyCode, event);
    if (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN) {
        Toast.makeText (MainActivity.this, "Down working", Toast.LENGTH_SHORT).show ();
        return true;
    }
    return false;
}
----------------------------------------

public boolean onKeyDown (int keyCode, KeyEvent event) {
    super.onKeyDown (keyCode, event);
    if (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN) {
        TextView textView = (TextView) findViewById(R.id.textView);
        textView.setText("Down Working");
        return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
813
2
Gpt3D_Clone813_2.java 1 8
Gpt3D_Clone813_2.java 9 17
----------------------------------------

public boolean onKeyDown (int keyCode, KeyEvent event) {
    super.onKeyDown (keyCode, event);
    if (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN) {
        Toast.makeText (MainActivity.this, "Down working", Toast.LENGTH_SHORT).show ();
        return true;
    }
    return false;
}
----------------------------------------

public boolean onKeyDown (int keyCode, KeyEvent event) {
    if (keyCode == KeyEvent.KEYCODE_VOLUME_UP) {
        Toast.makeText (MainActivity.this, "Up working", Toast.LENGTH_SHORT).show ();
        return true;
    }
    return super.onKeyDown (keyCode, event);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
814
0
Gpt3D_Clone814_0.java 1 22
Gpt3D_Clone814_0.java 23 45
----------------------------------------

public static void countString (String str) {
    if (str != null) {
        int length = str.length ();
        char ch [] = str.toCharArray ();
        Arrays.sort (ch);
        if (length > 0) {
            char x = ch [0];
            int count = 1;
            for (int i = 1;
            i < length; i ++) {
                if (ch [i] == x) {
                    count ++;
                } else {
                    System.out.println ("Number of Occurrence of '" + ch [i - 1] + "' is: " + count);
                    x = ch [i];
                    count = 1;
                }
            }
            System.out.println ("Number of Occurrence of '" + ch [length - 1] + "' is: " + count);
        }
    }
}
----------------------------------------

public static void countString(String str) {
    if (str != null) {
        int length = str.length();
        char[] ch = str.toCharArray();
        Arrays.sort(ch);
        if (length > 0) {
            char x = ch[0];
            int count = 0;
            for (int i = 0; i > length; i--) {
                if (ch[i] == x) {
                    count++;
                } else {
                    System.out.println("Number of Occurrence of '" + x + "' is: " + count);
                    x = ch[i];
                    count = 1;
                }
            }
            System.out.println("Number of Occurrence of '" + x + "' is: " + count);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
815
1
Gpt3D_Clone815_1.java 1 21
Gpt3D_Clone815_1.java 22 36
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println("Number of Occurrence of " + ch + " is:" + tempString.chars().filter(i -> i == ch).count());
        }
        if (ch == value) {
            System.out.println("Number of Occurrence of " + ch + " is:" + tempString.chars().filter(i -> i == ch).count());
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
816
0
Gpt3D_Clone816_0.java 1 8
Gpt3D_Clone816_0.java 9 19
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";
    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
}
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";
    }
    System.out.println ("Number of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
    System.out.println("The occurences in the string are: " + count);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
817
0
Gpt3D_Clone817_0.java 1 21
Gpt3D_Clone817_0.java 22 38
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffertempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        getOccurrence (s, tempString);
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            getOccurrenceWithValue (s, value, tempString2);
        }
    }
} 
----------------------------------------

private static void getOccurrence (String s, StringBuffer tempString) {
    for (char ch : s.toCharArray ()) {
        System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
    }
}
----------------------------------------

private static void getOccurrenceWithValue (String s, char value, StringBuffer tempString2) {
    for (char ch : s.toCharArray ()) {
        if (ch == value) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
820
0
Gpt3D_Clone820_0.java 1 16
Gpt3D_Clone820_0.java 17 37
----------------------------------------

public static String numLetters (String s) {
    int [] count = new int [26];
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        count [(int) (c - 'a')] ++;
    }
    String ans = "";
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] != 0) {
            ans += String.valueOf (count [i]) + (char) (i + 'a');
        }
    }
    return ans;
}
----------------------------------------

public static String numLetters (String s) {
    int [] count = new int[26];
    for (int i = 0; i < s.length(); i++) {
        char c = s.charAt(i);
        int letterIndex = (int)(c-'a');
        count[letterIndex]++;
    }
    String ans = "";
    for (int i = 0; i < 26; i++) {
        if (count[i] != 0) {
            int letterOffset = 'a';
            char currentLetter = (char)(letterOffset + i);
            
            ans += String.valueOf(count[i]) + currentLetter;
        }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
820
1
Gpt3D_Clone820_1.java 1 16
Gpt3D_Clone820_1.java 17 34
----------------------------------------

public static String numLetters (String s) {
    int [] count = new int [26];
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        count [(int) (c - 'a')] ++;
    }
    String ans = "";
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] != 0) {
            ans += String.valueOf (count [i]) + (char) (i + 'a');
        }
    }
    return ans;
}
----------------------------------------

public static String numLetters (String s) {
    int [] count = new int [26];
    for (int i = 0;
    i < s.length (); i ++) {
        int c = (int)s.charAt(i);
        count [c - 97] ++;
    }
    String ans = "";
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] != 0) {
            ans += String.valueOf (count [i]) + (char) (i + 97);
        }
    }
    return ans;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
0
Gpt3D_Clone821_0.java 1 14
Gpt3D_Clone821_0.java 15 26
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println (num);
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
821
1
Gpt3D_Clone821_1.java 1 14
Gpt3D_Clone821_1.java 15 26
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.print (num + " ");
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
822
0
Gpt3D_Clone822_0.java 1 9
Gpt3D_Clone822_0.java 10 21
----------------------------------------

public void filter (String [] words, String text) {
    for (int i = 0;
    i < words.length; i ++) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

public void filter (String [] words, String text) {
    int i = 0;
    while(i < words.length) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
822
1
Gpt3D_Clone822_1.java 1 9
Gpt3D_Clone822_1.java 10 19
----------------------------------------

public void filter (String [] words, String text) {
    for (int i = 0;
    i < words.length; i ++) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

public void filter (String [] words, String text) {
    for (String word : words) {
        if (text.toLowerCase ().contains (word.toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
823
0
Gpt3D_Clone823_0.java 1 9
Gpt3D_Clone823_0.java 10 21
----------------------------------------

public void filter (String [] words, String text) {
    for (int i = 0;
    i < words.length; i ++) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

public void filter (String [] words, String text) {
    int i;
    for (i = 0; i < words.length; i++) {
        if (text.toLowerCase ().contains (words[i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
823
1
Gpt3D_Clone823_1.java 1 9
Gpt3D_Clone823_1.java 10 22
----------------------------------------

public void filter (String [] words, String text) {
    for (int i = 0;
    i < words.length; i ++) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

public void filter(String[] words, String text) {
    String newText = text.toLowerCase();
    for (int i = 0;
    i < words.length; i++) {
        if (newText.contains(words[i].toLowerCase())) {
            System.out.println(text);
            break;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
824
0
Gpt3D_Clone824_0.java 1 29
Gpt3D_Clone824_0.java 30 65
----------------------------------------

public static int [] solution (String S, int [] P, int [] Q) {
    int [] arr = new int [S.length ()];
    for (int i = 0;
    i < S.length (); i ++) {
        switch (S.charAt (i)) {
            case 'A' :
                arr [i] = 1;
                break;
            case 'C' :
                arr [i] = 2;
                break;
            case 'G' :
                arr [i] = 3;
                break;
            case 'T' :
                arr [i] = 4;
                break;
            default :
                break;
        }
    }
    segmentNode root = buildTree (arr, 0, S.length () - 1);
    int [] result = new int [P.length];
    for (int i = 0;
    i < P.length; i ++) {
        result [i] = getMin (root, P [i], Q [i]);
    }
    return result;
}
----------------------------------------

public static int[] solution(String S, int[] P, int[] Q) {
    int[] arr = new int[S.length()];
    for (int i = 0; i < S.length(); i++) {
        char c = S.charAt(i);
        switch (c) {
            case 'A':
                arr[i] = 1;
                break;
            case 'C':
                arr[i] = 2;
                break;
            case 'G':
                arr[i] = 3;
                break;
            case 'T':
                arr[i] = 4;
                break;
            default:
                break;
        }
    }
    segmentNode root = buildTree(arr, 0, S.length() - 1);
    int[] result = new int[P.length];
    for (int i = 0; i < P.length; i++) {
        int min = Integer.MAX_VALUE;
        for (int j = P[i]; j <= Q[i]; j++) {
            if (arr[j] < min) {
                min = arr[j];
            }
        }
        result[i] = min;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
824
1
Gpt3D_Clone824_1.java 1 29
Gpt3D_Clone824_1.java 30 51
----------------------------------------

public static int [] solution (String S, int [] P, int [] Q) {
    int [] arr = new int [S.length ()];
    for (int i = 0;
    i < S.length (); i ++) {
        switch (S.charAt (i)) {
            case 'A' :
                arr [i] = 1;
                break;
            case 'C' :
                arr [i] = 2;
                break;
            case 'G' :
                arr [i] = 3;
                break;
            case 'T' :
                arr [i] = 4;
                break;
            default :
                break;
        }
    }
    segmentNode root = buildTree (arr, 0, S.length () - 1);
    int [] result = new int [P.length];
    for (int i = 0;
    i < P.length; i ++) {
        result [i] = getMin (root, P [i], Q [i]);
    }
    return result;
}
----------------------------------------

public static int[] solution(String S, int[] P, int[] Q) {
    int[] arr = new int[S.length()];
    for (int i = 0; i < S.length(); i++) {
        if (S.charAt(i) == 'A') {
            arr[i] = 1;
        } else if (S.charAt(i) == 'C') {
            arr[i] = 2;
        } else if (S.charAt(i) == 'G') {
            arr[i] = 3;
        } else if (S.charAt(i) == 'T') {
            arr[i] = 4;
        }
    }
    segmentNode root = buildTree(arr, 0, S.length() - 1);
    int[] result = new int[P.length];
    for (int i = 0; i < P.length; i++) {
        result[i] = getMin(root, P[i], Q[i]);
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
825
0
Gpt3D_Clone825_0.java 1 20
Gpt3D_Clone825_0.java 21 41
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    final char [] characterInput = S.toCharArray ();
    final int [] integerInput = new int [characterInput.length];
    for (int counter = 0;
    counter < characterInput.length; counter ++) {
        integerInput [counter] = characterMapping.get (characterInput [counter]);
    }
    int [] result = new int [P.length];
    for (int index = 0;
    index < P.length; index ++) {
        if (P [index] == Q [index]) {
            result [index] = integerInput [P [index]];
            break;
        }
        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);
        final int minimumValue = minimum (subArray);
        result [index] = minimumValue;
    }
    return result;
}
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    final int [] integerInput = new int [S.length()];
    for (int counter = 0;
    counter < S.length(); counter ++) {
        integerInput [counter] = characterMapping.get (S.charAt(counter));
    }
    int [] result = new int [P.length];
    for (int index = 0;
    index < P.length; index ++) {
        if (P [index] == Q [index]) {
            result [index] = integerInput [P [index]];
            break;
        }
        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);
        final int minimumValue = minimum (subArray);
        result [index] = minimumValue;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
825
1
Gpt3D_Clone825_1.java 1 20
Gpt3D_Clone825_1.java 21 39
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    final char [] characterInput = S.toCharArray ();
    final int [] integerInput = new int [characterInput.length];
    for (int counter = 0;
    counter < characterInput.length; counter ++) {
        integerInput [counter] = characterMapping.get (characterInput [counter]);
    }
    int [] result = new int [P.length];
    for (int index = 0;
    index < P.length; index ++) {
        if (P [index] == Q [index]) {
            result [index] = integerInput [P [index]];
            break;
        }
        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);
        final int minimumValue = minimum (subArray);
        result [index] = minimumValue;
    }
    return result;
}
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    final int [] integerInput = new int [S.length()];
    for (int counter = 0; counter < S.length(); counter ++) {
        integerInput [counter] = characterMapping.get (S.charAt(counter));
    }
    int [] result = new int [P.length];
    for (int index = 0; index < P.length; index ++) {
        if (P [index] == Q [index]) {
            result [index] = integerInput [P [index]];
        } else {
            final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);
            final int minimumValue = minimum (subArray);
            result [index] = minimumValue;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
826
0
Gpt3D_Clone826_0.java 1 39
Gpt3D_Clone826_0.java 40 79
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        int midVal = (int) chars[iii];
        if (midVal == 65) {
            cumulativeAnswers [0] [iii + 1] ++;
        }
        else if(midVal == 67) {
            cumulativeAnswers [1] [iii + 1] += cumulativeAnswers [0] [iii + 1];
        }
        else if(midVal == 71) {
            cumulativeAnswers [2] [iii + 1] += cumulativeAnswers [1] [iii + 1];
        }
        else {
            cumulativeAnswers [3] [iii + 1] += cumulativeAnswers [2] [iii + 1];
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
831
0
Gpt3D_Clone831_0.java 1 39
Gpt3D_Clone831_0.java 40 85
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] = cumulativeAnswers [0] [iii] + 1;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] = cumulativeAnswers [1] [iii] + 1;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] = cumulativeAnswers [2] [iii] + 1;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] = cumulativeAnswers [3] [iii] + 1;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        int [] arr = {
            cumulativeAnswers [0] [Q [iii] + 1] - cumulativeAnswers [0] [P [iii]], 
            cumulativeAnswers [1] [Q [iii] + 1] - cumulativeAnswers [1] [P [iii]],
            cumulativeAnswers [2] [Q [iii] + 1] - cumulativeAnswers [2] [P [iii]],
            cumulativeAnswers [3] [Q [iii] + 1] - cumulativeAnswers [3] [P [iii]]
        };
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] > 0) {
                answer[iii] = i+1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
831
1
Gpt3D_Clone831_1.java 1 39
Gpt3D_Clone831_1.java 40 79
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
            case 'T' :
                cumulativeAnswers [3] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        for (int zzz = 0;
        zzz < 4; zzz ++) {
            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {
                answer [iii] = zzz + 1;
                break;
            }
        }
    }
    return answer;
}
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] answer = new int [P.length];
    char [] chars = S.toCharArray ();
    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];
    for (int iii = 0;
    iii < chars.length; iii ++) {
        if (iii > 0) {
            for (int zzz = 0;
            zzz < 4; zzz ++) {
                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];
            }
        }
        switch (chars [iii]) {
            case 'A' :
                cumulativeAnswers [0] [iii + 1] ++;
                break;
            case 'C' :
                cumulativeAnswers [1] [iii + 1] ++;
                break;
            case 'G' :
                cumulativeAnswers [2] [iii + 1] ++;
                break;
        }
    }
    for (int iii = 0;
    iii < P.length; iii ++) {
        if((cumulativeAnswers [0] [Q [iii] + 1] - cumulativeAnswers [0] [P [iii]]) > 0) {
                answer[iii] = 1;
            } else if((cumulativeAnswers [1] [Q [iii] + 1] - cumulativeAnswers [1] [P [iii]]) > 0) {
                answer[iii] = 2;
            } else if((cumulativeAnswers [2] [Q [iii] + 1] - cumulativeAnswers [2] [P [iii]]) > 0) {
                answer[iii] = 3;
            } else {
                answer[iii] = 4;
        }
    }
    return answer;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
832
0
Gpt3D_Clone832_0.java 1 61
Gpt3D_Clone832_0.java 62 112
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] result = new int [P.length];
    int [] factor1 = new int [S.length ()];
    int [] factor2 = new int [S.length ()];
    int [] factor3 = new int [S.length ()];
    int [] factor4 = new int [S.length ()];
    int factor1Sum = 0;
    int factor2Sum = 0;
    int factor3Sum = 0;
    int factor4Sum = 0;
    for (int i = 0;
    i < S.length (); i ++) {
        switch (S.charAt (i)) {
            case 'A' :
                factor1Sum ++;
                break;
            case 'C' :
                factor2Sum ++;
                break;
            case 'G' :
                factor3Sum ++;
                break;
            case 'T' :
                factor4Sum ++;
                break;
            default :
                break;
        }
        factor1 [i] = factor1Sum;
        factor2 [i] = factor2Sum;
        factor3 [i] = factor3Sum;
        factor4 [i] = factor4Sum;
    }
    for (int i = 0;
    i < P.length; i ++) {
        int start = P [i];
        int end = Q [i];
        if (start == 0) {
            if (factor1 [end] > 0) {
                result [i] = 1;
            } else if (factor2 [end] > 0) {
                result [i] = 2;
            } else if (factor3 [end] > 0) {
                result [i] = 3;
            } else {
                result [i] = 4;
            }
        } else {
            if (factor1 [end] > factor1 [start - 1]) {
                result [i] = 1;
            } else if (factor2 [end] > factor2 [start - 1]) {
                result [i] = 2;
            } else if (factor3 [end] > factor3 [start - 1]) {
                result [i] = 3;
            } else {
                result [i] = 4;
            }
        }
    }
    return result;
}
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int [] result = new int [P.length];
    int [] factor1 = new int [S.length ()];
    int [] factor2 = new int [S.length ()];
    int [] factor3 = new int [S.length ()];
    int [] factor4 = new int [S.length ()];
    int factor1Sum = 0;
    int factor2Sum = 0;
    int factor3Sum = 0;
    int factor4Sum = 0;
    for (int i = 0;
    i < S.length (); i ++) {
        switch (S.charAt (i)) {
            case 'A' :
                factor1Sum ++;
                break;
            case 'C' :
                factor2Sum ++;
                break;
            case 'G' :
                factor3Sum ++;
                break;
            case 'T' :
                factor4Sum ++;
                break;
            default :
                break;
        }
        factor1 [i] = factor1Sum;
        factor2 [i] = factor2Sum;
        factor3 [i] = factor3Sum;
        factor4 [i] = factor4Sum;
    }
    for (int i = 0;
    i < P.length; i ++) {
        int start = P [i];
        int end = Q [i];
        if (factor1 [end] - factor1 [start - 1] > 0) {
            result [i] = 1;
        } else if (factor2 [end] - factor2 [start - 1] > 0) {
            result [i] = 2;
        } else if (factor3 [end] - factor3 [start - 1] > 0) {
            result [i] = 3;
        } else {
            result [i] = 4;
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
835
0
Gpt3D_Clone835_0.java 1 39
Gpt3D_Clone835_0.java 40 75
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    lastOccurrencesMap = new int [3] [N];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
        lastOccurrencesMap [0] [i] = lastA;
        lastOccurrencesMap [1] [i] = lastC;
        lastOccurrencesMap [2] [i] = lastG;
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        for (int n = 0;
        n < 3; n ++) {
            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);
            if (lastOccurence != 0) {
                minimum = n + 1;
                break;
            }
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

public int [] solution (String S, int [] P, int [] Q) {
    int N = S.length ();
    int M = P.length;
    int [] result = new int [M];
    int lastA = - 1;
    int lastC = - 1;
    int lastG = - 1;
    for (int i = 0;
    i < N; i ++) {
        char c = S.charAt (i);
        if (c == 'A') {
            lastA = i;
        } else if (c == 'C') {
            lastC = i;
        } else if (c == 'G') {
            lastG = i;
        }
    }
    for (int i = 0;
    i < M; i ++) {
        int startIndex = P [i];
        int endIndex = Q [i];
        int minimum = 4;
        if (lastA >= startIndex && lastA <= endIndex) {
            minimum = 1;
        } else if (lastC >= startIndex && lastC <= endIndex) {
            minimum = 2;
        } else if (lastG >= startIndex && lastG <= endIndex) {
            minimum = 3;
        }
        result [i] = minimum;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
837
0
Gpt3D_Clone837_0.java 1 10
Gpt3D_Clone837_0.java 11 24
----------------------------------------

bool isPrime (int number) {
    if (number < 2) return false;
    if (number == 2) return true;
    if (number % 2 == 0) return false;
    for (int i = 3;
    (i * i) <= number; i += 2) {
        if (number % i == 0) return false;
    }
    return true;
}
----------------------------------------

bool isPrime (int number) {
    int limit; // Line 1
    if (number < 2) return false; // Line 2
    if (number == 2) return true;  // Line 3
    if (number % 2 == 0) return false; // Line 4
    limit = (int)sqrt(number); // Line 5
    for (int i = 3; i <= limit; i += 2) { // Line 6
        if (number % i == 0) return false; // Line 7
    }
    return true; // Line 8
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
838
0
Gpt3D_Clone838_0.java 1 14
Gpt3D_Clone838_0.java 15 32
----------------------------------------

public void tick (float delta) {
    Entity removeEntity = null;
    for (Entity e : entities) {
        e.tick (delta);
        if (e.checkStrength ()) {
            removeEntity = e;
            break;
        }
    }
    if (removeEntity != null) {
        entities.remove (removeEntity);
    }
    player.tick (delta);
}
----------------------------------------

public void tick (float delta) {
    Entity removeEntity = null;
    Iterator<Entity> e = entities.iterator();
    while (e.hasNext()) {
        Entity currentEntity = e.next();
        currentEntity.tick (delta);
        if (currentEntity.checkStrength ()) {
            removeEntity = currentEntity;
            break;
        }
    }
    if (removeEntity != null) {
        entities.remove (removeEntity);
    }
    player.tick (delta);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
840
1
Gpt3D_Clone840_1.java 1 21
Gpt3D_Clone840_1.java 22 47
----------------------------------------

public static String join (String separator, String...values) {
    if (values.length == 0) return "";
    char [] sep = separator.toCharArray ();
    int totalSize = (values.length - 1) * sep.length;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] == null) values [i] = "";
        else totalSize += values [i].length ();
    }
    char [] joined = new char [totalSize];
    int pos = 0;
    for (int i = 0, end = values.length - 1;
    i < end; i ++) {
        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());
        pos += values [i].length ();
        System.arraycopy (sep, 0, joined, pos, sep.length);
        pos += sep.length;
    }
    System.arraycopy (values [values.length - 1].toCharArray (), 0, joined, pos, values [values.length - 1].length ());
    return new String (joined);
}
----------------------------------------

public static String join (String separator, String...values) 
{
    int totalSize = 0;
    for (int i = 0; 
	i < values.length; i ++) 
	{
        if (values [i] == null) 
			values [i] = "";
		else 
			totalSize += values [i].length ();
    }
		
    int pos = 0;
    char [] joined = new char [totalSize];
    for (int i = 0, end = values.length - 1; 
	i < end; i ++) 
	{
        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());
        pos += values [i].length ();
    }
	
    System.arraycopy (values [values.length - 1].toCharArray (), 0, joined, pos, values [values.length - 1].length ());
    return new String (joined);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
843
0
Gpt3D_Clone843_0.java 1 12
Gpt3D_Clone843_0.java 13 30
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

public static String sequenceNums3 (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int i = 0; i < nums.length; i++) {
      int cur = nums[i]; 
      if (cur - end <= 1) {
        end = cur;
      } else {
        appendRange (sb, begin, end);
        begin = end = cur;
      }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
843
1
Gpt3D_Clone843_1.java 1 12
Gpt3D_Clone843_1.java 13 29
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

public static String sequenceNums4 (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) {
      if (cur - end <= 1) {
        end = cur;
      } else {
        appendRange4 (sb, begin, end);
        begin = end = cur;
      }
    }
    appendRange4 (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
844
0
Gpt3D_Clone844_0.java 1 12
Gpt3D_Clone844_0.java 13 33
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    int i = 0;
    while (i < nums.length) {
      int cur = nums[i]; 
      if (cur - end <= 1) {
        end = cur;
        i++;
      }
      else {
        appendRange (sb, begin, end);
        begin = end = cur;
      }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
844
1
Gpt3D_Clone844_1.java 1 12
Gpt3D_Clone844_1.java 13 29
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int i = 0; i < nums.length; i++) {
      int cur = nums[i]; 
      if (cur - end <= 1) end = cur;
      else {
        appendRange (sb, begin, end);
        begin = end = cur;
      }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
844
2
Gpt3D_Clone844_2.java 1 12
Gpt3D_Clone844_2.java 13 29
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int i=1; i<nums.length; i++){
        int cur = nums [i];
        if (cur - end <= 1) end = cur;
        else {
            appendRange (sb, begin, end);
            begin = end = cur;
        }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
844
3
Gpt3D_Clone844_3.java 1 12
Gpt3D_Clone844_3.java 13 29
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();
    int begin = nums [0], end = nums [0];
    for (int i=0; i<nums.length; i++){
        int cur = nums [i];
        if (cur - end <= 1) end = cur;
        else {
            appendRange (sb, begin, end);
            begin = end = cur;
        }
    }
    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
845
0
Gpt3D_Clone845_0.java 1 19
Gpt3D_Clone845_0.java 20 41
----------------------------------------

public int tortoiseMoves () {
    switch (tGen ()) {
        case 1 :
        case 2 :
        case 3 :
        case 4 :
        case 5 :
            return 3;
        case 6 :
        case 7 :
        case 8 :
            return 1;
        case 9 :
        case 10 :
            return - 6;
        default :
            return 0;
    }
}
----------------------------------------

public int tortoiseMoves() {
    int moves = 0;
    switch (tGen()) {
        case 1: case 2: case 3: case 4: case 5:
            moves = 3;
            break;
        case 6: case 7: case 8:
            moves = 1;
            break;
        case 9: case 10:
            moves = -6;
            break;
        default:
            moves = 0;
            break;
    }
    return moves;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
846
0
Gpt3D_Clone846_0.java 1 19
Gpt3D_Clone846_0.java 20 45
----------------------------------------

public int tortoiseMoves () {
    switch (tGen ()) {
        case 1 :
        case 2 :
        case 3 :
        case 4 :
        case 5 :
            return 3;
        case 6 :
        case 7 :
        case 8 :
            return 1;
        case 9 :
        case 10 :
            return - 6;
        default :
            return 0;
    }
}
----------------------------------------

public int tortoiseMoves () {
    int ret = 0;
    switch (tGen ()) {
        case 1 :
        case 2 :
        case 3 :
        case 4 :
        case 5 :
            ret = 3;
            break;
        case 6 :
        case 7 :
        case 8 :
            ret = 1;
            break;
        case 9 :
        case 10 :
            ret = - 6;
            break;
        default :
            break;
    }
    return ret;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
84
0
Gpt3D_Clone84_0.java 1 24
Gpt3D_Clone84_0.java 25 50
----------------------------------------

public static final int gcd (int a, int b) {
    if (a == Integer.MIN_VALUE) {
        if (b == Integer.MIN_VALUE) throw new IllegalArgumentException ("gcd() is greater than Integer.MAX_VALUE");
        return 1 << Integer.numberOfTrailingZeros (Math.abs (b));
    }
    if (b == Integer.MIN_VALUE) return 1 << Integer.numberOfTrailingZeros (Math.abs (a));
    a = Math.abs (a);
    b = Math.abs (b);
    if (a == 0) return b;
    if (b == 0) return a;
    int factorsOfTwoInA = Integer.numberOfTrailingZeros (a), factorsOfTwoInB = Integer.numberOfTrailingZeros (b), commonFactorsOfTwo = Math.min (factorsOfTwoInA, factorsOfTwoInB);
    a>>= factorsOfTwoInA;
    b>>= factorsOfTwoInB;
    while (a != b) {
        if (a > b) {
            a = (a - b);
            a>>= Integer.numberOfTrailingZeros (a);
        } else {
            b = (b - a);
            b>>= Integer.numberOfTrailingZeros (b);
        }
    }
    return a << commonFactorsOfTwo;
}
----------------------------------------

public static final int gcd (int a, int b) {
    if (a == Integer.MIN_VALUE) {
        if (b == Integer.MIN_VALUE) throw new IllegalArgumentException ("gcd() is greater than Integer.MAX_VALUE");
        return 1 << Integer.numberOfTrailingZeros (Math.abs (b));
    }
    if (b == Integer.MIN_VALUE) return 1 << Integer.numberOfTrailingZeros (Math.abs (a));
    a = Math.abs (a);
    b = Math.abs (b);
    if (a == 0) return b;
    if (b == 0) return a;
    int factorsOfTwoInA = Integer.numberOfTrailingZeros (a), factorsOfTwoInB = Integer.numberOfTrailingZeros (b), commonFactorsOfTwo = Math.min (factorsOfTwoInA, factorsOfTwoInB);
    a >>>= factorsOfTwoInA;
    b >>>= factorsOfTwoInB;
    while (a != b) {
        if (a > b) {
            a = (a - b);
            a >>>= Integer.numberOfTrailingZeros (a);
        } else {
            b = (b - a);
            b >>>= Integer.numberOfTrailingZeros (b);
        }
    }
    return a * commonFactorsOfTwo;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
84
1
Gpt3D_Clone84_1.java 1 24
Gpt3D_Clone84_1.java 25 49
----------------------------------------

public static final int gcd (int a, int b) {
    if (a == Integer.MIN_VALUE) {
        if (b == Integer.MIN_VALUE) throw new IllegalArgumentException ("gcd() is greater than Integer.MAX_VALUE");
        return 1 << Integer.numberOfTrailingZeros (Math.abs (b));
    }
    if (b == Integer.MIN_VALUE) return 1 << Integer.numberOfTrailingZeros (Math.abs (a));
    a = Math.abs (a);
    b = Math.abs (b);
    if (a == 0) return b;
    if (b == 0) return a;
    int factorsOfTwoInA = Integer.numberOfTrailingZeros (a), factorsOfTwoInB = Integer.numberOfTrailingZeros (b), commonFactorsOfTwo = Math.min (factorsOfTwoInA, factorsOfTwoInB);
    a>>= factorsOfTwoInA;
    b>>= factorsOfTwoInB;
    while (a != b) {
        if (a > b) {
            a = (a - b);
            a>>= Integer.numberOfTrailingZeros (a);
        } else {
            b = (b - a);
            b>>= Integer.numberOfTrailingZeros (b);
        }
    }
    return a << commonFactorsOfTwo;
}
----------------------------------------

public static final int gcd (int a, int b) {
    if (a == Integer.MIN_VALUE || b == Integer.MIN_VALUE) throw new IllegalArgumentException ("gcd() is greater than Integer.MAX_VALUE");
    a = Math.abs (a);
    b = Math.abs (b);
    if (a == 0 || b == 0) return a + b;
    int factorsOfTwoInA = Integer.numberOfTrailingZeros (a), factorsOfTwoInB = Integer.numberOfTrailingZeros (b), commonFactorsOfTwo = Math.min (factorsOfTwoInA, factorsOfTwoInB);
    a>>= factorsOfTwoInA;
    b>>= factorsOfTwoInB;
    while (a != b) {
        if (a > b) {
            int temp = (a - b);
            a = Math.abs(temp);
            if(a==0) a =1;
            a>>= Integer.numberOfTrailingZeros (a);
        } else {
            int temp = (b - a);
            b = Math.abs(temp);
            if (b == 0) b = 1;
            b>>= Integer.numberOfTrailingZeros (b);
        }
    }
    return a << commonFactorsOfTwo;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
84
2
Gpt3D_Clone84_2.java 1 24
Gpt3D_Clone84_2.java 25 47
----------------------------------------

public static final int gcd (int a, int b) {
    if (a == Integer.MIN_VALUE) {
        if (b == Integer.MIN_VALUE) throw new IllegalArgumentException ("gcd() is greater than Integer.MAX_VALUE");
        return 1 << Integer.numberOfTrailingZeros (Math.abs (b));
    }
    if (b == Integer.MIN_VALUE) return 1 << Integer.numberOfTrailingZeros (Math.abs (a));
    a = Math.abs (a);
    b = Math.abs (b);
    if (a == 0) return b;
    if (b == 0) return a;
    int factorsOfTwoInA = Integer.numberOfTrailingZeros (a), factorsOfTwoInB = Integer.numberOfTrailingZeros (b), commonFactorsOfTwo = Math.min (factorsOfTwoInA, factorsOfTwoInB);
    a>>= factorsOfTwoInA;
    b>>= factorsOfTwoInB;
    while (a != b) {
        if (a > b) {
            a = (a - b);
            a>>= Integer.numberOfTrailingZeros (a);
        } else {
            b = (b - a);
            b>>= Integer.numberOfTrailingZeros (b);
        }
    }
    return a << commonFactorsOfTwo;
}
----------------------------------------

public static final int gcd (int a, int b) {
    if (a == Integer.MIN_VALUE || b == Integer.MIN_VALUE) throw new IllegalArgumentException ("gcd() is greater than Integer.MAX_VALUE");
    a = Math.abs (a);
    b = Math.abs (b);
    if (a == 0 || b == 0) return a + b;
    int factorsOfTwoInA = Integer.lowestOneBit(a), factorsOfTwoInB = Integer.lowestOneBit(b), commonFactorsOfTwo = Math.min (factorsOfTwoInA, factorsOfTwoInB);
    a>>= Integer.numberOfTrailingZeros (a);
    b>>= Integer.numberOfTrailingZeros (b);
    while (a != b) {
        if (a > b) {
            a = (a - b);
            if(a==0) a = 1;
            a>>= Integer.numberOfTrailingZeros (a);
        } else {
            b = (b - a);
            if (b == 0) b = 1;
            b>>= Integer.numberOfTrailingZeros (b);
        }
    }
    return a << commonFactorsOfTwo;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
850
0
Gpt3D_Clone850_0.java 1 13
Gpt3D_Clone850_0.java 14 29
----------------------------------------

private static int countZeros (int [] f) {
    int start = 0, end = 0, cnt = 0;
    for (int i = 1;
    i < f.length; i ++) {
        if (f [i - 1] != 0 && f [i] == 0) {
            start = i;
        } else if (f [i - 1] == 0 && f [i] != 0 && start > 0) {
            end = i;
            cnt += end - start;
        }
    }
    return cnt;
}
----------------------------------------

private static int countZeros(int[] f) {
    int start = 0;
    int end = 0;
    int cnt = 0;
    for (int i = 1; i < f.length; i++) {
        if (f[i - 1] != 0 && f[i] == 0) {
            start = i;
        } else if (f[i - 1] == 0 && f[i] != 0 && start > 0) {
            end = i;
            cnt += end - start;
        }
    }
    return cnt;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
850
1
Gpt3D_Clone850_1.java 1 13
Gpt3D_Clone850_1.java 14 29
----------------------------------------

private static int countZeros (int [] f) {
    int start = 0, end = 0, cnt = 0;
    for (int i = 1;
    i < f.length; i ++) {
        if (f [i - 1] != 0 && f [i] == 0) {
            start = i;
        } else if (f [i - 1] == 0 && f [i] != 0 && start > 0) {
            end = i;
            cnt += end - start;
        }
    }
    return cnt;
}
----------------------------------------

public static int countZeros(int[] f) {
    int start = 0;
    int end = 0;
    int cnt = 0;
    for (int i = 1; i < f.length; i++) {
        if (f[i - 1] != 0 && f[i] == 0) {
            start = i;
        } else if (f[i - 1] == 0 && f[i] != 0 && start > 0) {
            end = i;
            cnt += end - start;
        }
    }
    return cnt;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
850
2
Gpt3D_Clone850_2.java 1 13
Gpt3D_Clone850_2.java 14 32
----------------------------------------

private static int countZeros (int [] f) {
    int start = 0, end = 0, cnt = 0;
    for (int i = 1;
    i < f.length; i ++) {
        if (f [i - 1] != 0 && f [i] == 0) {
            start = i;
        } else if (f [i - 1] == 0 && f [i] != 0 && start > 0) {
            end = i;
            cnt += end - start;
        }
    }
    return cnt;
}
----------------------------------------

private static int countZeros (int [] f) {
    int start = 0, end = 0, cnt = 0;
    if (f.length == 0)
        return 0;
    for (int i = 1; 
    i < f.length; i ++) {
        if (f[i - 1] != 0 && f[i] == 0) {
            start = i;
        } else if (f[i - 1] == 0 && f[i] != 0){
            end = i;
        }
        if (start > 0 && end > 0)
            cnt += end - start;
    }
    return cnt;
} 
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
851
2
Gpt3D_Clone851_2.java 1 8
Gpt3D_Clone851_2.java 9 20
----------------------------------------

public static double [] [] amountOTP (double [] [] a, int x) {
    double [] [] b = new double [x] [x];
    x = Math.min (x, a.length);
    for (int i = 0;
    i < x; i ++) for (int j = 0;
    j < x; j ++) b [i] [j] = a [i] [j];
    return b;
}
----------------------------------------

public static double [] [] amountOTP (double [] [] a, int x) {
    int c = Math.min(x,a.length);
    double [] [] b = new double [x] [x];   
    for (int i = 0;
    i < c; i++)
        for (int j = c-1;
        j >= 0; j--) 
        b [i] [j] = a [i] [j]; 
    return b;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
852
0
Gpt3D_Clone852_0.java 1 11
Gpt3D_Clone852_0.java 12 26
----------------------------------------

public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    if (! vg.parseFile ("input.xml", false)) return;
    VTDNav vn = vg.getNav ();
    AutoPilot ap = new AutoPilot (vn);
    ap.selectXPath ("/xml/item/@name");
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        System.out.println (" item name is ===>" + vn.toString (i + 1));
    }
}
----------------------------------------

public static void main (String [] s) throws VTDException {
    VTDGen vg = new VTDGen ();
    if (! vg.parseFile ("input.xml", false)) return;
    VTDNav vn = vg.getNav ();
    AutoPilot ap = new AutoPilot (vn);
    ap.selectXPath ("/xml/item/@name");
    int i = 0;
    while ((i = ap.evalXPath ()) != - 1) {
        int offset = vn.getText ();
        int len = vn.getTextLength ();
        System.out.println (" item name is ===>" + vn.toString (offset, len));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
853
1
Gpt3D_Clone853_1.java 1 13
Gpt3D_Clone853_1.java 14 29
----------------------------------------

static int [] createArray (int size) {
    int [] result = new int [size];
    int limit = (size + 1) / 2;
    int start = 0, value = 0, idx = 0;
    do {
        for (int i = start;
        i < start + limit && idx < size; ++ i) result [idx ++] = value;
        start += limit;
        limit = (limit + 1) / 2;
        ++ value;
    } while (idx < size);
    return result;
}
----------------------------------------

static int [] createArray (int size) {
    int [] result = new int [size];
    int limit = (size + 1) / 2;
    int start = 0, value = 0, idx = 0;
    while(idx < size) {
        int i;
        for (i = start;
        i < start + limit && idx < size; ++ i) result [idx ++] = value;
        start = i;
        limit = (limit + 1) / 2;
        ++ value;
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
854
0
Gpt3D_Clone854_0.java 1 31
Gpt3D_Clone854_0.java 32 58
----------------------------------------

public static void main (String [] args) {
    Address address = new Address ();
    address.setSomeCrap (null);
    Person person = new Person ();
    person.setAddress (address);
    long startTime = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        try {
            System.out.println (person.getAddress ().getSomeCrap ().getCrap ());
        } catch (NullPointerException npe) {
        }
    }
    long endTime = System.currentTimeMillis ();
    System.out.println ((endTime - startTime) / 1000F);
    long startTime1 = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        if (person != null) {
            Address address1 = person.getAddress ();
            if (address1 != null) {
                SomeCrap someCrap2 = address1.getSomeCrap ();
                if (someCrap2 != null) {
                    System.out.println (someCrap2.getCrap ());
                }
            }
        }
    }
    long endTime1 = System.currentTimeMillis ();
    System.out.println ((endTime1 - startTime1) / 1000F);
}
----------------------------------------

public static void main (String [] args) {
    Address address = new Address ();
    address.setSomeCrap (null);
    Person person = new Person ();
    person.setAddress (address);
    long startTime = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        try {
            System.out.println (person.getAddress ().getSomeCrap () == null ? "" : person.getAddress ().getSomeCrap ().getCrap ());
        } catch (NullPointerException npe) {
        }
    }
    long endTime = System.currentTimeMillis ();
    System.out.println ((endTime - startTime) / 1000F);
    long startTime1 = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        if (person != null && person.getAddress () != null && person.getAddress ().getSomeCrap () != null) {
            System.out.println (person.getAddress ().getSomeCrap ().getCrap ());
        }
    }
    long endTime1 = System.currentTimeMillis ();
    System.out.println ((endTime1 - startTime1) / 1000F);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
855
0
Gpt3D_Clone855_0.java 1 15
Gpt3D_Clone855_0.java 16 33
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] [] matrix = new int [3] [];
    matrix [0] = new int [] {1, 2, 2};
    matrix [1] = new int [] {2, 2, 3};
    matrix [2] = new int [] {0, 1, 2};
    int resultL2R = 1;
    int resultR2L = 1;
    for (int i = 0;
    i < matrix.length; i ++) {
        resultL2R *= matrix [i] [i];
        resultR2L *= matrix [i] [matrix.length - 1 - i];
    }
    System.out.println ("left-to-right: " + resultL2R);
    System.out.println ("right-to-left: " + resultR2L);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    int[][] matrix = new int[3][];
    matrix[0] = new int[] {1, 2, 2};
    matrix[1] = new int[] {2, 2, 3};
    matrix[2] = new int[] {0, 1, 2};
    int resultL2R = 1;
    int resultR2L = 1;
    for (int i = 0; i < matrix.length; ++i) {
        int l2r = matrix[i][i];
        int r2l = matrix[i][matrix.length - 1 - i];
        resultL2R *= l2r;
        resultR2L *= r2l;
    }
    System.out.println("left-to-right: " + resultL2R);
    System.out.println("right-to-left: " + resultR2L);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
855
1
Gpt3D_Clone855_1.java 1 15
Gpt3D_Clone855_1.java 16 33
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] [] matrix = new int [3] [];
    matrix [0] = new int [] {1, 2, 2};
    matrix [1] = new int [] {2, 2, 3};
    matrix [2] = new int [] {0, 1, 2};
    int resultL2R = 1;
    int resultR2L = 1;
    for (int i = 0;
    i < matrix.length; i ++) {
        resultL2R *= matrix [i] [i];
        resultR2L *= matrix [i] [matrix.length - 1 - i];
    }
    System.out.println ("left-to-right: " + resultL2R);
    System.out.println ("right-to-left: " + resultR2L);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    int[][] matrix = new int[3][];
    matrix[0] = new int[] {1, 2, 2};
    matrix[1] = new int[] {2, 2, 3};
    matrix[2] = new int[] {0, 1, 2};
    int resultL2R = 1;
    int resultR2L = 1;
    for (int i = 0; i < matrix.length; i++) {
        int l2r = matrix[i][i];
        int r2l = matrix[i][matrix.length - 1 - i];
        resultL2R *= l2r;
        resultR2L *= r2l;
    }
    System.out.println("left-to-right: " + resultL2R);
    System.out.println("right-to-left: " + resultR2L);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
859
0
Gpt3D_Clone859_0.java 1 9
Gpt3D_Clone859_0.java 10 20
----------------------------------------

public static int score (final String gene1, final String gene2) {
    final char [] a;
    final char [] b;
    final int s;
    a = gene1.toCharArray ();
    b = gene2.toCharArray ();
    s = score (a, b, 0, 0);
    return (s);
}
----------------------------------------

public static int score (final String gene1, final String gene2) {
    char [] a;
    char [] b;
    int s;
    a = gene1.toCharArray ();
    b = gene2.toCharArray ();
    s = score (a, b, 0, 0);
    return (s);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
0
Gpt3D_Clone85_0.java 1 9
Gpt3D_Clone85_0.java 10 22
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    while (htmlEditor.lookup (".tool-bar") != null) {
        Node toolBar = htmlEditor.lookup (".tool-bar");
        if (toolBar.getParent() instanceof Pane) {
            ((Pane) toolBar.getParent()).getChildren().remove(toolBar);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
85
1
Gpt3D_Clone85_1.java 1 9
Gpt3D_Clone85_1.java 10 19
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    while (htmlEditor.lookup (".tool-bar") != null) {
        ((Pane) htmlEditor.lookup (".tool-bar").getParent ()).getChildren ().remove (htmlEditor.lookup (".tool-bar"));
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
865
0
Gpt3D_Clone865_0.java 1 14
Gpt3D_Clone865_0.java 15 31
----------------------------------------

public static int findArray (int [] array, int [] subArray) {
    int index = - 1;
    arrayLoop : for (int i = 0;
    i < array.length; i ++) {
        if (array [i] == subArray [0]) {
            for (int j = 1;
            j < subArray.length; j ++) {
                if (i + j > array.length - 1 || array [i + j] != subArray [j]) continue arrayLoop;
            }
            index = i;
        }
    }
    return index;
}
----------------------------------------

public static int findArray (int [] array, int [] subArray) {
    int index = - 1;
arrayLoop : for (int i = 0;
    i < array.length; i ++) {
        int j;
        for (j = 0; j < subArray.length; j ++) {
            if (i + j > array.length - 1 || array [i + j] != subArray [j]) continue arrayLoop;
        }
        if (j == subArray.length) {
            index = i; 
        }
    }
    return index;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
866
0
Gpt3D_Clone866_0.java 1 13
Gpt3D_Clone866_0.java 14 67
----------------------------------------

public void put (K key, V val) {
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    map.put (key, rv);
    currentSize ++;
}
----------------------------------------

 public void put_t3 (K key, V val) {
     while (currentSize >= maxSize) {
         freeSpace();
     }
     ListNode < K > ln;
     if (map.containsKey (key)) {
         ln = queue.add (key);
     } else {
         get (key);
         return;
     }
     ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
     map.put (key, rv);
     currentSize ++;
 }
 
 
 //Type-4
 public void put_t4 (K key, V val) {
     ListNode < K > ln;
     if (map.containsKey (key)) {
         freeSpace ();
         ln = queue.add (key);
     } else {
         get (key);
         return;
     }
     ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
     map.put (key, rv);
     currentSize ++;
 }
//Type 3 Clone
public void put (K key, V val) {
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    map.put (key, rv);
    currentSize = currentSize + 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
866
1
Gpt3D_Clone866_1.java 1 13
Gpt3D_Clone866_1.java 14 67
----------------------------------------

public void put (K key, V val) {
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    map.put (key, rv);
    currentSize ++;
}
----------------------------------------

 public void put_t3 (K key, V val) {
     while (currentSize >= maxSize) {
         freeSpace();
     }
     ListNode < K > ln;
     if (map.containsKey (key)) {
         ln = queue.add (key);
     } else {
         get (key);
         return;
     }
     ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
     map.put (key, rv);
     currentSize ++;
 }
 
 
 //Type-4
 public void put_t4 (K key, V val) {
     ListNode < K > ln;
     if (map.containsKey (key)) {
         freeSpace ();
         ln = queue.add (key);
     } else {
         get (key);
         return;
     }
     ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
     map.put (key, rv);
     currentSize ++;
 }
//Type 3 Clone
public void put (K key, V val) {
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    map.put (key, rv);
    currentSize = currentSize + 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
866
2
Gpt3D_Clone866_2.java 1 13
Gpt3D_Clone866_2.java 14 46
----------------------------------------

public void put (K key, V val) {
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    map.put (key, rv);
    currentSize ++;
}
----------------------------------------

 public void put_t4 (K key, V val) {
     ListNode < K > ln;
     if (map.containsKey (key)) {
         freeSpace ();
         ln = queue.add (key);
     } else {
         get (key);
         return;
     }
     ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
     map.put (key, rv);
     currentSize ++;
 }
//Type 3 Clone
public void put (K key, V val) {
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    map.put (key, rv);
    currentSize = currentSize + 1;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
866
3
Gpt3D_Clone866_3.java 1 13
Gpt3D_Clone866_3.java 14 31
----------------------------------------

public void put (K key, V val) {
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    if (map.containsKey (key)) {
        get (key);
        return;
    }
    ListNode < K > ln = queue.add (key);
    ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
    map.put (key, rv);
    currentSize ++;
}
----------------------------------------

public void put (K key, V val) {
    if (currentSize < maxSize) {
        if (map.containsKey (key)) {
            get (key);
            return;
        }
        ListNode < K > ln = queue.add (key);
        ValueHolder < K, V > rv = new ValueHolder < K, V > (val, ln);
        map.put (key, rv);
        currentSize ++;
    }
    else{
        freeSpace();
    }
    
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
867
0
Gpt3D_Clone867_0.java 1 14
Gpt3D_Clone867_0.java 15 35
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        if(queue.contains(key)) {
            map.put (key, val);
            currentSize ++;
        } else {
            queue.add (key);
            map.put (key, val);
            currentSize ++;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
867
1
Gpt3D_Clone867_1.java 1 14
Gpt3D_Clone867_1.java 15 31
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    synchronized (this) {
        queue.add (key);
        map.put (key, val);
        currentSize ++;
    }
}
----------------------------------------

public void put (Key key, Value val) {
    if (map.containsKey (key)) {
        put (key, val);
        return;
    }
    while (currentSize >= maxSize) {
        freeSpace ();
    }
    Semaphore lock = new Semaphore (1);
    lock.acquire ();
    queue.add (key);
    map.put (key, val);
    currentSize ++;
    lock.release ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
86
0
Gpt3D_Clone86_0.java 1 9
Gpt3D_Clone86_0.java 10 22
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    do { 
        Node toolBar = htmlEditor.lookup (".tool-bar");
        if (toolBar != null) {
            ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
        }
    } while (htmlEditor.lookup (".tool-bar") != null);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
86
1
Gpt3D_Clone86_1.java 1 9
Gpt3D_Clone86_1.java 10 21
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

public void start(Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor();
    primaryStage.setScene(new Scene(htmlEditor));
    primaryStage.show();
    Node toolBar = htmlEditor.lookup(".tool-bar");
    while (toolBar != null) { 
        ((Pane) toolBar.getParent()).getChildren().remove(toolBar);
        toolBar = htmlEditor.lookup(".tool-bar");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
86
2
Gpt3D_Clone86_2.java 1 9
Gpt3D_Clone86_2.java 10 20
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    for (Node toolBar = htmlEditor.lookup (".tool-bar");
    toolBar != null; toolBar = htmlEditor.lookup (".tool-bar")) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

public void start (Stage primaryStage) {
    final HTMLEditor htmlEditor = new HTMLEditor ();
    primaryStage.setScene (new Scene (htmlEditor));
    primaryStage.show ();
    Node toolBar;
    while ((toolBar = htmlEditor.lookup (".tool-bar")) != null) {
        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
872
0
Gpt3D_Clone872_0.java 1 23
Gpt3D_Clone872_0.java 24 47
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    while (maxTry > 0) {
        maxTry --;
        if (! pass.equals (test)) {
            System.out.print ("You have " + maxTry + " try(es): ");
            test = input.nextLine ();
        } else {
            success = true;
            break;
        }
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------

public static void main (String [] args) {
      String pass = "admin";
      int maxTry = 3;
      boolean success = false;
      while (maxTry > 0) {
            Scanner input = new Scanner (System.in);
            System.out.print ("Insert the admin pass: ");
            String test = input.nextLine ();
            maxTry --;
            if (pass.equals (test)) {
                  success = true;
                  break;
            } else {
                  System.out.print ("You have " + maxTry + " try(es): ");
            }
      }
      if (success) {
            System.out.println ("Access granted");
      } else {
            System.out.println ("Access denied");
      }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
873
0
Gpt3D_Clone873_0.java 1 21
Gpt3D_Clone873_0.java 22 47
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        for (int i = 1;
        i < 3; i ++) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else if (i == 2) {
                System.out.print ("Access denied");
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        int i = 1;
        do {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else {
                i++;
                if (i == 3) {
                    System.out.print ("Access denied");
                }
            }
        } while (i < 3);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
873
1
Gpt3D_Clone873_1.java 1 21
Gpt3D_Clone873_1.java 22 47
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        for (int i = 1;
        i < 3; i ++) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else if (i == 2) {
                System.out.print ("Access denied");
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        int i = 1;
        while (i < 3) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else {
                i++;
                if (i == 3) {
                    System.out.print ("Access denied");
                }
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
874
0
Gpt3D_Clone874_0.java 1 21
Gpt3D_Clone874_0.java 22 43
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        for (int i = 1;
        i < 3; i ++) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else if (i == 2) {
                System.out.print ("Access denied");
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    int tries = 0;
    do {
        tries++;
        if (pass.equals (test)) {
            System.out.print ("Access granted");
            break;
        } else {
            System.out.print ("You have " + tries + " try(es): ");
            test = input.nextLine ();
            if (tries == 3) {
                System.out.print ("Access denied");
            }
        }
    } while (tries < 3);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
874
1
Gpt3D_Clone874_1.java 1 21
Gpt3D_Clone874_1.java 22 43
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        for (int i = 1;
        i < 3; i ++) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else if (i == 2) {
                System.out.print ("Access denied");
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    int tries = 1;
    while (tries <= 3) {
        if (pass.equals (test)) {
            System.out.print ("Access granted");
            break;
        } else {
            System.out.print ("You have " + tries + " try(es): ");
            test = input.nextLine ();
            tries++;
            if (tries == 4) {
                System.out.print ("Access denied");
            }
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
0
Gpt3D_Clone877_0.java 1 17
Gpt3D_Clone877_0.java 18 39
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            boolean grantDenied = false;
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    grantDenied = true;
                    break;
                }
            }
            if (grantDenied) {
                mRequestPermissionListener.onFailed();
            } else {
                mRequestPermissionListener.onSuccess();
            }
        } else {
            mRequestPermissionListener.onFailed();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
877
1
Gpt3D_Clone877_1.java 1 17
Gpt3D_Clone877_1.java 18 39
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            boolean grantGranted = true;
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    grantGranted = false;
                    break;
                }
            }
            if (grantGranted) {
                mRequestPermissionListener.onSuccess();
            } else {
                mRequestPermissionListener.onFailed();
            }
        } else {
            mRequestPermissionListener.onFailed();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
880
0
Gpt3D_Clone880_0.java 1 17
Gpt3D_Clone880_0.java 18 38
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode != mRequestCode) {
        return;
    }
    boolean allPermissionsGranted = true;
    for (int grantResult : grantResults) {
        if (grantResult != PackageManager.PERMISSION_GRANTED) {
            allPermissionsGranted = false;
            break;
        }
    }
    if (allPermissionsGranted) {
        mRequestPermissionListener.onSuccess ();
    } else {
        mRequestPermissionListener.onFailed ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
880
1
Gpt3D_Clone880_1.java 1 17
Gpt3D_Clone880_1.java 18 37
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode) {
        if (grantResults.length > 0) {
            for (int grantResult : grantResults) {
                if (grantResult != PackageManager.PERMISSION_GRANTED) {
                    mRequestPermissionListener.onFailed ();
                    return;
                }
            }
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == mRequestCode && grantResults.length > 0) {
        boolean allPermissionsGranted = true;
        for (int grantResult : grantResults) {
            if (grantResult != PackageManager.PERMISSION_GRANTED) {
                allPermissionsGranted = false;
                break;
            }
        }
        if (allPermissionsGranted) {
            mRequestPermissionListener.onSuccess ();
        } else {
            mRequestPermissionListener.onFailed ();
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
887
1
Gpt3D_Clone887_1.java 1 11
Gpt3D_Clone887_1.java 12 24
----------------------------------------

public static void main (String [] args) {
    String word = "a b c";
    int i = 0, spaceCount = 0;
    while (i < word.length ()) {
        if (word.charAt (i) == ' ') {
            spaceCount ++;
        }
        i ++;
    }
    System.out.println ("Spaces in string: " + spaceCount);
}
----------------------------------------

public static void main (String [] args) {
    String word = "a b c";
    int spaceCount = 0;
    for (int i = 0; i < word.length (); i++) {
        if (word.charAt (i) == ' ') {
            spaceCount ++;
        }
    }
    System.out.println ("Spaces in string: " + spaceCount);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
890
0
Gpt3D_Clone890_0.java 1 20
Gpt3D_Clone890_0.java 21 40
----------------------------------------

public static void main (String args []) {
    JSch jsch = new JSch ();
    Session session = null;
    try {
        session = jsch.getSession ("username", "127.0.0.1", 22);
        session.setConfig ("StrictHostKeyChecking", "no");
        session.setPassword ("password");
        session.connect ();
        Channel channel = session.openChannel ("sftp");
        channel.connect ();
        ChannelSftp sftpChannel = (ChannelSftp) channel;
        sftpChannel.get ("remotefile.txt", "localfile.txt");
        sftpChannel.exit ();
        session.disconnect ();
    } catch (JSchException e) {
        e.printStackTrace ();
    } catch (SftpException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String[] args) {
    JSch jsch = new JSch();
    Session session;
    try {
        session = jsch.getSession("username", "127.0.0.1", 22);
        session.setConfig("StrictHostKeyChecking", "no");
        session.setPassword("password");
        session.connect();
        Channel c = session.openChannel("sftp");
        c.connect();
        ChannelSftp sftp = (ChannelSftp) c;
        sftp.get("remotefile.txt", "localfile.txt");
        sftp.exit();
        session.disconnect();
    } catch (JSchException | SftpException e) {
        e.printStackTrace();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
895
0
Gpt3D_Clone895_0.java 1 13
Gpt3D_Clone895_0.java 14 33
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Thread t = new Thread (() -> {
        try {
            Thread.sleep (5000L);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    });
    System.out.println ("Starting Server!");
    t.start ();
    t.join ();
    System.out.println ("Server is done!");
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            try {
                Thread.sleep (5000L);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    };
    Thread t = new Thread (r);
    System.out.println ("Starting Server!");
    t.start ();
    t.join ();
    System.out.println ("Server is done!");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
895
1
Gpt3D_Clone895_1.java 1 13
Gpt3D_Clone895_1.java 14 31
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Thread t = new Thread (() -> {
        try {
            Thread.sleep (5000L);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    });
    System.out.println ("Starting Server!");
    t.start ();
    t.join ();
    System.out.println ("Server is done!");
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Thread t = new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                Thread.sleep (5000L);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    });
    System.out.println ("Starting Server!");
    t.start ();
    t.join ();
    System.out.println ("Server is done!");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
896
0
Gpt3D_Clone896_0.java 1 14
Gpt3D_Clone896_0.java 15 28
----------------------------------------

public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case android.R.id.home :
            if (getParentActivityIntent () == null) {
                Log.i (TAG, "You have forgotten to specify the parentActivityName in the AndroidManifest!");
                onBackPressed ();
            } else {
                NavUtils.navigateUpFromSameTask (this);
            }
            return true;
        default :
            return super.onOptionsItemSelected (item);
    }
}
----------------------------------------

public boolean onOptionsItemSelected (MenuItem item) {
    if (item.getItemId () == android.R.id.home) {
        if (getParentActivityIntent () == null) {
            Log.i (TAG, "You have forgotten to specify the parentActivityName in the AndroidManifest!");
            onBackPressed ();
        } else {
            NavUtils.navigateUpFromSameTask (this);
        }
        return true;
    }
    return super.onOptionsItemSelected (item);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
896
1
Gpt3D_Clone896_1.java 1 14
Gpt3D_Clone896_1.java 15 29
----------------------------------------

public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case android.R.id.home :
            if (getParentActivityIntent () == null) {
                Log.i (TAG, "You have forgotten to specify the parentActivityName in the AndroidManifest!");
                onBackPressed ();
            } else {
                NavUtils.navigateUpFromSameTask (this);
            }
            return true;
        default :
            return super.onOptionsItemSelected (item);
    }
}
----------------------------------------

public boolean onOptionsItemSelected (MenuItem item) {
    if (item.getItemId () != android.R.id.home) {
        return super.onOptionsItemSelected (item);
    }
    if (getParentActivityIntent () == null) {
        Log.i (TAG, "You have forgotten to specify the parentActivityName in the AndroidManifest!");
        onBackPressed ();
    } else {
        NavUtils.navigateUpFromSameTask (this);
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
897
0
Gpt3D_Clone897_0.java 1 14
Gpt3D_Clone897_0.java 15 27
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter elemnt size ");
    int size = input.nextInt ();
    int x = 0;
    int [] list1Array = new int [size];
    for (int y = 0;
    y < size; y ++) {
        System.out.println ("Enter number");
        list1Array [x] = input.nextInt ();
        x ++;
    }
    System.out.println (Arrays.toString (list1Array));
}
----------------------------------------

public static void main (String [] args) { 
    Scanner input = new Scanner (System.in);
    System.out.println("Enter element size: ");
    int size = input.nextInt();
    int[] list1Array = new int[size];
    for (int i = 0; i < size; i ++) {
        System.out.println("Enter number " + (i+1) + ": ");
        list1Array[i] = input.nextInt();
    }
    System.out.println("The entered numbers are: " +Arrays.toString(list1Array));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
8
0
Gpt3D_Clone8_0.java 1 28
Gpt3D_Clone8_0.java 29 55
----------------------------------------

public boolean hasSameAncestor (String person1, String person2) {
    if (allRelations.containsKey (person1)) {
        if (ancestors.contains (allRelations.get (person1))) {
            if (allRelations.containsKey (person2)) {
                if (ancestors.contains (allRelations.get (person2))) {
                    return true;
                } else if (allRelations.containsKey (allRelations.get (person2))) {
                    return hasSameAncestor (person1, allRelations.get (person2));
                } else {
                    return false;
                }
            } else {
                return false;
            }
        } else {
            ancestors.add (allRelations.get (person1));
            if (allRelations.containsKey (allRelations.get (person1))) {
                return hasSameAncestor (allRelations.get (person1), person2);
            } else if (allRelations.containsKey (person2)) {
                return hasSameAncestor (person1, allRelations.get (person2));
            } else {
                return false;
            }
        }
    } else {
        return false;
    }
}
----------------------------------------

public boolean hasSameAncestor (String person1, String person2) {
    if (allRelations.containsKey(person1)) {
        if (ancestors.contains(allRelations.get(person1))) {
            if (allRelations.containsKey(person2)) {
                if (ancestors.contains(allRelations.get(person2))) {
                    return true;
                } else {
                    return hasSameAncestor(person1, allRelations.get(person2));
                }
            } else {
                return false;
            }
        } else {
            ancestors.add(allRelations.get(person1));
            if (allRelations.containsKey(allRelations.get(person1))) {
                return hasSameAncestor(allRelations.get(person1), person2);
            } else {
                return hasSameAncestor(person1, allRelations.get(person2));
            }
        }
    } else {
        return false;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
8
1
Gpt3D_Clone8_1.java 1 28
Gpt3D_Clone8_1.java 29 49
----------------------------------------

public boolean hasSameAncestor (String person1, String person2) {
    if (allRelations.containsKey (person1)) {
        if (ancestors.contains (allRelations.get (person1))) {
            if (allRelations.containsKey (person2)) {
                if (ancestors.contains (allRelations.get (person2))) {
                    return true;
                } else if (allRelations.containsKey (allRelations.get (person2))) {
                    return hasSameAncestor (person1, allRelations.get (person2));
                } else {
                    return false;
                }
            } else {
                return false;
            }
        } else {
            ancestors.add (allRelations.get (person1));
            if (allRelations.containsKey (allRelations.get (person1))) {
                return hasSameAncestor (allRelations.get (person1), person2);
            } else if (allRelations.containsKey (person2)) {
                return hasSameAncestor (person1, allRelations.get (person2));
            } else {
                return false;
            }
        }
    } else {
        return false;
    }
}
----------------------------------------

public boolean hasSameAncestor (String person1, String person2) {
    if (allRelations.containsKey (person1)) {
        if (ancestors.contains (allRelations.get (person1))) {
            if (allRelations.containsKey (person2)) {
                if (ancestors.contains (allRelations.get (person2))) {
                    return true;
                } else if (allRelations.containsKey (allRelations.get (person2))) {
                    return hasSameAncestor (person1, allRelations.get (person2));
                }
            } 
            return false;
        }
        ancestors.add (allRelations.get (person1));
        if (allRelations.containsKey (allRelations.get (person1))) {
            return hasSameAncestor (allRelations.get (person1), person2);
        } 
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
8
2
Gpt3D_Clone8_2.java 1 28
Gpt3D_Clone8_2.java 29 49
----------------------------------------

public boolean hasSameAncestor (String person1, String person2) {
    if (allRelations.containsKey (person1)) {
        if (ancestors.contains (allRelations.get (person1))) {
            if (allRelations.containsKey (person2)) {
                if (ancestors.contains (allRelations.get (person2))) {
                    return true;
                } else if (allRelations.containsKey (allRelations.get (person2))) {
                    return hasSameAncestor (person1, allRelations.get (person2));
                } else {
                    return false;
                }
            } else {
                return false;
            }
        } else {
            ancestors.add (allRelations.get (person1));
            if (allRelations.containsKey (allRelations.get (person1))) {
                return hasSameAncestor (allRelations.get (person1), person2);
            } else if (allRelations.containsKey (person2)) {
                return hasSameAncestor (person1, allRelations.get (person2));
            } else {
                return false;
            }
        }
    } else {
        return false;
    }
}
----------------------------------------

public boolean hasSameAncestor (String person1, String person2) {
    if (allRelations.containsKey (person1)) {
        if (ancestors.contains (allRelations.get (person1))) {
            if (allRelations.containsKey (person2)) {
                if (ancestors.contains (allRelations.get (person2))) {
                    return true;
                } else if (allRelations.containsKey (allRelations.get (person2))) {
                    return hasSameAncestor (person1, allRelations.get (person2));
                } 
            } 
        } else {
            ancestors.add (allRelations.get (person1));
            if (allRelations.containsKey (allRelations.get (person1))) {
                return hasSameAncestor (allRelations.get (person1), person2);
            } 
        }
    } 
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
909
0
Gpt3D_Clone909_0.java 1 11
Gpt3D_Clone909_0.java 12 25
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

static String removeDuplicates (String s) {
    Set<String> noDupesSet = new HashSet<String>();
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0; i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if(!noDupesSet.contains(si)) {
            noDupesSet.add(si);
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
909
1
Gpt3D_Clone909_1.java 1 11
Gpt3D_Clone909_1.java 12 23
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0; i < s.length (); i++) {
        int index = noDupes.indexOf(s.charAt(i) + "");
        if(index == -1) {
            noDupes.append(s.charAt(i));
        }
    }
    return noDupes.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
909
2
Gpt3D_Clone909_2.java 1 11
Gpt3D_Clone909_2.java 12 22
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

static String removeDuplicates (String s) {
    Set<String> noDupes = new HashSet<> ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        noDupes.add (si);
    }
    return String.join("", noDupes);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
909
3
Gpt3D_Clone909_3.java 1 11
Gpt3D_Clone909_3.java 12 22
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (String str : s.split ("")) {
        if (noDupes.indexOf (str) == - 1) {
            noDupes.append (str);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
910
0
Gpt3D_Clone910_0.java 1 15
Gpt3D_Clone910_0.java 16 30
----------------------------------------

public static void main (String [] args) {
    String number1 = "108";
    String number2 = "84";
    char [] n1 = number1.toCharArray ();
    char [] n2 = number2.toCharArray ();
    int result = 0;
    for (int i = 0;
    i < n1.length; i ++) {
        for (int j = 0;
        j < n2.length; j ++) {
            result += (n1 [i] - '0') * (n2 [j] - '0') * (int) Math.pow (10, n1.length + n2.length - (i + j + 2));
        }
    }
    System.out.println (result);
}
----------------------------------------

public static int calculate(String number1, String number2){
    char [] n1 = number1.toCharArray ();
    char [] n2 = number2.toCharArray ();
    int result = 0;
    for (int i = 0;
    i < n1.length; i ++) {
        for (int j = 0;
        j < n2.length; j ++) {
            result += (n1 [i] - '0') * (n2 [j] - '0') * (int) Math.pow (10, n1.length + n2.length - (i + j + 2));
        }
    }
    return result; 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
911
0
Gpt3D_Clone911_0.java 1 10
Gpt3D_Clone911_0.java 11 22
----------------------------------------

public static final String deriveCurveName (PublicKey publicKey) throws GeneralSecurityException {
    if (publicKey instanceof java.security.interfaces.ECPublicKey) {
        final java.security.interfaces.ECPublicKey pk = (java.security.interfaces.ECPublicKey) publicKey;
        final ECParameterSpec params = pk.getParams ();
        return deriveCurveName (EC5Util.convertSpec (params, false));
    } else if (publicKey instanceof org.bouncycastle.jce.interfaces.ECPublicKey) {
        final org.bouncycastle.jce.interfaces.ECPublicKey pk = (org.bouncycastle.jce.interfaces.ECPublicKey) publicKey;
        return deriveCurveName (pk.getParameters ());
    } else throw new IllegalArgumentException ("Can only be used with instances of ECPublicKey (either jce or bc implementation)");
}
----------------------------------------

public static final String deriveCurveName (PublicKey publicKey) throws GeneralSecurityException {
    if (publicKey instanceof org.bouncycastle.jce.interfaces.ECPublicKey) {
        final org.bouncycastle.jce.interfaces.ECPublicKey pk = (org.bouncycastle.jce.interfaces.ECPublicKey) publicKey; 
        return deriveCurveName (pk.getParameters ());
    } else if (publicKey instanceof java.security.interfaces.ECPublicKey) {
        final java.security.interfaces.ECPublicKey pk = (java.security.interfaces.ECPublicKey) publicKey;
        final ECParameterSpec params = pk.getParams (); 
        return deriveCurveName (EC5Util.convertSpec (params, false));
    } else throw new IllegalArgumentException ("Can only be used with instances of ECPublicKey (either jce or bc implementation)");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
912
0
Gpt3D_Clone912_0.java 1 10
Gpt3D_Clone912_0.java 11 25
----------------------------------------

public static final String deriveCurveName (PrivateKey privateKey) throws GeneralSecurityException {
    if (privateKey instanceof java.security.interfaces.ECPrivateKey) {
        final java.security.interfaces.ECPrivateKey pk = (java.security.interfaces.ECPrivateKey) privateKey;
        final ECParameterSpec params = pk.getParams ();
        return deriveCurveName (EC5Util.convertSpec (params, false));
    } else if (privateKey instanceof org.bouncycastle.jce.interfaces.ECPrivateKey) {
        final org.bouncycastle.jce.interfaces.ECPrivateKey pk = (org.bouncycastle.jce.interfaces.ECPrivateKey) privateKey;
        return deriveCurveName (pk.getParameters ());
    } else throw new IllegalArgumentException ("Can only be used with instances of ECPrivateKey (either jce or bc implementation)");
}
----------------------------------------

public static final String deriveCurveName (PrivateKey data) throws GeneralSecurityException {
    if (data instanceof java.security.interfaces.ECPrivateKey) {
        final java.security.interfaces.ECPrivateKey pk = (java.security.interfaces.ECPrivateKey) data;
        final ECParameterSpec params = pk.getParams ();
        
        return EC5Util.convertSpec (params, false);
    } else if (data instanceof org.bouncycastle.jce.interfaces.ECPrivateKey) {
        final org.bouncycastle.jce.interfaces.ECPrivateKey pk = (org.bouncycastle.jce.interfaces.ECPrivateKey) data;
        return pk.getParameters ();
    } else {
        throw new IllegalArgumentException ("Can only be used with instances of ECPrivateKey (either jce or bc implementation)");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
912
1
Gpt3D_Clone912_1.java 1 10
Gpt3D_Clone912_1.java 11 22
----------------------------------------

public static final String deriveCurveName (PrivateKey privateKey) throws GeneralSecurityException {
    if (privateKey instanceof java.security.interfaces.ECPrivateKey) {
        final java.security.interfaces.ECPrivateKey pk = (java.security.interfaces.ECPrivateKey) privateKey;
        final ECParameterSpec params = pk.getParams ();
        return deriveCurveName (EC5Util.convertSpec (params, false));
    } else if (privateKey instanceof org.bouncycastle.jce.interfaces.ECPrivateKey) {
        final org.bouncycastle.jce.interfaces.ECPrivateKey pk = (org.bouncycastle.jce.interfaces.ECPrivateKey) privateKey;
        return deriveCurveName (pk.getParameters ());
    } else throw new IllegalArgumentException ("Can only be used with instances of ECPrivateKey (either jce or bc implementation)");
}
----------------------------------------

public static final String deriveCurveName (PrivateKey privateKey) throws GeneralSecurityException {
    if (privateKey instanceof org.bouncycastle.jce.interfaces.ECPrivateKey) {
        final org.bouncycastle.jce.interfaces.ECPrivateKey pk = (org.bouncycastle.jce.interfaces.ECPrivateKey) privateKey;
        return deriveCurveName (pk.getParameters ());
    } else if (privateKey instanceof java.security.interfaces.ECPrivateKey) {
        final java.security.interfaces.ECPrivateKey pk = (java.security.interfaces.ECPrivateKey) privateKey;
        final ECParameterSpec params = pk.getParams ();
        return deriveCurveName (EC5Util.convertSpec (params, false));
    } else throw new IllegalArgumentException ("Can only be used with instances of ECPrivateKey (either jce or bc implementation)");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
912
2
Gpt3D_Clone912_2.java 1 10
Gpt3D_Clone912_2.java 11 22
----------------------------------------

public static final String deriveCurveName (PrivateKey privateKey) throws GeneralSecurityException {
    if (privateKey instanceof java.security.interfaces.ECPrivateKey) {
        final java.security.interfaces.ECPrivateKey pk = (java.security.interfaces.ECPrivateKey) privateKey;
        final ECParameterSpec params = pk.getParams ();
        return deriveCurveName (EC5Util.convertSpec (params, false));
    } else if (privateKey instanceof org.bouncycastle.jce.interfaces.ECPrivateKey) {
        final org.bouncycastle.jce.interfaces.ECPrivateKey pk = (org.bouncycastle.jce.interfaces.ECPrivateKey) privateKey;
        return deriveCurveName (pk.getParameters ());
    } else throw new IllegalArgumentException ("Can only be used with instances of ECPrivateKey (either jce or bc implementation)");
}
----------------------------------------

public static final String deriveCurveName (PrivateKey privateKey) throws GeneralSecurityException {
    if (privateKey instanceof org.bouncycastle.jce.interfaces.ECPrivateKey) {
        final org.bouncycastle.jce.interfaces.ECPrivateKey pk = (org.bouncycastle.jce.interfaces.ECPrivateKey) privateKey;
        return deriveCurveNameUsingBouncyCastleImpl (pk.getParameters ());
    } else if (privateKey instanceof java.security.interfaces.ECPrivateKey) {
        final java.security.interfaces.ECPrivateKey pk = (java.security.interfaces.ECPrivateKey) privateKey;
        final ECParameterSpec params = pk.getParams ();
        return deriveCurveNameUsingJavaImpl (EC5Util.convertSpec (params, false));
    } else throw new IllegalArgumentException ("Can only be used with instances of ECPrivateKey (either jce or bc implementation)");
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
913
0
Gpt3D_Clone913_0.java 1 14
Gpt3D_Clone913_0.java 15 30
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

public static String toHexString (int bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        int high = (int) ((bytes [iter] & 0xf0)>> 4);
        int low = (int) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
913
1
Gpt3D_Clone913_1.java 1 14
Gpt3D_Clone913_1.java 15 30
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

public static String toHexString (double bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        double high = (double) ((bytes [iter] & 0xf0)>> 4);
        double low = (double) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
915
0
Gpt3D_Clone915_0.java 1 14
Gpt3D_Clone915_0.java 15 29
----------------------------------------

public static String toHexString (byte bytes []) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (int iter = 0;
    iter < bytes.length; iter ++) {
        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);
        byte low = (byte) (bytes [iter] & 0x0f);
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString ();
}
----------------------------------------

public static String toHexString (byte [] bytes) {
    if (bytes == null) {
        return null;
    }
    StringBuffer sb = new StringBuffer ();
    for (byte b : bytes) {
        byte high = (byte) ((b & 0xF0) >> 4); 
        byte low = (byte) (b & 0x0F); 
        sb.append (nibble2char (high));
        sb.append (nibble2char (low));
    }
    return sb.toString (); 
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
916
0
Gpt3D_Clone916_0.java 1 12
Gpt3D_Clone916_0.java 13 24
----------------------------------------

public static String toHexString (byte [] bytes) {
    StringBuilder hexString = new StringBuilder ();
    for (int i = 0;
    i < bytes.length; i ++) {
        String hex = Integer.toHexString (0xFF & bytes [i]);
        if (hex.length () == 1) {
            hexString.append ('0');
        }
        hexString.append (hex);
    }
    return hexString.toString ();
}
----------------------------------------

public static String toHexString (byte [] bytes) {
    StringBuilder hexString = new StringBuilder ();
    for (int i = 0;
    i < bytes.length; i ++) {
        int b = 0xFF & bytes [i];
        String hex = String.format ("%02X ", b);
        hexString.append (hex);
    }
    return hexString.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
917
0
Gpt3D_Clone917_0.java 1 12
Gpt3D_Clone917_0.java 13 26
----------------------------------------

public static String toHexString (byte [] bytes) {
    StringBuilder hexString = new StringBuilder ();
    for (int i = 0;
    i < bytes.length; i ++) {
        String hex = Integer.toHexString (0xFF & bytes [i]);
        if (hex.length () == 1) {
            hexString.append ('0');
        }
        hexString.append (hex);
    }
    return hexString.toString ();
}
----------------------------------------

public static String toHexString(byte[] bytes) {
    StringBuilder hexString = new StringBuilder();
    int length = bytes.length;
    for (int i = 0; i < length; i++) {
        String hexStr = Integer.toString(0xFF & bytes[i], 16);
        if (hexStr.length() == 1) {
            hexString.append("0");
        }
        hexString.append(hexStr);
    }
    return hexString.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
917
1
Gpt3D_Clone917_1.java 1 12
Gpt3D_Clone917_1.java 13 26
----------------------------------------

public static String toHexString (byte [] bytes) {
    StringBuilder hexString = new StringBuilder ();
    for (int i = 0;
    i < bytes.length; i ++) {
        String hex = Integer.toHexString (0xFF & bytes [i]);
        if (hex.length () == 1) {
            hexString.append ('0');
        }
        hexString.append (hex);
    }
    return hexString.toString ();
}
----------------------------------------

public static String toHexString(byte[] bytes) {
    StringBuilder hexString = new StringBuilder();
    int length = bytes.length;
    for (int i = 0; i < length; i++) {
        String hexStr = Integer.toHexString(bytes[i] & 0xFF);
        if (hexStr.length() == 1) {
            hexString.append("0");
        }
        hexString.append(hexStr);
    }
    return hexString.toString();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
919
0
Gpt3D_Clone919_0.java 1 14
Gpt3D_Clone919_0.java 15 29
----------------------------------------

public String getNextMonth (boolean maxDate) {
    Calendar calendar = Calendar.getInstance ();
    calendar.set (year, monthNo, 1);
    calendar.add (Calendar.MONTH, 1);
    if (maxDate) {
        int maxD = calendar.getActualMaximum (Calendar.DAY_OF_MONTH);
        calendar.set (Calendar.DAY_OF_MONTH, maxD);
    } else {
        calendar.set (Calendar.DAY_OF_MONTH, day);
    }
    String date = (calendar.get (Calendar.YEAR)) + "-" + (calendar.get (Calendar.MONTH) + 1) + "-" + calendar.get (Calendar.DAY_OF_MONTH);
    calendar.clear ();
    return date;
}
----------------------------------------

public String getNextMonthType4 (boolean maxDate) {
    Calendar calendar = Calendar.getInstance ();
    calendar.set (year, monthNo, 1);
    calendar.add (Calendar.MONTH, 1);
    int maxD = 0;
    if (maxDate) {
        maxD = calendar.getActualMaximum (Calendar.DAY_OF_MONTH);
    }
    calendar.set (Calendar.DAY_OF_MONTH, maxD == 0 ? day : maxD);
    String date = (calendar.get (Calendar.YEAR)) + "-" + (calendar.get (Calendar.MONTH) + 1) + "-" + calendar.get (Calendar.DAY_OF_MONTH);
    calendar.clear ();
    return date;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
921
0
Gpt3D_Clone921_0.java 1 13
Gpt3D_Clone921_0.java 14 28
----------------------------------------

public static void main (final String [] argv) throws NoSuchMethodException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
    final String methodName;
    final Method method;
    final Main main;
    main = new Main ();
    if (argv.length == 0) {
        methodName = "foo";
    } else {
        methodName = "bar";
    }
    method = Main.class.getDeclaredMethod (methodName, int.class);
    main.car (method, 42);
}
----------------------------------------

public static void main (String [] argv) throws NoSuchMethodException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
    String methodName;
    Method method;
    Main main;
    main = new Main ();
    if (argv.length == 0) {
        methodName = "foo";
    } else {
        methodName = "bar";
    }
    method = Main.class.getDeclaredMethod (methodName, int.class);
    main.car (method, 42);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
922
0
Gpt3D_Clone922_0.java 1 22
Gpt3D_Clone922_0.java 23 41
----------------------------------------

public int solution (int [] A) {
    if (A.length == 2) return Math.abs (A [0] - A [1]);
    int [] s1 = new int [A.length - 1];
    s1 [0] = A [0];
    for (int i = 1;
    i < A.length - 1; i ++) {
        s1 [i] = s1 [i - 1] + A [i];
    }
    int [] s2 = new int [A.length - 1];
    s2 [A.length - 2] = A [A.length - 1];
    for (int i = A.length - 3;
    i >= 0; i --) {
        s2 [i] = s2 [i + 1] + A [i + 1];
    }
    int finalSum = Integer.MAX_VALUE;
    for (int j = 0;
    j < s1.length; j ++) {
        int sum = Math.abs (s1 [j] - s2 [j]);
        if (sum < finalSum) finalSum = sum;
    }
    return finalSum;
}
----------------------------------------

public int solution (int [] A) {
    if (A.length == 2) return Math.abs (A [0] - A [1]);
    int [] s1 = new int [A.length - 1];
    s1 [0] = A [0];
    int [] s2 = new int [A.length - 1];
    s2 [A.length - 2] = A [A.length - 1];
    for (int i = 1; i < A.length - 2; i++) {
        s1 [i] = s1 [i - 1] + A [i];
        s2 [i - 1] = s2 [i] + A [i + 1];
    }
    int finalSum = Integer.MAX_VALUE;
    for (int j = 0; j < s1.length; j++) {
        int sum = Math.abs (s1 [j] - s2 [j]);
        if (sum < finalSum) finalSum = sum;
    }
    return finalSum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
922
1
Gpt3D_Clone922_1.java 1 22
Gpt3D_Clone922_1.java 23 40
----------------------------------------

public int solution (int [] A) {
    if (A.length == 2) return Math.abs (A [0] - A [1]);
    int [] s1 = new int [A.length - 1];
    s1 [0] = A [0];
    for (int i = 1;
    i < A.length - 1; i ++) {
        s1 [i] = s1 [i - 1] + A [i];
    }
    int [] s2 = new int [A.length - 1];
    s2 [A.length - 2] = A [A.length - 1];
    for (int i = A.length - 3;
    i >= 0; i --) {
        s2 [i] = s2 [i + 1] + A [i + 1];
    }
    int finalSum = Integer.MAX_VALUE;
    for (int j = 0;
    j < s1.length; j ++) {
        int sum = Math.abs (s1 [j] - s2 [j]);
        if (sum < finalSum) finalSum = sum;
    }
    return finalSum;
}
----------------------------------------

public int solution (int [] A) {
    if (A.length == 2) return Math.abs (A [0] - A [1]);
    int [] s1 = new int [A.length - 1];
    s1 [0] = A [0];
    int [] s2 = new int [A.length - 1];
    s2 [A.length - 2] = A [A.length - 1];
    int finalSum = Integer.MAX_VALUE;
    for (int i = 1;
    i < A.length - 1; i ++) {
        s1 [i] = s1 [i - 1] + A [i];
        int sum = Math.abs (s1 [i] - s2 [i - 1]);
        if (sum < finalSum) finalSum = sum;
        s2 [i - 1] = s2 [i] + A [i + 1];
    }
    return finalSum;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
923
0
Gpt3D_Clone923_0.java 1 22
Gpt3D_Clone923_0.java 23 50
----------------------------------------

private void initData () {
    testData = new ArrayList < EventStatus > ();
    testData.add (new EventStatus ("Mach-1", 1477468500000L, 1, 0));
    testData.add (new EventStatus ("Mach-1", 1477472100000L, 2, 0));
    testData.add (new EventStatus ("Mach-1", 1477474200000L, 5, 0));
    testData.add (new EventStatus ("Mach-1", 1477476000000L, 3, 0));
    testData.add (new EventStatus ("Mach-1", 1477479600000L, 4, 0));
    testData.add (new EventStatus ("Mach-1", 1477486800000L, 1, 0));
    testData.add (new EventStatus ("Mach-2", 1477465200000L, 3, 1));
    testData.add (new EventStatus ("Mach-2", 1477472400000L, 2, 1));
    testData.add (new EventStatus ("Mach-2", 1477474200000L, 5, 1));
    testData.add (new EventStatus ("Mach-2", 1477476000000L, 2, 1));
    testData.add (new EventStatus ("Mach-2", 1477479600000L, 3, 1));
    testData.add (new EventStatus ("Mach-2", 1477486800000L, 4, 1));
    ArrayList < String > list = new ArrayList < > ();
    for (EventStatus eventStatus : testData) {
        if (list.contains (eventStatus.getName ())) continue;
        else list.add (eventStatus.getName ());
    }
    catArray = new String [list.size ()];
    catArray = list.toArray (catArray);
}
----------------------------------------

private void initDataNew () {
    testData = new ArrayList < EventStatus > ();
    testData.add (new EventStatus ("Mach-1", 1477468500000L, 1, 0));
    testData.add (new EventStatus ("Mach-1", 1477472100000L, 2, 0));
    testData.add (new EventStatus ("Mach-1", 1477474200000L, 5, 0));
    testData.add (new EventStatus ("Mach-1", 1477476000000L, 3, 0));
    testData.add (new EventStatus ("Mach-1", 1477479600000L, 4, 0));
    testData.add (new EventStatus ("Mach-1", 1477486800000L, 1, 0));
    testData.add (new EventStatus ("Mach-2", 1477465200000L, 3, 1));
    testData.add (new EventStatus ("Mach-2", 1477472400000L, 2, 1));
    testData.add (new EventStatus ("Mach-2", 1477474200000L, 5, 1));
    testData.add (new EventStatus ("Mach-2", 1477476000000L, 2, 1));
    testData.add (new EventStatus ("Mach-2", 1477479600000L, 3, 1));
    testData.add (new EventStatus ("Mach-2", 1477486800000L, 4, 1));
    Set<String> set = new HashSet<>();
    for(EventStatus eventStatus : testData){
        set.add(eventStatus.getName());
    }
    catArray = new String[set.size()];
    Iterator<String> itr = set.iterator();
    int i=0;
    while(itr.hasNext()){
        catArray[i] = itr.next();
        i++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
926
0
Gpt3D_Clone926_0.java 1 14
Gpt3D_Clone926_0.java 15 30
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    ArrayList < Integer > list = new ArrayList < Integer > ();
    System.out.print ("Enter integers please ");
    System.out.println ("(EOF or non-integer to terminate): ");
    while (scan.hasNextInt ()) {
        list.add (scan.nextInt ());
    }
    Integer [] nums = list.toArray (new Integer [0]);
    for (int i = 0;
    i < nums.length; i ++) {
        System.out.println (nums [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    List < java.lang.Integer > list = new ArrayList < java.lang.Integer > ();
    System.out.print ("Enter integers please ");
    System.out.println ("(EOF or non-integer to terminate): ");
    while (scan.hasNextInt ()) {
        list.add (java.lang.Integer.valueOf(scan.nextInt ()));
    }
    Integer [] nums = list.toArray (new Integer [list.size ()]);
    for (int i = 0;
    i < nums.length; i ++) {
        System.out.println (nums [i]);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
928
0
Gpt3D_Clone928_0.java 1 11
Gpt3D_Clone928_0.java 12 26
----------------------------------------

public static String replacer (StringBuffer outBuffer) {
    String data = outBuffer.toString ();
    try {
        data = data.replaceAll ("%(?![0-9a-fA-F]{2})", "%25");
        data = data.replaceAll ("\\+", "%2B");
        data = URLDecoder.decode (data, "utf-8");
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return data;
}
----------------------------------------

public static String replacer (StringBuffer outBuffer) {
    String data = outBuffer.toString ();
    try {
        Pattern pattern = Pattern.compile ("%(?![0-9a-fA-F]{2})");
        Matcher matcher = pattern.matcher (data);
        data = matcher.replaceAll ("%25");
        data = data.replaceAll ("\\+", "%2B");
        data = URLDecoder.decode (data, "utf-8");
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return data;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
929
0
Gpt3D_Clone929_0.java 1 17
Gpt3D_Clone929_0.java 18 36
----------------------------------------

public int compare (Integer o1, Integer o2) {
    if (o1 % 2 == 0) {
        if (o2 % 2 == 0) {
            if (o1 < o2) return - 1;
            else return 1;
        } else {
            return - 1;
        }
    } else {
        if (o2 % 2 != 0) {
            if (o1 < o2) return 1;
            else return - 1;
        } else {
            return 1;
        }
    }
}
----------------------------------------

public int compare (Integer o1, Integer o2) {
    if (o1 % 2 == 0) {
        if (o2 % 2 == 0) {
            if (o1 > o2) return 1;
            else return -1;
        } else {
            return -1;
        }
    } else {
        if (o2 % 2 != 0) {
            if (o1 < o2) return -1;
            else return 1;
        } else {
            return 1;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
929
1
Gpt3D_Clone929_1.java 1 17
Gpt3D_Clone929_1.java 18 34
----------------------------------------

public int compare (Integer o1, Integer o2) {
    if (o1 % 2 == 0) {
        if (o2 % 2 == 0) {
            if (o1 < o2) return - 1;
            else return 1;
        } else {
            return - 1;
        }
    } else {
        if (o2 % 2 != 0) {
            if (o1 < o2) return 1;
            else return - 1;
        } else {
            return 1;
        }
    }
}
----------------------------------------

public int compare (Integer o1, Integer o2) {
    boolean o1IsEven = o1 % 2 == 0;
    boolean o2IsEven = o2 % 2 == 0;
    if (o1IsEven && o2IsEven) {
        if (o1 < o2) return -1;
        else return 1;
    } else if (!o1IsEven && !o2IsEven) {
        if (o1 < o2) return 1;
        else return -1;
    } else if (o1IsEven && !o2IsEven) {
        return - 1;
    } else {
        return 1;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
929
2
Gpt3D_Clone929_2.java 1 17
Gpt3D_Clone929_2.java 18 36
----------------------------------------

public int compare (Integer o1, Integer o2) {
    if (o1 % 2 == 0) {
        if (o2 % 2 == 0) {
            if (o1 < o2) return - 1;
            else return 1;
        } else {
            return - 1;
        }
    } else {
        if (o2 % 2 != 0) {
            if (o1 < o2) return 1;
            else return - 1;
        } else {
            return 1;
        }
    }
}
----------------------------------------

public int compare (Integer o1, Integer o2) {
    if (o1 % 2 == 0) {
        if (o2 % 2 != 0) {
            return -1;
        } else {
            if (o1 < o2) return - 1;
            else return 1;
        }
    } else {
        if (o2 % 2 == 0) {
            return 1;   
        } else {
            if (o1 < o2) return 1;
            else return - 1;
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
929
3
Gpt3D_Clone929_3.java 1 17
Gpt3D_Clone929_3.java 18 32
----------------------------------------

public int compare (Integer o1, Integer o2) {
    if (o1 % 2 == 0) {
        if (o2 % 2 == 0) {
            if (o1 < o2) return - 1;
            else return 1;
        } else {
            return - 1;
        }
    } else {
        if (o2 % 2 != 0) {
            if (o1 < o2) return 1;
            else return - 1;
        } else {
            return 1;
        }
    }
}
----------------------------------------

public int compare (Integer o1, Integer o2) {
    if (o1 % 2 == 0 && o2 % 2 == 0) {
        if (o1 < o2) return -1;
        else return 1;
    } else if (o1 % 2 != 0 && o2 % 2 != 0) {
        if (o1 < o2) return 1;
        else return -1;
    } else if (o1 % 2 == 0 && o2 % 2 != 0) {
        return - 1;
    } else {
        return 1;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
92
0
Gpt3D_Clone92_0.java 1 12
Gpt3D_Clone92_0.java 13 27
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type(String text) {
    char c;
    int len = text.length();
    while (len > 0) {
        c = text.charAt(len - 1);
        if (c <= 31 || c == 129) {
            pressControlKey(c);
        } else {
            typeAsciiCode(c);
        }
        len--;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
92
1
Gpt3D_Clone92_1.java 1 12
Gpt3D_Clone92_1.java 13 27
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type(String text) {
    char c;
    int ii = 0;
    while (ii < text.length()) {
        c = text.charAt(ii);
        if (c <= 31 || c == 129) {
            pressControlKey(c);
        } else {
            typeAsciiCode(c);
        }
        ii++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
92
2
Gpt3D_Clone92_2.java 1 12
Gpt3D_Clone92_2.java 13 25
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type (String text) {
    for (int ii = 0; 
    ii < text.length (); ii ++) {
        char c = text.charAt (ii);
        if (isControlChar (c)) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
932
0
Gpt3D_Clone932_0.java 1 16
Gpt3D_Clone932_0.java 17 33
----------------------------------------

public void addString (String...myString) {
    String separator = " AND ";
    StringBuilder sb = new StringBuilder ();
    sb.append ('(');
    boolean needSeparator = false;
    for (String string : myString) {
        if (needSeparator) {
            sb.append (separator);
        } else {
            needSeparator = true;
        }
        sb.append (string);
    }
    sb.append (')');
    System.out.println (sb);
}
----------------------------------------

public void addString (String...myString) {
    String separator = " AND ";
    StringBuilder sb = new StringBuilder ();
    sb.append ('(');
    int i = 0;
    while (i < myString.length) {
        if (i > 0) {
            sb.append (separator);
        }
        sb.append (myString[i]);
        i++;
    }
    sb.append (')');
    System.out.println (sb);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
932
1
Gpt3D_Clone932_1.java 1 16
Gpt3D_Clone932_1.java 17 31
----------------------------------------

public void addString (String...myString) {
    String separator = " AND ";
    StringBuilder sb = new StringBuilder ();
    sb.append ('(');
    boolean needSeparator = false;
    for (String string : myString) {
        if (needSeparator) {
            sb.append (separator);
        } else {
            needSeparator = true;
        }
        sb.append (string);
    }
    sb.append (')');
    System.out.println (sb);
}
----------------------------------------

public void addString (String...myString) {
    String separator = " AND ";
    StringBuilder sb = new StringBuilder ();
    sb.append ('(');
    for (int i = 0; i < myString.length; i++) {
        if (i > 0) {
            sb.append (separator);
        }
        sb.append (myString[i]);
    }
    sb.append (')');
    System.out.println (sb);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
938
1
Gpt3D_Clone938_1.java 1 12
Gpt3D_Clone938_1.java 13 26
----------------------------------------

private static String join (String delimiter, String...parts) {
    StringBuilder builder = new StringBuilder ();
    for (String part : parts) {
        if (! isEmpty (part)) {
            if (builder.length () > 0) {
                builder.append (delimiter);
            }
            builder.append (part);
        }
    }
    return builder.toString ();
}
----------------------------------------

private static String join (String delimiter, String[] parts) {
    StringBuilder builder = new StringBuilder ();
    for (String part : parts) {
        if (part != null && !part.isEmpty ()) {
            if (builder.length () > 0) {
                builder.append (delimiter);
            }
            builder.append (part);
        }
    }
    return builder.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
938
3
Gpt3D_Clone938_3.java 1 12
Gpt3D_Clone938_3.java 13 26
----------------------------------------

private static String join (String delimiter, String...parts) {
    StringBuilder builder = new StringBuilder ();
    for (String part : parts) {
        if (! isEmpty (part)) {
            if (builder.length () > 0) {
                builder.append (delimiter);
            }
            builder.append (part);
        }
    }
    return builder.toString ();
}
----------------------------------------

private static String join (String delimiter, String...parts) {
    StringBuilder joinedString = new StringBuilder ();
    for (String part : parts) {
        if (part != null && part.length() > 0) {
            joinedString.append (part);
            if (joinedString.length() > 0) {
                joinedString.append (delimiter);
            }
        }
    }
    return joinedString.toString ();
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
939
2
Gpt3D_Clone939_2.java 1 9
Gpt3D_Clone939_2.java 10 22
----------------------------------------

public static void main (String [] args) throws ParseException {
    String st1 = "2015-07-24T09:39:14.000Z";
    String st2 = "2015-07-24T09:45:44.000Z";
    String time1 = st1.substring (st1.indexOf ("T") + 1, st1.indexOf (".0"));
    String time2 = st2.substring (st2.indexOf ("T") + 1, st2.indexOf (".0"));
    Date dateTime1 = new java.text.SimpleDateFormat ("HH:mm").parse (time1);
    Date dateTime2 = new java.text.SimpleDateFormat ("HH:mm").parse (time2);
    System.out.println (dateTime1.after (dateTime2));
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    String st1 = "2015-07-24T09:39:14.000Z";
    String st2 = "2015-07-24T09:45:44.000Z";
    int indexOfT1 = st1.indexOf("T");
    int indexOfT2 = st2.indexOf("T");
    String time1 = st1.substring (indexOfT1 + 1, st1.indexOf (".0"));
    String time2 = st2.substring (indexOfT2 + 1, st2.indexOf (".0"));
    Date dateTime1 = new java.text.SimpleDateFormat ("HH:mm").parse (time1);
    Date dateTime2 = new java.text.SimpleDateFormat ("HH:mm").parse (time2);
    System.out.println (dateTime1.after (dateTime2));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
939
3
Gpt3D_Clone939_3.java 1 9
Gpt3D_Clone939_3.java 10 20
----------------------------------------

public static void main (String [] args) throws ParseException {
    String st1 = "2015-07-24T09:39:14.000Z";
    String st2 = "2015-07-24T09:45:44.000Z";
    String time1 = st1.substring (st1.indexOf ("T") + 1, st1.indexOf (".0"));
    String time2 = st2.substring (st2.indexOf ("T") + 1, st2.indexOf (".0"));
    Date dateTime1 = new java.text.SimpleDateFormat ("HH:mm").parse (time1);
    Date dateTime2 = new java.text.SimpleDateFormat ("HH:mm").parse (time2);
    System.out.println (dateTime1.after (dateTime2));
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    String st1 = "2015-07-24T09:39:14.000Z";
    String st2 = "2015-07-24T09:45:44.000Z";
    String time1 = st1.substring (st1.indexOf('T') + 1, st1.lastIndexOf(".0"));
    String time2 = st2.substring (st2.indexOf('T') + 1, st2.lastIndexOf(".0"));
    Date dateTime1 = new java.text.SimpleDateFormat ("HH:mm").parse (time1);
    Date dateTime2 = new java.text.SimpleDateFormat ("HH:mm").parse (time2);
    System.out.println (dateTime1.after (dateTime2));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
940
2
Gpt3D_Clone940_2.java 1 9
Gpt3D_Clone940_2.java 10 21
----------------------------------------

public String getString () {
    StringBuilder msg = new StringBuilder ();
    String read;
    do {
        read = inputGenerator.getMessage ();
        msg.append (read);
    } while (read.toLowerCase ().startsWith ("hi"));
    return msg.toString ();
}
----------------------------------------

public List<String> getString () {
    List<String> msg = new ArrayList<> ();
    String read;
    do {
        read = inputGenerator.getMessage ();
        msg.add (read);
    } while (read.toLowerCase ().startsWith ("hi"));
    return msg;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
940
3
Gpt3D_Clone940_3.java 1 9
Gpt3D_Clone940_3.java 10 20
----------------------------------------

public String getString () {
    StringBuilder msg = new StringBuilder ();
    String read;
    do {
        read = inputGenerator.getMessage ();
        msg.append (read);
    } while (read.toLowerCase ().startsWith ("hi"));
    return msg.toString ();
}
----------------------------------------

public void getString () {
    StringBuilder msg = new StringBuilder ();
    String read;
    do {
        read = inputGenerator.getMessage ();
        msg.append (read);
    } while (!read.toLowerCase ().startsWith ("bye"));
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
941
1
Gpt3D_Clone941_1.java 1 12
Gpt3D_Clone941_1.java 13 29
----------------------------------------

public String makeStringsEqual (String str, String keyword) {
    if (str.length () > keyword.length ()) {
        string result = "";
        for (int i = 0;
        i < str.length (); i ++) {
            if (str.charAt (i) != ' ') {
                result += keyword.charAt (i % keyword.length ());
            } else result += " ";
        }
    }
    return result;
}
----------------------------------------

public String makeStringsEqual (String str, String keyword) {
    if (str.length () > keyword.length ()) {
        string result = "";
        
        int index = 0;
        for (int i = 0;
        i < keyword.length (); i ++) {
            if (str.charAt (i) != ' ') {
                result += keyword.charAt (index);
                index++;
            } else result += " ";
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
941
2
Gpt3D_Clone941_2.java 1 12
Gpt3D_Clone941_2.java 13 28
----------------------------------------

public String makeStringsEqual (String str, String keyword) {
    if (str.length () > keyword.length ()) {
        string result = "";
        for (int i = 0;
        i < str.length (); i ++) {
            if (str.charAt (i) != ' ') {
                result += keyword.charAt (i % keyword.length ());
            } else result += " ";
        }
    }
    return result;
}
----------------------------------------

public String makeStringsEqual (String str, String keyword) {
    if (str.length () > keyword.length ()) {
        String result = "";
        for (int i = 0; i < str.length (); i ++) {
            Character c = str.charAt (i);
            if (c.equals (' ')) {
                result += " ";
            } else {
                result += keyword.charAt (i % keyword.length ());
            }
        }
    }
    return result;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
943
0
Gpt3D_Clone943_0.java 1 18
Gpt3D_Clone943_0.java 19 37
----------------------------------------

public static void main (String [] args) {
    BufferedReader reader = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Please enter user name : ");
    String username = null;
    try {
        username = reader.readLine ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    System.out.println ("You entered : " + username);
    Scanner in = new Scanner (System.in);
    System.out.print ("Please enter user name : ");
    username = in.nextLine ();
    System.out.println ("You entered : " + username);
    Console console = System.console ();
    username = console.readLine ("Please enter user name : ");
    System.out.println ("You entered : " + username);
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.print ("Please enter user name : ");
    String username = in.nextLine ();
    System.out.println ("You entered : " + username);
    BufferedReader reader = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Please enter user name : ");
    try {
        username = reader.readLine ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    System.out.println ("You entered : " + username);
    Console console = System.console ();
    username = console.readLine ("Please enter user name : ");
    System.out.println ("You entered : " + username);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
947
0
Gpt3D_Clone947_0.java 1 14
Gpt3D_Clone947_0.java 15 35
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

public static void main (final String [] args) {
    try {
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
        while (true) {
            System.out.print ("><![CDATA[ ");
            String input = br.readLine ();
            System.out.println (input);
            if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
                System.out.println ("Exiting.");
                return;
            }
            System.out.println ("...response goes here...");
        }
    }
    catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
948
1
Gpt3D_Clone948_1.java 1 14
Gpt3D_Clone948_1.java 15 30
----------------------------------------

public static void main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        System.out.print ("><![CDATA[ ");
        String input = br.readLine ();
        System.out.println (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            System.out.println ("Exiting.");
            return;
        }
        System.out.println ("...response goes here...");
    }
}
----------------------------------------

public static void Main (final String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    Console.WriteLine ("Enter some text, or '" + EXIT_COMMAND + "' to quit");
    while (true) {
        Console.Write ("><![CDATA[ ");
        String input = br.readLine ();
        Console.WriteLine (input);
        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {
            Console.WriteLine ("Exiting.");
            return;
        }
        Console.WriteLine ("...response goes here...");
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
949
0
Gpt3D_Clone949_0.java 1 11
Gpt3D_Clone949_0.java 12 31
----------------------------------------

public static void main (String [] args) throws InterruptedException, ExecutionException {
    CompletableFuture < String > future = readPage ();
    CompletableFuture < Void > future2 = future.thenAccept (page -> {
        System.out.println (page);
        throw new IllegalArgumentException ("unexpected exception");
    });
    future2.exceptionally (e -> {
        e.printStackTrace (System.err);
        return null;
    });
}
----------------------------------------

public static void main (String [] args) throws InterruptedException, ExecutionException {
    CompletableFuture < String > future = readPage ();
    CompletableFuture < Void > future2 = future.thenAccept (page -> {
        System.out.println (page);
        throw new IllegalArgumentException ("unexpected exception");
    });
    future2.exceptionally (e -> {
        e.printStackTrace (System.err);
        return null;
    });
    future2.handle ((result, exception) -> {
        if (exception != null) {
            exception.printStackTrace (System.err);
            return null;
        }
        return result;
    });
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
950
0
Gpt3D_Clone950_0.java 1 10
Gpt3D_Clone950_0.java 11 25
----------------------------------------

protected Node getTrueParent () {
    if (getEdges () != null && ! getEdges ().isEmpty ()) {
        for (Edge e : getEdges ()) {
            if (e != null && e.getNode2 () == this && ! e.isPseudo ()) {
                return e.getNode1 ();
            }
        }
    }
    return null;
}
----------------------------------------

protected Node getTrueParent () {
    if (getEdges () == null || getEdges ().isEmpty ()) {
        return null;
    }
    for (Edge e : getEdges ()) {
        if (e != null && e.getNode2 () == this && ! e.isPseudo ()) {
            return e.getNode1 ();
        }
    }
    return null;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
954
0
Gpt3D_Clone954_0.java 1 8
Gpt3D_Clone954_0.java 9 19
----------------------------------------

public boolean isPrime () {
    int sqrt = (int) Math.sqrt ((double) value);
    for (int i = 2;
    i <= sqrt; i ++) {
        if (value % i == 0) return false;
    }
    return true;
}
----------------------------------------

public boolean isPrime () {
    double d = (double) value;
    int upperBound = (int) Math.sqrt(d);
    for (int i = 2;
    i <= upperBound; i ++) {
        if (value % i == 0) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
954
1
Gpt3D_Clone954_1.java 1 8
Gpt3D_Clone954_1.java 9 19
----------------------------------------

public boolean isPrime () {
    int sqrt = (int) Math.sqrt ((double) value);
    for (int i = 2;
    i <= sqrt; i ++) {
        if (value % i == 0) return false;
    }
    return true;
}
----------------------------------------

public boolean isPrime () {
    float f = (float) value;
    int upperLimit = (int) Math.sqrt(f);
    for (int i = 2;
    i <= upperLimit; i ++) {
        if (value % i == 0) return false;
    }
    return true;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
954
2
Gpt3D_Clone954_2.java 1 8
Gpt3D_Clone954_2.java 9 17
----------------------------------------

public boolean isPrime () {
    int sqrt = (int) Math.sqrt ((double) value);
    for (int i = 2;
    i <= sqrt; i ++) {
        if (value % i == 0) return false;
    }
    return true;
}
----------------------------------------

public boolean isPrime () {
    int sqrt = (int) Math.sqrt ((double) value);
    for (int i = 2; i <= sqrt; i ++) {
        if (value % i != 0) return true;
    }
    return false;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
956
0
Gpt3D_Clone956_0.java 1 25
Gpt3D_Clone956_0.java 26 55
----------------------------------------

public static String getDurationBreakdown (long millis) {
    String [] units = {" Days ", " Hours ", " Minutes ", " Seconds "};
    Long [] values = new Long [units.length];
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    values [0] = TimeUnit.MILLISECONDS.toDays (millis);
    millis -= TimeUnit.DAYS.toMillis (values [0]);
    values [1] = TimeUnit.MILLISECONDS.toHours (millis);
    millis -= TimeUnit.HOURS.toMillis (values [1]);
    values [2] = TimeUnit.MILLISECONDS.toMinutes (millis);
    millis -= TimeUnit.MINUTES.toMillis (values [2]);
    values [3] = TimeUnit.MILLISECONDS.toSeconds (millis);
    StringBuilder sb = new StringBuilder (64);
    boolean startPrinting = false;
    for (int i = 0;
    i < units.length; i ++) {
        if (! startPrinting && values [i] != 0) startPrinting = true;
        if (startPrinting) {
            sb.append (values [i]);
            sb.append (units [i]);
        }
    }
    return (sb.toString ());
}
----------------------------------------

public static String getDurationBreakdown (long millis) {
    String [] units = {" Days ", " Hours ", " Minutes ", " Seconds "};
    Long [] values = new Long [units.length];
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    long days_millis = TimeUnit.DAYS.toMillis (values [0]);
    millis -= days_millis;
    long hours_millis = TimeUnit.HOURS.toMillis (values [1]);
    millis -= hours_millis;
    long minutes_millis = TimeUnit.MINUTES.toMillis (values [2]);
    millis -= minutes_millis;
    values [0] = TimeUnit.MILLISECONDS.toDays (millis);
    values [1] = TimeUnit.MILLISECONDS.toHours (millis);
    values [2] = TimeUnit.MILLISECONDS.toMinutes (millis);
    values [3] = TimeUnit.MILLISECONDS.toSeconds (millis);
    StringBuilder sb = new StringBuilder (64);
    boolean startPrinting = false;
    for (int i = 0;
    i < units.length; i ++) {
        if (! startPrinting && values [i] != 0) startPrinting = true;
        if (startPrinting) {
            sb.append (values [i]);
            sb.append (units [i]);
        }
    }
    return (sb.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
956
1
Gpt3D_Clone956_1.java 1 25
Gpt3D_Clone956_1.java 26 55
----------------------------------------

public static String getDurationBreakdown (long millis) {
    String [] units = {" Days ", " Hours ", " Minutes ", " Seconds "};
    Long [] values = new Long [units.length];
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    values [0] = TimeUnit.MILLISECONDS.toDays (millis);
    millis -= TimeUnit.DAYS.toMillis (values [0]);
    values [1] = TimeUnit.MILLISECONDS.toHours (millis);
    millis -= TimeUnit.HOURS.toMillis (values [1]);
    values [2] = TimeUnit.MILLISECONDS.toMinutes (millis);
    millis -= TimeUnit.MINUTES.toMillis (values [2]);
    values [3] = TimeUnit.MILLISECONDS.toSeconds (millis);
    StringBuilder sb = new StringBuilder (64);
    boolean startPrinting = false;
    for (int i = 0;
    i < units.length; i ++) {
        if (! startPrinting && values [i] != 0) startPrinting = true;
        if (startPrinting) {
            sb.append (values [i]);
            sb.append (units [i]);
        }
    }
    return (sb.toString ());
}
----------------------------------------

public static String getDurationBreakdown (long millis) {
    String [] units = {" Days ", " Hours ", " Minutes ", " Seconds "};
    Long [] values = new Long [units.length];
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    values [0] = TimeUnit.MILLISECONDS.toDays (millis);
    long days_millis = TimeUnit.DAYS.toMillis (values [0]);
    millis -= days_millis;
    values [1] = TimeUnit.MILLISECONDS.toHours (millis);
    long hours_millis = TimeUnit.HOURS.toMillis (values [1]);
    millis -= hours_millis;
    values [2] = TimeUnit.MILLISECONDS.toMinutes (millis);
    long minutes_millis = TimeUnit.MINUTES.toMillis (values [2]);
    millis -= minutes_millis;
    values [3] = TimeUnit.MILLISECONDS.toSeconds (millis);
    StringBuilder sb = new StringBuilder (64);
    boolean startPrinting = false;
    for (int i = 0;
    i < units.length; i ++) {
        if (! startPrinting && values [i] != 0) startPrinting = true;
        if (startPrinting) {
            sb.append (values [i]);
            sb.append (units [i]);
        }
    }
    return (sb.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
958
0
Gpt3D_Clone958_0.java 1 22
Gpt3D_Clone958_0.java 23 46
----------------------------------------

public static String getDurationBreakdown (long millis) {
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    long days = TimeUnit.MILLISECONDS.toDays (millis);
    millis -= TimeUnit.DAYS.toMillis (days);
    long hours = TimeUnit.MILLISECONDS.toHours (millis);
    millis -= TimeUnit.HOURS.toMillis (hours);
    long minutes = TimeUnit.MILLISECONDS.toMinutes (millis);
    millis -= TimeUnit.MINUTES.toMillis (minutes);
    long seconds = TimeUnit.MILLISECONDS.toSeconds (millis);
    StringBuilder sb = new StringBuilder (64);
    sb.append (days);
    sb.append (" Days ");
    sb.append (hours);
    sb.append (" Hours ");
    sb.append (minutes);
    sb.append (" Minutes ");
    sb.append (seconds);
    sb.append (" Seconds");
    return (sb.toString ());
}
----------------------------------------

public static String getDurationBreakdown (long millis) {
    if (millis < 0) {
        throw new IllegalArgumentException ("Duration must be greater than zero!");
    }
    long days = TimeUnit.MILLISECONDS.convert(millis, TimeUnit.DAYS);
    millis = millis - TimeUnit.DAYS.convert(days, TimeUnit.MILLISECONDS);
    long hours = TimeUnit.MILLISECONDS.convert(millis, TimeUnit.HOURS);
    millis = millis - TimeUnit.HOURS.convert(hours, TimeUnit.MILLISECONDS);
    long minutes = TimeUnit.MILLISECONDS.convert(millis, TimeUnit.MINUTES);
    millis = millis - TimeUnit.MINUTES.convert(minutes, TimeUnit.MILLISECONDS);
    long seconds = TimeUnit.MILLISECONDS.convert(millis, TimeUnit.SECONDS);
    StringBuilder sb = new StringBuilder (64);
    sb.append (days);
    sb.append (" Days ");
    sb.append (hours);
    sb.append (" Hours ");
    sb.append (minutes);
    sb.append (" Minutes ");
    sb.append (seconds);
    sb.append (" Seconds");
    return (sb.toString ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
95
1
Gpt3D_Clone95_1.java 1 12
Gpt3D_Clone95_1.java 13 24
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    } else if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    } else if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
95
3
Gpt3D_Clone95_3.java 1 12
Gpt3D_Clone95_3.java 13 23
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

private void type (char character){
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character) || Character.isDigit (character)) {
        typeShiftCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
960
0
Gpt3D_Clone960_0.java 1 10
Gpt3D_Clone960_0.java 11 24
----------------------------------------

public static String startOz (String str) {
    if (str.length () >= 2 && str.substring (0, 2).equals ("oz")) {
        return "oz";
    } else if (str.length () >= 2 && str.substring (1, 2).equals ("z")) {
        return "z";
    } else if (str.length () >= 2 && str.substring (0, 1).equals ("o")) {
        return "o";
    }
    return "";
}
----------------------------------------

public static String startOz (String str) {
    if (str.length() >= 2) {
        if (str.substring (0, 2).equals ("oz")) {
            return "oz";
        } else if (str.substring (1, 2).equals ("z")) {
            return "z";
        } else if (str.substring (0, 1).equals ("o")) {
            return "o";
        }
    }
    return "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
960
3
Gpt3D_Clone960_3.java 1 10
Gpt3D_Clone960_3.java 11 22
----------------------------------------

public static String startOz (String str) {
    if (str.length () >= 2 && str.substring (0, 2).equals ("oz")) {
        return "oz";
    } else if (str.length () >= 2 && str.substring (1, 2).equals ("z")) {
        return "z";
    } else if (str.length () >= 2 && str.substring (0, 1).equals ("o")) {
        return "o";
    }
    return "";
}
----------------------------------------

public static String startOz (String str) {
    if (str.indexOf("oz") == 0) {
        return "oz";
    } else if (str.indexOf("z") == 1) {
        return "z";
    } else if (str.indexOf("o") == 0) {
        return "o";
    }
    return "";
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
1
Gpt3D_Clone963_1.java 1 14
Gpt3D_Clone963_1.java 15 61
----------------------------------------

public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    String binary = "";
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

// Code 1
public static void main (String h[]) {
    Scanner sc = new Scanner (System.in);
    int decimal;
    
    System.out.print("Please enter number: ");
    decimal = sc.nextInt();
    String binary="";
    
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal!=0) {
            if(decimal%2==1) {
                binary="1"+binary;
            } else {
                binary="0"+binary;
            }
                decimal=decimal/2;
            }
        }
        System.out.println ("binary is:" + binary);
    }
// Code 2
public static void main (String h[]) {
    Scanner sc = new Scanner (System.in);
    int decimal;
    System.out.print("Please enter number: ");
    decimal = sc.nextInt();
    String binary="";
    
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            if(decimal % 2 == 0)
                binary = "0" + binary; 
            else
                binary = "1" + binary; 
            decimal = decimal / 2; 
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
963
2
Gpt3D_Clone963_2.java 1 14
Gpt3D_Clone963_2.java 15 29
----------------------------------------

public static void main (String h []) {
    Scanner sc = new Scanner (System.in);
    int decimal = sc.nextInt ();
    String binary = "";
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

public static void main (String h []) {
    int decimal = Integer.parseInt(h[0]);
    if (decimal <= 0) {
        System.out.println ("Please Enter more than 0");
    } else {
        String binary = "";
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal = decimal / 2;
        }
        System.out.println ("binary is:" + binary);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
970
0
Gpt3D_Clone970_0.java 1 14
Gpt3D_Clone970_0.java 15 32
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    int cellCount = rowOld.getLastCellNum();
    for (int i = 0; i < cellCount; i++) {
        Cell cell = rowOld.getCell(i);
        cellNew = rowNew.createCell (i, cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
972
0
Gpt3D_Clone972_0.java 1 18
Gpt3D_Clone972_0.java 19 33
----------------------------------------

private void transform (Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderRight (styleOld.getBorderRight ());
    styleNew.setBorderTop (styleOld.getBorderTop ());
    styleNew.setDataFormat (this.transform (styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setFont (this.transform (styleOld.getFont (this.workbookOld)));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

private void transform (Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderRight (styleOld.getBorderRight ());
    styleNew.setDataFormat (this.transform (styleOld.getDataFormat ()));
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
976
0
Gpt3D_Clone976_0.java 1 18
Gpt3D_Clone976_0.java 19 33
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderRight (styleOld.getBorderRight ());
    styleNew.setBorderTop (styleOld.getBorderTop ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderTop (styleOld.getBorderTop ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setLocked (styleOld.getLocked ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
976
1
Gpt3D_Clone976_1.java 1 18
Gpt3D_Clone976_1.java 19 31
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderRight (styleOld.getBorderRight ());
    styleNew.setBorderTop (styleOld.getBorderTop ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
97
0
Gpt3D_Clone97_0.java 1 12
Gpt3D_Clone97_0.java 13 27
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type (String text) {
    char c;
    int ii = 0;
    while (ii < text.length ()) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
        ii++;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
97
1
Gpt3D_Clone97_1.java 1 12
Gpt3D_Clone97_1.java 13 28
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31) {
            pressControlKey (c);
        } else if (c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
97
2
Gpt3D_Clone97_2.java 1 12
Gpt3D_Clone97_2.java 13 26
----------------------------------------

public void type (String text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text.charAt (ii);
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

public void type (Character[] text) {
    char c;
    for (int ii = 0;
    ii < text.length (); ii ++) {
        c = text[ii];
        if (c <= 31 || c == 129) {
            pressControlKey (c);
        } else {
            typeAsciiCode (c);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
983
0
Gpt3D_Clone983_0.java 1 14
Gpt3D_Clone983_0.java 15 31
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

private void transform(HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight(rowOld.getHeight());
    if (rowOld.getRowStyle() != null) {
        Integer hash = rowOld.getRowStyle().hashCode();
        if (!this.styleMap.containsKey(hash))
            this.transform(hash, rowOld.getRowStyle(), this.workbookNew.createCellStyle());
        rowNew.setRowStyle(this.styleMap.get(hash));
    }
    for (int cellIndex = 0; cellIndex < rowOld.getLastCellNum(); cellIndex++) {
        cellNew = rowNew.createCell(cellIndex, rowOld.getCell(cellIndex).getCellType());
        if (cellNew != null) this.transform((HSSFCell) rowOld.getCell(cellIndex), cellNew);
    }
    this.lastColumn = Math.max(this.lastColumn, rowOld.getLastCellNum());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
983
1
Gpt3D_Clone983_1.java 1 14
Gpt3D_Clone983_1.java 15 32
----------------------------------------

private void transform (HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    if (rowOld.getRowStyle () != null) {
        Integer hash = rowOld.getRowStyle ().hashCode ();
        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());
        rowNew.setRowStyle (this.styleMap.get (hash));
    }
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

private void transform(HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight(rowOld.getHeight());
    if(rowOld.getRowStyle() != null) {
        Integer hash = rowOld.getRowStyle().hashCode();
        if(!styleMap.containsKey(hash)) 
            transform(hash, rowOld.getRowStyle(), workbookNew.createCellStyle());
        rowNew.setRowStyle(styleMap.get(hash));
    }
    for(Cell cell : rowOld) {
        cellNew = rowNew.createCell(cell.getColumnIndex(), cell.getCellType());
        if(cellNew != null)
            transform((HSSFCell)cell, cellNew);
    }
    lastColumn = Math.max(lastColumn, rowOld.getLastCellNum());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
984
0
Gpt3D_Clone984_0.java 1 29
Gpt3D_Clone984_0.java 30 64
----------------------------------------

private void transform (HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            cellNew.setCellValue (cellOld.getErrorCellValue ());
            break;
        case Cell.CELL_TYPE_FORMULA :
            cellNew.setCellValue (cellOld.getCellFormula ());
            break;
        case Cell.CELL_TYPE_NUMERIC :
            cellNew.setCellValue (cellOld.getNumericCellValue ());
            break;
        case Cell.CELL_TYPE_STRING :
            cellNew.setCellValue (cellOld.getStringCellValue ());
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

private void transform (HSSFCell cellOld, XSSFCell cellNew) {
    cellNew.setCellComment (cellOld.getCellComment ());
    Integer hash = cellOld.getCellStyle ().hashCode ();
    if (! this.styleMap.containsKey (hash)) {
        this.transform (hash, cellOld.getCellStyle (), this.workbookNew.createCellStyle ());
    }
    cellNew.setCellStyle (this.styleMap.get (hash));
    switch (cellOld.getCellType ()) {
        case Cell.CELL_TYPE_BLANK :
            break;
        case Cell.CELL_TYPE_BOOLEAN :
            cellNew.setCellValue (cellOld.getBooleanCellValue ());
            break;
        case Cell.CELL_TYPE_ERROR :
            String cellErrorValue = cellOld.getErrorCellValue ();
            cellNew.setCellErrorValue (cellErrorValue);
            break;
        case Cell.CELL_TYPE_FORMULA :
            String cellFormula = cellOld.getCellFormula ();
            cellNew.setCellFormula (cellFormula);
            break;
        case Cell.CELL_TYPE_NUMERIC :
            double numericCellValue = cellOld.getNumericCellValue ();
            cellNew.setCellValue (numericCellValue);
            break;
        case Cell.CELL_TYPE_STRING :
            String stringCellValue = cellOld.getStringCellValue ();
            cellNew.setCellValue (stringCellValue);
            break;
        default :
            System.out.println ("transform: Unbekannter Zellentyp " + cellOld.getCellType ());
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
989
0
Gpt3D_Clone989_0.java 1 18
Gpt3D_Clone989_0.java 19 45
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderRight (styleOld.getBorderRight ());
    styleNew.setBorderTop (styleOld.getBorderTop ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

private void transform(HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment(styleOld.getAlignment());
    styleNew.setBorderBottom(styleOld.getBorderBottom());
    styleNew.setBorderLeft(styleOld.getBorderLeft());
    styleNew.setBorderRight(styleOld.getBorderRight());
    styleNew.setBorderTop(styleOld.getBorderTop());
    styleNew.setDataFormat(this.transform(workbookOld, workbookNew, styleOld.getDataFormat()));
    styleNew.setFillBackgroundColor(styleOld.getFillBackgroundColor());
    styleNew.setFillForegroundColor(styleOld.getFillForegroundColor());
    styleNew.setFillPattern(styleOld.getFillPattern());
    styleNew.setFont(this.transform(workbookNew, styleOld.getFont(workbookOld)));
    styleNew.setHidden(styleOld.getHidden());
    styleNew.setIndention(styleOld.getIndention());
    styleNew.setLocked(styleOld.getLocked());
    styleNew.setVerticalAlignment(styleOld.getVerticalAlignment());
    styleNew.setWrapText(styleOld.getWrapText());
    this.styleMap.put(hash, styleNew);
    styleNew.setQuotePrefixed(styleOld.getQuotePrefixed());
    styleNew.setRotation(styleOld.getRotation());
    styleNew.setShrinkToFit(styleOld.getShrinkToFit());
    styleNew.setLeftBorderColor(styleOld.getLeftBorderColor());
    styleNew.setRightBorderColor(styleOld.getRightBorderColor());
    styleNew.setTopBorderColor(styleOld.getTopBorderColor());
    styleNew.setBottomBorderColor(styleOld.getBottomBorderColor());
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
989
1
Gpt3D_Clone989_1.java 1 18
Gpt3D_Clone989_1.java 19 41
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment (styleOld.getAlignment ());
    styleNew.setBorderBottom (styleOld.getBorderBottom ());
    styleNew.setBorderLeft (styleOld.getBorderLeft ());
    styleNew.setBorderRight (styleOld.getBorderRight ());
    styleNew.setBorderTop (styleOld.getBorderTop ());
    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));
    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());
    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());
    styleNew.setFillPattern (styleOld.getFillPattern ());
    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));
    styleNew.setHidden (styleOld.getHidden ());
    styleNew.setIndention (styleOld.getIndention ());
    styleNew.setLocked (styleOld.getLocked ());
    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());
    styleNew.setWrapText (styleOld.getWrapText ());
    this.styleMap.put (hash, styleNew);
}
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, Integer hash, HSSFCellStyle styleOld, XSSFCellStyle styleNew) {
    styleNew.setAlignment(styleOld.getAlignment());
    styleNew.setBorderBottom(styleOld.getBorderBottom());
    styleNew.setBorderLeft(styleOld.getBorderLeft());
    styleNew.setBorderRight(styleOld.getBorderRight());
    styleNew.setBorderTop(styleOld.getBorderTop());
    short dataFormat=this.convertDataFormat(workbookOld, workbookNew, styleOld.getDataFormat());
    styleNew.setDataFormat(dataFormat);
    styleNew.setFillBackgroundColor(styleOld.getFillBackgroundColor());
    styleNew.setFillForegroundColor(styleOld.getFillForegroundColor());
    styleNew.setFillPattern(styleOld.getFillPattern());
    HSSFFont oldFont=styleOld.getFont(workbookOld);
    XSSFFont newFont=this.cloneFont(workbookNew, oldFont);
    styleNew.setFont(newFont);
    styleNew.setHidden(styleOld.getHidden());
    styleNew.setIndention(styleOld.getIndention());
    styleNew.setLocked(styleOld.getLocked());
    styleNew.setVerticalAlignment(styleOld.getVerticalAlignment());
    styleNew.setWrapText(styleOld.getWrapText());
    this.styleMap.put(hash,styleNew);
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
999
0
Gpt3D_Clone999_0.java 1 9
Gpt3D_Clone999_0.java 10 26
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew){
    XSSFCell cellNew; 
    rowNew.setHeight(rowOld.getHeight());
    int lastCol = this.lastColumn; 
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);
        if (cell.getColumnIndex() > lastCol) {
            lastCol = cell.getColumnIndex(); 
        }
    }
    if (lastCol > this.lastColumn) {
        this.lastColumn = lastCol;
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
999
1
Gpt3D_Clone999_1.java 1 9
Gpt3D_Clone999_1.java 10 21
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew) {
    XSSFCell cellNew;
    rowNew.setHeight (rowOld.getHeight ());
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);
    }
    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());
}
----------------------------------------

private void transform (HSSFWorkbook workbookOld, XSSFWorkbook workbookNew, HSSFRow rowOld, XSSFRow rowNew){
    XSSFCell cellNew; 
    rowNew.setHeight(rowOld.getHeight());
    int oldLastCellNum = rowOld.getLastCellNum();
    if (this.lastColumn < oldLastCellNum) this.lastColumn = oldLastCellNum;
    for (Cell cell : rowOld) {
        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());
        if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
99
0
Gpt3D_Clone99_0.java 1 12
Gpt3D_Clone99_0.java 13 28
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
    else {
        if (Character.isLowerCase (character)) {
            typeCharacter (Character.toUpperCase (character));
        }
        else if (Character.isUpperCase (character)) {
            typeShiftCharacter (character);
        }
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
99
1
Gpt3D_Clone99_1.java 1 12
Gpt3D_Clone99_1.java 13 26
----------------------------------------

private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
}
----------------------------------------

 private void type (char character) {
    handleSpecialCharacter (character);
    if (Character.isDigit (character)) {
        typeCharacter (character);
    }
    else if (Character.isLowerCase (character)) {
        typeCharacter (Character.toUpperCase (character));
    }
    else if (Character.isUpperCase (character)) {
        typeShiftCharacter (character);
    }
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
9
0
Gpt3D_Clone9_0.java 1 13
Gpt3D_Clone9_0.java 14 29
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int variableTrue = 0;
    int variableFalse = 0;
    for (int x = 0;
    x < guess.length; x ++) {
        if (guess [x]) {
            variableTrue ++;
        } else {
            variableFalse ++;
        }
    }
    return variableTrue >= variableFalse;
}
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int x = 0;
    int variableTrue = 0;
    int variableFalse = 0;
    do {
        if (guess [x]) {
            variableTrue ++;
        } else {
            variableFalse ++;
        }
        x ++;
    } while (x < guess.length);
    return variableTrue >= variableFalse;
}
----------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
9
1
Gpt3D_Clone9_1.java 1 13
Gpt3D_Clone9_1.java 14 29
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int variableTrue = 0;
    int variableFalse = 0;
    for (int x = 0;
    x < guess.length; x ++) {
        if (guess [x]) {
            variableTrue ++;
        } else {
            variableFalse ++;
        }
    }
    return variableTrue >= variableFalse;
}
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int x = 0;
    int variableTrue = 0;
    int variableFalse = 0;
    while (x < guess.length) {
        if (guess [x]) {
            variableTrue ++;
        } else {
            variableFalse ++;
        }
        x ++;
    }
    return variableTrue >= variableFalse;
}
----------------------------------------

